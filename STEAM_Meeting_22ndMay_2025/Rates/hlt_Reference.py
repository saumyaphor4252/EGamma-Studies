# hltGetConfiguration /dev/CMSSW_15_0_0/GRun/V79 --full --offline --no-output --data --process MYHLT --type GRun --prescale 2p0E34+ZeroBias+HLTPhysics --globaltag 150X_dataRun3_HLT_v1 --max-events 100 --customise HLTrigger/Configuration/customizeHLTfor2025Studies.customizeHLTfor2024L1TMenu,HLTrigger/Configuration/customizeHLTfor2025Studies.customizeHLTfor2025Studies --path HLTriggerFirstPath,HLT_Ele30_WPTight_Gsf_v13,HLT_Ele32_WPTight_Gsf_v27,HLT_Ele115_CaloIdVT_GsfTrkIdT_v27,HLT_Ele135_CaloIdVT_GsfTrkIdT_v20,HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31,HLT_DoubleEle33_CaloIdL_MW_v30,HLTriggerFinalPath

# /dev/CMSSW_15_0_0/GRun/V79 (CMSSW_15_0_4_patch2)

import FWCore.ParameterSet.Config as cms

process = cms.Process( "MYHLT" )

process.load("Configuration.StandardSequences.Accelerators_cff")

process.HLTConfigVersion = cms.PSet(
  tableName = cms.string("/dev/CMSSW_15_0_0/GRun/V79")
)

process.HLTGroupedCkfTrajectoryBuilderP5 = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTCkfBaseTrajectoryFilterP5" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  seedAs5DHit = cms.bool( False ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESChi2MeasurementEstimatorForP5" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
process.HLTCkfBaseTrajectoryFilterP5 = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minHitsAtHighEta = cms.int32( 5 ),
  minPt = cms.double( 0.5 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  highEtaSwitch = cms.double( 5.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 4 )
)
process.HLTCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minHitsAtHighEta = cms.int32( 5 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  highEtaSwitch = cms.double( 5.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
process.HLTIter4PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter4PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPvClusterComparerForIT = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 1.0 )
)
process.HLTPSetMuonCkfTrajectoryBuilder = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  ComponentType = cms.string( "MuonCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( False ),
  deltaPhi = cms.double( -1.0 ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0HighPtTkMuPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPvClusterComparerForBTag = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 0.1 )
)
process.HLTIter2GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutTight = cms.PSet(  value = cms.double( 1945.0 ) )
process.HLTPSetMuonTrackingRegionBuilder8356 = cms.PSet( 
  Rescale_Dz = cms.double( 3.0 ),
  Pt_fixed = cms.bool( False ),
  Eta_fixed = cms.bool( False ),
  Eta_min = cms.double( 0.1 ),
  DeltaZ = cms.double( 15.9 ),
  maxRegions = cms.int32( 2 ),
  EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
  UseVertex = cms.bool( False ),
  Z_fixed = cms.bool( True ),
  PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
  PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
  Rescale_phi = cms.double( 3.0 ),
  DeltaEta = cms.double( 0.2 ),
  precise = cms.bool( True ),
  OnDemand = cms.int32( -1 ),
  EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
  MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
  vertexCollection = cms.InputTag( "pixelVertices" ),
  Pt_min = cms.double( 1.5 ),
  beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
  Phi_fixed = cms.bool( False ),
  DeltaR = cms.double( 0.2 ),
  input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
  DeltaPhi = cms.double( 0.2 ),
  Phi_min = cms.double( 0.1 ),
  Rescale_eta = cms.double( 3.0 )
)
process.HLTIter2PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetMuTrackJpsiTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetTrajectoryBuilderForGsfElectrons = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 90.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "hltESPBwdElectronPropagator" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryFilterForElectrons" ) ),
  propagatorAlong = cms.string( "hltESPFwdElectronPropagator" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutNone = cms.PSet(  value = cms.double( -1.0 ) )
process.HLTPSetMuonCkfTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter1PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSeedFromProtoTracks = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
process.HLTPSetMuTrackJpsiTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 10.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 8 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSeedFromConsecutiveHitsCreator = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterial" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
process.HLTSiStripClusterChargeCutForHI = cms.PSet(  value = cms.double( 2069.0 ) )
process.HLTPSetTrajectoryFilterForElectrons = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( -1 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0HighPtTkMuPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter1GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) )
)
process.HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSiStripClusterChargeCutLoose = cms.PSet(  value = cms.double( 1620.0 ) )
process.HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "StripSubClusterShapeTrajectoryFilter" ),
  subclusterCutSN = cms.double( 12.0 ),
  trimMaxADC = cms.double( 30.0 ),
  seedCutMIPs = cms.double( 0.35 ),
  subclusterCutMIPs = cms.double( 0.45 ),
  subclusterWindow = cms.double( 0.7 ),
  maxNSat = cms.uint32( 3 ),
  trimMaxFracNeigh = cms.double( 0.25 ),
  maxTrimmedSizeDiffNeg = cms.double( 1.0 ),
  seedCutSN = cms.double( 7.0 ),
  layerMask = cms.PSet( 
    TOB = cms.bool( False ),
    TIB = cms.vuint32( 1, 2 ),
    TID = cms.vuint32( 1, 2 ),
    TEC = cms.bool( False )
  ),
  maxTrimmedSizeDiffPos = cms.double( 0.7 ),
  trimMaxFracTotal = cms.double( 0.15 )
)
process.HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA" )    ),
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA" )    )
  )
)
process.HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetHighPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelLessStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetTobTecStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetJetCoreStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetMixedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 3.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtQuadStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 3.5 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetHighPtTripletStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.streams = cms.PSet( 
  ALCAHcalIsoTrk = cms.vstring( 'AlCaHcalIsoTrk' ),
  ALCALowPtJet = cms.vstring( 'AlCaLowPtJet' ),
  ALCALumiPixelsCountsExpress = cms.vstring( 'AlCaLumiPixelsCountsExpress' ),
  ALCALumiPixelsCountsPrompt = cms.vstring( 'AlCaLumiPixelsCountsPrompt' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  ALCAPPSExpress = cms.vstring( 'AlCaPPSExpress' ),
  ALCAPPSPrompt = cms.vstring( 'AlCaPPSPrompt' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcal' ),
  DQM = cms.vstring( 'OnlineMonitor' ),
  DQMCalibration = cms.vstring( 'TestEnablesEcalHcalDQM' ),
  DQMEventDisplay = cms.vstring( 'EventDisplay' ),
  DQMGPUvsCPU = cms.vstring( 'DQMGPUvsCPU' ),
  DQMOnlineBeamspot = cms.vstring( 'DQMOnlineBeamspot' ),
  DQMPPSRandom = cms.vstring( 'DQMPPSRandom' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  ExpressAlignment = cms.vstring( 'ExpressAlignment' ),
  HLTMonitor = cms.vstring( 'HLTMonitor' ),
  LocalTestDataRaw = cms.vstring( 'TestDataRaw' ),
  LocalTestDataScouting = cms.vstring( 'TestDataScouting' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  ParkingAnomalyDetection = cms.vstring( 'ParkingAnomalyDetection' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'ParkingDoubleMuonLowMass0',
    'ParkingDoubleMuonLowMass1' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'ParkingDoubleMuonLowMass2',
    'ParkingDoubleMuonLowMass3' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'ParkingDoubleMuonLowMass4',
    'ParkingDoubleMuonLowMass5' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'ParkingDoubleMuonLowMass6',
    'ParkingDoubleMuonLowMass7' ),
  ParkingHH = cms.vstring( 'ParkingHH0',
    'ParkingHH1' ),
  ParkingLLP = cms.vstring( 'ParkingLLP0',
    'ParkingLLP1' ),
  ParkingSingleMuon0 = cms.vstring( 'ParkingSingleMuon0' ),
  ParkingSingleMuon1 = cms.vstring( 'ParkingSingleMuon1' ),
  ParkingSingleMuon10 = cms.vstring( 'ParkingSingleMuon10' ),
  ParkingSingleMuon11 = cms.vstring( 'ParkingSingleMuon11' ),
  ParkingSingleMuon12 = cms.vstring( 'ParkingSingleMuon12' ),
  ParkingSingleMuon13 = cms.vstring( 'ParkingSingleMuon13' ),
  ParkingSingleMuon14 = cms.vstring( 'ParkingSingleMuon14' ),
  ParkingSingleMuon15 = cms.vstring( 'ParkingSingleMuon15' ),
  ParkingSingleMuon2 = cms.vstring( 'ParkingSingleMuon2' ),
  ParkingSingleMuon3 = cms.vstring( 'ParkingSingleMuon3' ),
  ParkingSingleMuon4 = cms.vstring( 'ParkingSingleMuon4' ),
  ParkingSingleMuon5 = cms.vstring( 'ParkingSingleMuon5' ),
  ParkingSingleMuon6 = cms.vstring( 'ParkingSingleMuon6' ),
  ParkingSingleMuon7 = cms.vstring( 'ParkingSingleMuon7' ),
  ParkingSingleMuon8 = cms.vstring( 'ParkingSingleMuon8' ),
  ParkingSingleMuon9 = cms.vstring( 'ParkingSingleMuon9' ),
  ParkingVBF0 = cms.vstring( 'ParkingVBF0',
    'ParkingVBF1' ),
  ParkingVBF1 = cms.vstring( 'ParkingVBF2',
    'ParkingVBF3' ),
  ParkingVBF2 = cms.vstring( 'ParkingVBF4',
    'ParkingVBF5' ),
  ParkingVBF3 = cms.vstring( 'ParkingVBF6',
    'ParkingVBF7' ),
  PhysicsBTagMuEGTau = cms.vstring( 'BTagMu',
    'MuonEG',
    'Tau' ),
  PhysicsCommissioning = cms.vstring( 'Commissioning',
    'Cosmics',
    'HLTPhysics',
    'HcalNZS',
    'MonteCarlo',
    'NoBPTX',
    'ZeroBias' ),
  PhysicsEGamma0 = cms.vstring( 'EGamma0' ),
  PhysicsEGamma1 = cms.vstring( 'EGamma1' ),
  PhysicsEGamma2 = cms.vstring( 'EGamma2' ),
  PhysicsEGamma3 = cms.vstring( 'EGamma3' ),
  PhysicsEmittanceScan0 = cms.vstring( 'EmittanceScan0',
    'EmittanceScan1' ),
  PhysicsEmittanceScan1 = cms.vstring( 'EmittanceScan2',
    'EmittanceScan3' ),
  PhysicsEmittanceScan2 = cms.vstring( 'EmittanceScan4',
    'EmittanceScan5' ),
  PhysicsHLTPhysics0 = cms.vstring( 'EphemeralHLTPhysics0',
    'EphemeralHLTPhysics1' ),
  PhysicsHLTPhysics1 = cms.vstring( 'EphemeralHLTPhysics2',
    'EphemeralHLTPhysics3' ),
  PhysicsHLTPhysics2 = cms.vstring( 'EphemeralHLTPhysics4',
    'EphemeralHLTPhysics5' ),
  PhysicsHLTPhysics3 = cms.vstring( 'EphemeralHLTPhysics6',
    'EphemeralHLTPhysics7' ),
  PhysicsJetMET0 = cms.vstring( 'JetMET0' ),
  PhysicsJetMET1 = cms.vstring( 'JetMET1' ),
  PhysicsMuon0 = cms.vstring( 'Muon0' ),
  PhysicsMuon1 = cms.vstring( 'Muon1' ),
  PhysicsScoutingPFMonitor = cms.vstring( 'ScoutingPFMonitor' ),
  PhysicsZeroBias0 = cms.vstring( 'EphemeralZeroBias0',
    'EphemeralZeroBias1' ),
  PhysicsZeroBias1 = cms.vstring( 'EphemeralZeroBias2',
    'EphemeralZeroBias3' ),
  PhysicsZeroBias2 = cms.vstring( 'EphemeralZeroBias4',
    'EphemeralZeroBias5' ),
  PhysicsZeroBias3 = cms.vstring( 'EphemeralZeroBias6',
    'EphemeralZeroBias7' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  ScoutingPF = cms.vstring( 'ScoutingPFRun3' )
)
process.datasets = cms.PSet( 
  AlCaHcalIsoTrk = cms.vstring( 'AlCa_IsoTrackHBHE_v1' ),
  AlCaLowPtJet = cms.vstring( 'AlCa_AK8PFJet40_v29',
    'AlCa_PFJet40_v34' ),
  AlCaLumiPixelsCountsExpress = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v12' ),
  AlCaLumiPixelsCountsPrompt = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v12',
    'AlCa_LumiPixelsCounts_ZeroBias_v14' ),
  AlCaP0 = cms.vstring( 'AlCa_EcalEtaEBonly_v26',
    'AlCa_EcalEtaEEonly_v26',
    'AlCa_EcalPi0EBonly_v26',
    'AlCa_EcalPi0EEonly_v26' ),
  AlCaPPSExpress = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v10',
    'HLT_PPSMaxTracksPerRP4_v10' ),
  AlCaPPSPrompt = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v10',
    'HLT_PPSMaxTracksPerRP4_v10' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSym_v21' ),
  BTagMu = cms.vstring( 'HLT_BTagMu_AK4DiJet110_Mu5_v27',
    'HLT_BTagMu_AK4DiJet170_Mu5_v26',
    'HLT_BTagMu_AK4DiJet20_Mu5_v27',
    'HLT_BTagMu_AK4DiJet40_Mu5_v27',
    'HLT_BTagMu_AK4DiJet70_Mu5_v27',
    'HLT_BTagMu_AK4Jet300_Mu5_v26',
    'HLT_BTagMu_AK8DiJet170_Mu5_v23',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v16',
    'HLT_BTagMu_AK8Jet300_Mu5_v26' ),
  Commissioning = cms.vstring( 'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v10',
    'HLT_PFJet40_GPUvsCPU_v8' ),
  Cosmics = cms.vstring( 'HLT_L1SingleMuCosmics_v9' ),
  DQMGPUvsCPU = cms.vstring( 'DQM_EcalReconstruction_v13',
    'DQM_HcalReconstruction_v11',
    'DQM_PixelReconstruction_v13' ),
  DQMOnlineBeamspot = cms.vstring( 'HLT_HT300_Beamspot_v25',
    'HLT_ZeroBias_Beamspot_v18' ),
  DQMPPSRandom = cms.vstring( 'HLT_PPSRandom_v1' ),
  EGamma0 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v15',
    'HLT_DiPhoton10Time1ns_v11',
    'HLT_DiPhoton10Time1p2ns_v11',
    'HLT_DiPhoton10Time1p4ns_v11',
    'HLT_DiPhoton10Time1p6ns_v11',
    'HLT_DiPhoton10Time1p8ns_v11',
    'HLT_DiPhoton10Time2ns_v11',
    'HLT_DiPhoton10_CaloIdL_v11',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v25',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v13',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v13',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v25',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v25',
    'HLT_DiphotonMVA14p25_High_Mass60_v1',
    'HLT_DiphotonMVA14p25_Low_Mass60_v1',
    'HLT_DiphotonMVA14p25_Medium_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightHigh_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightLow_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightMedium_Mass60_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v12',
    'HLT_DoubleEle25_CaloIdL_MW_v17',
    'HLT_DoubleEle27_CaloIdL_MW_v17',
    'HLT_DoubleEle33_CaloIdL_MW_v30',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v12',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v34',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v34',
    'HLT_DoubleEle8_eta1p22_mMax6_v12',
    'HLT_DoublePhoton33_CaloIdL_v18',
    'HLT_DoublePhoton70_v18',
    'HLT_DoublePhoton85_v26',
    'HLT_ECALHT800_v22',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v27',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v20',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v7',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v30',
    'HLT_Ele15_IsoVVVL_PFHT450_v30',
    'HLT_Ele15_IsoVVVL_PFHT600_v34',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v31',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v8',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v8',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v8',
    'HLT_Ele28_HighEta_SC20_Mass55_v25',
    'HLT_Ele30_WPTight_Gsf_v13',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v21',
    'HLT_Ele32_WPTight_Gsf_v27',
    'HLT_Ele35_WPTight_Gsf_v21',
    'HLT_Ele38_WPTight_Gsf_v21',
    'HLT_Ele40_WPTight_Gsf_v21',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v32',
    'HLT_Ele50_IsoVVVL_PFHT450_v30',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Photon100EBHE10_v13',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon110EB_TightID_TightIso_v14',
    'HLT_Photon120_R9Id90_HE10_IsoM_v26',
    'HLT_Photon120_v24',
    'HLT_Photon150_v18',
    'HLT_Photon165_R9Id90_HE10_IsoM_v27',
    'HLT_Photon175_v26',
    'HLT_Photon200_v25',
    'HLT_Photon20_HoverELoose_v21',
    'HLT_Photon300_NoHE_v24',
    'HLT_Photon30EB_TightID_TightIso_v14',
    'HLT_Photon30_HoverELoose_v21',
    'HLT_Photon32_OneProng32_M50To105_v12',
    'HLT_Photon33_v16',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v10',
    'HLT_Photon35_TwoProngs35_v15',
    'HLT_Photon40EB_TightID_TightIso_v5',
    'HLT_Photon40EB_v4',
    'HLT_Photon45EB_TightID_TightIso_v5',
    'HLT_Photon45EB_v4',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon50EB_TightID_TightIso_v10',
    'HLT_Photon50EB_v5',
    'HLT_Photon50_R9Id90_HE10_IsoM_v26',
    'HLT_Photon50_TimeGt2p5ns_v8',
    'HLT_Photon50_TimeLtNeg2p5ns_v8',
    'HLT_Photon50_v24',
    'HLT_Photon55EB_TightID_TightIso_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v12',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
    'HLT_Photon75EB_TightID_TightIso_v10',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v19',
    'HLT_Photon75_R9Id90_HE10_IsoM_v26',
    'HLT_Photon75_v24',
    'HLT_Photon90EB_TightID_TightIso_v10',
    'HLT_Photon90_R9Id90_HE10_IsoM_v26',
    'HLT_Photon90_v24',
    'HLT_SingleEle8_SingleEGL1_v11',
    'HLT_SingleEle8_v11' ),
  EGamma1 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v15',
    'HLT_DiPhoton10Time1ns_v11',
    'HLT_DiPhoton10Time1p2ns_v11',
    'HLT_DiPhoton10Time1p4ns_v11',
    'HLT_DiPhoton10Time1p6ns_v11',
    'HLT_DiPhoton10Time1p8ns_v11',
    'HLT_DiPhoton10Time2ns_v11',
    'HLT_DiPhoton10_CaloIdL_v11',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v25',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v13',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v13',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v25',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v25',
    'HLT_DiphotonMVA14p25_High_Mass60_v1',
    'HLT_DiphotonMVA14p25_Low_Mass60_v1',
    'HLT_DiphotonMVA14p25_Medium_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightHigh_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightLow_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightMedium_Mass60_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v12',
    'HLT_DoubleEle25_CaloIdL_MW_v17',
    'HLT_DoubleEle27_CaloIdL_MW_v17',
    'HLT_DoubleEle33_CaloIdL_MW_v30',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v12',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v34',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v34',
    'HLT_DoubleEle8_eta1p22_mMax6_v12',
    'HLT_DoublePhoton33_CaloIdL_v18',
    'HLT_DoublePhoton70_v18',
    'HLT_DoublePhoton85_v26',
    'HLT_ECALHT800_v22',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v27',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v20',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v7',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v30',
    'HLT_Ele15_IsoVVVL_PFHT450_v30',
    'HLT_Ele15_IsoVVVL_PFHT600_v34',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v31',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v8',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v8',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v8',
    'HLT_Ele28_HighEta_SC20_Mass55_v25',
    'HLT_Ele30_WPTight_Gsf_v13',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v21',
    'HLT_Ele32_WPTight_Gsf_v27',
    'HLT_Ele35_WPTight_Gsf_v21',
    'HLT_Ele38_WPTight_Gsf_v21',
    'HLT_Ele40_WPTight_Gsf_v21',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v32',
    'HLT_Ele50_IsoVVVL_PFHT450_v30',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Photon100EBHE10_v13',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon110EB_TightID_TightIso_v14',
    'HLT_Photon120_R9Id90_HE10_IsoM_v26',
    'HLT_Photon120_v24',
    'HLT_Photon150_v18',
    'HLT_Photon165_R9Id90_HE10_IsoM_v27',
    'HLT_Photon175_v26',
    'HLT_Photon200_v25',
    'HLT_Photon20_HoverELoose_v21',
    'HLT_Photon300_NoHE_v24',
    'HLT_Photon30EB_TightID_TightIso_v14',
    'HLT_Photon30_HoverELoose_v21',
    'HLT_Photon32_OneProng32_M50To105_v12',
    'HLT_Photon33_v16',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v10',
    'HLT_Photon35_TwoProngs35_v15',
    'HLT_Photon40EB_TightID_TightIso_v5',
    'HLT_Photon40EB_v4',
    'HLT_Photon45EB_TightID_TightIso_v5',
    'HLT_Photon45EB_v4',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon50EB_TightID_TightIso_v10',
    'HLT_Photon50EB_v5',
    'HLT_Photon50_R9Id90_HE10_IsoM_v26',
    'HLT_Photon50_TimeGt2p5ns_v8',
    'HLT_Photon50_TimeLtNeg2p5ns_v8',
    'HLT_Photon50_v24',
    'HLT_Photon55EB_TightID_TightIso_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v12',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
    'HLT_Photon75EB_TightID_TightIso_v10',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v19',
    'HLT_Photon75_R9Id90_HE10_IsoM_v26',
    'HLT_Photon75_v24',
    'HLT_Photon90EB_TightID_TightIso_v10',
    'HLT_Photon90_R9Id90_HE10_IsoM_v26',
    'HLT_Photon90_v24',
    'HLT_SingleEle8_SingleEGL1_v11',
    'HLT_SingleEle8_v11' ),
  EGamma2 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v15',
    'HLT_DiPhoton10Time1ns_v11',
    'HLT_DiPhoton10Time1p2ns_v11',
    'HLT_DiPhoton10Time1p4ns_v11',
    'HLT_DiPhoton10Time1p6ns_v11',
    'HLT_DiPhoton10Time1p8ns_v11',
    'HLT_DiPhoton10Time2ns_v11',
    'HLT_DiPhoton10_CaloIdL_v11',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v25',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v13',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v13',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v25',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v25',
    'HLT_DiphotonMVA14p25_High_Mass60_v1',
    'HLT_DiphotonMVA14p25_Low_Mass60_v1',
    'HLT_DiphotonMVA14p25_Medium_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightHigh_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightLow_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightMedium_Mass60_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v12',
    'HLT_DoubleEle25_CaloIdL_MW_v17',
    'HLT_DoubleEle27_CaloIdL_MW_v17',
    'HLT_DoubleEle33_CaloIdL_MW_v30',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v12',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v34',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v34',
    'HLT_DoubleEle8_eta1p22_mMax6_v12',
    'HLT_DoublePhoton33_CaloIdL_v18',
    'HLT_DoublePhoton70_v18',
    'HLT_DoublePhoton85_v26',
    'HLT_ECALHT800_v22',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v27',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v20',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v7',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v30',
    'HLT_Ele15_IsoVVVL_PFHT450_v30',
    'HLT_Ele15_IsoVVVL_PFHT600_v34',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v31',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v8',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v8',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v8',
    'HLT_Ele28_HighEta_SC20_Mass55_v25',
    'HLT_Ele30_WPTight_Gsf_v13',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v21',
    'HLT_Ele32_WPTight_Gsf_v27',
    'HLT_Ele35_WPTight_Gsf_v21',
    'HLT_Ele38_WPTight_Gsf_v21',
    'HLT_Ele40_WPTight_Gsf_v21',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v32',
    'HLT_Ele50_IsoVVVL_PFHT450_v30',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Photon100EBHE10_v13',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon110EB_TightID_TightIso_v14',
    'HLT_Photon120_R9Id90_HE10_IsoM_v26',
    'HLT_Photon120_v24',
    'HLT_Photon150_v18',
    'HLT_Photon165_R9Id90_HE10_IsoM_v27',
    'HLT_Photon175_v26',
    'HLT_Photon200_v25',
    'HLT_Photon20_HoverELoose_v21',
    'HLT_Photon300_NoHE_v24',
    'HLT_Photon30EB_TightID_TightIso_v14',
    'HLT_Photon30_HoverELoose_v21',
    'HLT_Photon32_OneProng32_M50To105_v12',
    'HLT_Photon33_v16',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v10',
    'HLT_Photon35_TwoProngs35_v15',
    'HLT_Photon40EB_TightID_TightIso_v5',
    'HLT_Photon40EB_v4',
    'HLT_Photon45EB_TightID_TightIso_v5',
    'HLT_Photon45EB_v4',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon50EB_TightID_TightIso_v10',
    'HLT_Photon50EB_v5',
    'HLT_Photon50_R9Id90_HE10_IsoM_v26',
    'HLT_Photon50_TimeGt2p5ns_v8',
    'HLT_Photon50_TimeLtNeg2p5ns_v8',
    'HLT_Photon50_v24',
    'HLT_Photon55EB_TightID_TightIso_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v12',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
    'HLT_Photon75EB_TightID_TightIso_v10',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v19',
    'HLT_Photon75_R9Id90_HE10_IsoM_v26',
    'HLT_Photon75_v24',
    'HLT_Photon90EB_TightID_TightIso_v10',
    'HLT_Photon90_R9Id90_HE10_IsoM_v26',
    'HLT_Photon90_v24',
    'HLT_SingleEle8_SingleEGL1_v11',
    'HLT_SingleEle8_v11' ),
  EGamma3 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v15',
    'HLT_DiPhoton10Time1ns_v11',
    'HLT_DiPhoton10Time1p2ns_v11',
    'HLT_DiPhoton10Time1p4ns_v11',
    'HLT_DiPhoton10Time1p6ns_v11',
    'HLT_DiPhoton10Time1p8ns_v11',
    'HLT_DiPhoton10Time2ns_v11',
    'HLT_DiPhoton10_CaloIdL_v11',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v25',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v13',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v13',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v25',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v25',
    'HLT_DiphotonMVA14p25_High_Mass60_v1',
    'HLT_DiphotonMVA14p25_Low_Mass60_v1',
    'HLT_DiphotonMVA14p25_Medium_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightHigh_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightLow_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightMedium_Mass60_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v12',
    'HLT_DoubleEle25_CaloIdL_MW_v17',
    'HLT_DoubleEle27_CaloIdL_MW_v17',
    'HLT_DoubleEle33_CaloIdL_MW_v30',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v12',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v34',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v34',
    'HLT_DoubleEle8_eta1p22_mMax6_v12',
    'HLT_DoublePhoton33_CaloIdL_v18',
    'HLT_DoublePhoton70_v18',
    'HLT_DoublePhoton85_v26',
    'HLT_ECALHT800_v22',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v27',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v20',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v7',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v30',
    'HLT_Ele15_IsoVVVL_PFHT450_v30',
    'HLT_Ele15_IsoVVVL_PFHT600_v34',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v31',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v8',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v8',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v8',
    'HLT_Ele28_HighEta_SC20_Mass55_v25',
    'HLT_Ele30_WPTight_Gsf_v13',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v21',
    'HLT_Ele32_WPTight_Gsf_v27',
    'HLT_Ele35_WPTight_Gsf_v21',
    'HLT_Ele38_WPTight_Gsf_v21',
    'HLT_Ele40_WPTight_Gsf_v21',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v32',
    'HLT_Ele50_IsoVVVL_PFHT450_v30',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Photon100EBHE10_v13',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon110EB_TightID_TightIso_v14',
    'HLT_Photon120_R9Id90_HE10_IsoM_v26',
    'HLT_Photon120_v24',
    'HLT_Photon150_v18',
    'HLT_Photon165_R9Id90_HE10_IsoM_v27',
    'HLT_Photon175_v26',
    'HLT_Photon200_v25',
    'HLT_Photon20_HoverELoose_v21',
    'HLT_Photon300_NoHE_v24',
    'HLT_Photon30EB_TightID_TightIso_v14',
    'HLT_Photon30_HoverELoose_v21',
    'HLT_Photon32_OneProng32_M50To105_v12',
    'HLT_Photon33_v16',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v10',
    'HLT_Photon35_TwoProngs35_v15',
    'HLT_Photon40EB_TightID_TightIso_v5',
    'HLT_Photon40EB_v4',
    'HLT_Photon45EB_TightID_TightIso_v5',
    'HLT_Photon45EB_v4',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon50EB_TightID_TightIso_v10',
    'HLT_Photon50EB_v5',
    'HLT_Photon50_R9Id90_HE10_IsoM_v26',
    'HLT_Photon50_TimeGt2p5ns_v8',
    'HLT_Photon50_TimeLtNeg2p5ns_v8',
    'HLT_Photon50_v24',
    'HLT_Photon55EB_TightID_TightIso_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v12',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
    'HLT_Photon75EB_TightID_TightIso_v10',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v19',
    'HLT_Photon75_R9Id90_HE10_IsoM_v26',
    'HLT_Photon75_v24',
    'HLT_Photon90EB_TightID_TightIso_v10',
    'HLT_Photon90_R9Id90_HE10_IsoM_v26',
    'HLT_Photon90_v24',
    'HLT_SingleEle8_SingleEGL1_v11',
    'HLT_SingleEle8_v11' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v4' ),
  EmittanceScan0 = cms.vstring( 'HLT_L1AlwaysTrue_v1' ),
  EmittanceScan1 = cms.vstring( 'HLT_L1AlwaysTrue_v1' ),
  EmittanceScan2 = cms.vstring( 'HLT_L1AlwaysTrue_v1' ),
  EmittanceScan3 = cms.vstring( 'HLT_L1AlwaysTrue_v1' ),
  EmittanceScan4 = cms.vstring( 'HLT_L1AlwaysTrue_v1' ),
  EmittanceScan5 = cms.vstring( 'HLT_L1AlwaysTrue_v1' ),
  EphemeralHLTPhysics0 = cms.vstring( 'HLT_EphemeralPhysics_v10' ),
  EphemeralHLTPhysics1 = cms.vstring( 'HLT_EphemeralPhysics_v10' ),
  EphemeralHLTPhysics2 = cms.vstring( 'HLT_EphemeralPhysics_v10' ),
  EphemeralHLTPhysics3 = cms.vstring( 'HLT_EphemeralPhysics_v10' ),
  EphemeralHLTPhysics4 = cms.vstring( 'HLT_EphemeralPhysics_v10' ),
  EphemeralHLTPhysics5 = cms.vstring( 'HLT_EphemeralPhysics_v10' ),
  EphemeralHLTPhysics6 = cms.vstring( 'HLT_EphemeralPhysics_v10' ),
  EphemeralHLTPhysics7 = cms.vstring( 'HLT_EphemeralPhysics_v10' ),
  EphemeralZeroBias0 = cms.vstring( 'HLT_EphemeralZeroBias_v10' ),
  EphemeralZeroBias1 = cms.vstring( 'HLT_EphemeralZeroBias_v10' ),
  EphemeralZeroBias2 = cms.vstring( 'HLT_EphemeralZeroBias_v10' ),
  EphemeralZeroBias3 = cms.vstring( 'HLT_EphemeralZeroBias_v10' ),
  EphemeralZeroBias4 = cms.vstring( 'HLT_EphemeralZeroBias_v10' ),
  EphemeralZeroBias5 = cms.vstring( 'HLT_EphemeralZeroBias_v10' ),
  EphemeralZeroBias6 = cms.vstring( 'HLT_EphemeralZeroBias_v10' ),
  EphemeralZeroBias7 = cms.vstring( 'HLT_EphemeralZeroBias_v10' ),
  EventDisplay = cms.vstring( 'HLT_DoublePhoton85_v26',
    'HLT_PFJet500_v35',
    'HLT_Physics_v15' ),
  ExpressAlignment = cms.vstring( 'HLT_HT300_Beamspot_v25',
    'HLT_ZeroBias_Beamspot_v18' ),
  ExpressPhysics = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v31',
    'HLT_IsoMu20_v29',
    'HLT_IsoMu24_v27',
    'HLT_IsoMu27_v30',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v19',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v29',
    'HLT_Physics_v15',
    'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v9',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v13',
    'HLT_ZeroBias_IsolatedBunches_v13',
    'HLT_ZeroBias_v14' ),
  HLTMonitor = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v31',
    'HLT_Ele32_WPTight_Gsf_v27',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v14',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v25',
    'HLT_HT550_DisplacedDijet60_Inclusive_v25',
    'HLT_IsoMu24_HLTTracking_v2',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v14',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_HLTTracking_v2',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_HLTTracking_v2',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v15',
    'HLT_PFHT510_v31',
    'HLT_PFJet260_v34',
    'HLT_PFJet320_v34',
    'HLT_PFMET130_PFMHT130_IDTight_v34',
    'HLT_PFMET140_PFMHT140_IDTight_v34' ),
  HLTPhysics = cms.vstring( 'HLT_Physics_v15' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v22',
    'HLT_HcalPhiSym_v24' ),
  JetMET0 = cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v8',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v8',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v8',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v8',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v8',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v14',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v8',
    'HLT_AK8PFJet140_v29',
    'HLT_AK8PFJet200_v29',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v11',
    'HLT_AK8PFJet220_SoftDropMass40_v15',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet230_SoftDropMass40_v15',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet260_v30',
    'HLT_AK8PFJet275_Nch40_v8',
    'HLT_AK8PFJet275_Nch45_v8',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet320_v30',
    'HLT_AK8PFJet380_SoftDropMass30_v8',
    'HLT_AK8PFJet400_SoftDropMass30_v8',
    'HLT_AK8PFJet400_v30',
    'HLT_AK8PFJet40_v30',
    'HLT_AK8PFJet425_SoftDropMass30_v8',
    'HLT_AK8PFJet450_SoftDropMass30_v8',
    'HLT_AK8PFJet450_v30',
    'HLT_AK8PFJet500_v30',
    'HLT_AK8PFJet550_v25',
    'HLT_AK8PFJet60_v29',
    'HLT_AK8PFJet80_v30',
    'HLT_AK8PFJetFwd140_v28',
    'HLT_AK8PFJetFwd200_v28',
    'HLT_AK8PFJetFwd260_v29',
    'HLT_AK8PFJetFwd320_v29',
    'HLT_AK8PFJetFwd400_v29',
    'HLT_AK8PFJetFwd40_v29',
    'HLT_AK8PFJetFwd450_v29',
    'HLT_AK8PFJetFwd500_v29',
    'HLT_AK8PFJetFwd60_v28',
    'HLT_AK8PFJetFwd80_v28',
    'HLT_CaloJet500_NoJetID_v24',
    'HLT_CaloJet550_NoJetID_v19',
    'HLT_CaloMET350_NotCleaned_v16',
    'HLT_CaloMET90_NotCleaned_v16',
    'HLT_CaloMHT90_v16',
    'HLT_DiPFJetAve100_HFJEC_v31',
    'HLT_DiPFJetAve140_v27',
    'HLT_DiPFJetAve160_HFJEC_v30',
    'HLT_DiPFJetAve180_PPSMatch_Xi0p3_QuadJet_Max2ProtPerRP_v8',
    'HLT_DiPFJetAve200_v27',
    'HLT_DiPFJetAve220_HFJEC_v30',
    'HLT_DiPFJetAve260_HFJEC_v13',
    'HLT_DiPFJetAve260_v28',
    'HLT_DiPFJetAve300_HFJEC_v30',
    'HLT_DiPFJetAve320_v28',
    'HLT_DiPFJetAve400_v28',
    'HLT_DiPFJetAve40_v28',
    'HLT_DiPFJetAve500_v28',
    'HLT_DiPFJetAve60_HFJEC_v29',
    'HLT_DiPFJetAve60_v28',
    'HLT_DiPFJetAve80_HFJEC_v31',
    'HLT_DiPFJetAve80_v28',
    'HLT_DoublePFJets100_PNetBTag_0p11_v8',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_DoublePFJets200_PNetBTag_0p11_v8',
    'HLT_DoublePFJets350_PNetBTag_0p11_v8',
    'HLT_DoublePFJets40_PNetBTag_0p11_v8',
    'HLT_HT350_v9',
    'HLT_HT425_v21',
    'HLT_L1ETMHadSeeds_v11',
    'HLT_L1Mu6HT240_v10',
    'HLT_MET105_IsoTrk50_v21',
    'HLT_MET120_IsoTrk50_v21',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_Mu12eta2p3_PFJet40_v15',
    'HLT_Mu12eta2p3_v15',
    'HLT_PFHT1050_v32',
    'HLT_PFHT180_v31',
    'HLT_PFHT250_v31',
    'HLT_PFHT350_v33',
    'HLT_PFHT370_v31',
    'HLT_PFHT430_v31',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v26',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v26',
    'HLT_PFHT510_v31',
    'HLT_PFHT590_v31',
    'HLT_PFHT680_v31',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v26',
    'HLT_PFHT780_v31',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v26',
    'HLT_PFHT890_v31',
    'HLT_PFJet110_v14',
    'HLT_PFJet140_v33',
    'HLT_PFJet200_v33',
    'HLT_PFJet260_v34',
    'HLT_PFJet320_v34',
    'HLT_PFJet400_v34',
    'HLT_PFJet40_v35',
    'HLT_PFJet450_v35',
    'HLT_PFJet500_v35',
    'HLT_PFJet550_v25',
    'HLT_PFJet60_v35',
    'HLT_PFJet80_v35',
    'HLT_PFJetFwd140_v32',
    'HLT_PFJetFwd200_v32',
    'HLT_PFJetFwd260_v33',
    'HLT_PFJetFwd320_v33',
    'HLT_PFJetFwd400_v33',
    'HLT_PFJetFwd40_v33',
    'HLT_PFJetFwd450_v33',
    'HLT_PFJetFwd500_v33',
    'HLT_PFJetFwd60_v33',
    'HLT_PFJetFwd80_v32',
    'HLT_PFMET105_IsoTrk50_v15',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v23',
    'HLT_PFMET120_PFMHT120_IDTight_v34',
    'HLT_PFMET130_PFMHT130_IDTight_v34',
    'HLT_PFMET140_PFMHT140_IDTight_v34',
    'HLT_PFMET200_BeamHaloCleaned_v23',
    'HLT_PFMET200_NotCleaned_v23',
    'HLT_PFMET250_NotCleaned_v23',
    'HLT_PFMET300_NotCleaned_v23',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v23',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v34',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v33',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v33',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v25',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v23' ),
  JetMET1 = cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v8',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v8',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v8',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v8',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v8',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v14',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v8',
    'HLT_AK8PFJet140_v29',
    'HLT_AK8PFJet200_v29',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v11',
    'HLT_AK8PFJet220_SoftDropMass40_v15',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet230_SoftDropMass40_v15',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet260_v30',
    'HLT_AK8PFJet275_Nch40_v8',
    'HLT_AK8PFJet275_Nch45_v8',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet320_v30',
    'HLT_AK8PFJet380_SoftDropMass30_v8',
    'HLT_AK8PFJet400_SoftDropMass30_v8',
    'HLT_AK8PFJet400_v30',
    'HLT_AK8PFJet40_v30',
    'HLT_AK8PFJet425_SoftDropMass30_v8',
    'HLT_AK8PFJet450_SoftDropMass30_v8',
    'HLT_AK8PFJet450_v30',
    'HLT_AK8PFJet500_v30',
    'HLT_AK8PFJet550_v25',
    'HLT_AK8PFJet60_v29',
    'HLT_AK8PFJet80_v30',
    'HLT_AK8PFJetFwd140_v28',
    'HLT_AK8PFJetFwd200_v28',
    'HLT_AK8PFJetFwd260_v29',
    'HLT_AK8PFJetFwd320_v29',
    'HLT_AK8PFJetFwd400_v29',
    'HLT_AK8PFJetFwd40_v29',
    'HLT_AK8PFJetFwd450_v29',
    'HLT_AK8PFJetFwd500_v29',
    'HLT_AK8PFJetFwd60_v28',
    'HLT_AK8PFJetFwd80_v28',
    'HLT_CaloJet500_NoJetID_v24',
    'HLT_CaloJet550_NoJetID_v19',
    'HLT_CaloMET350_NotCleaned_v16',
    'HLT_CaloMET90_NotCleaned_v16',
    'HLT_CaloMHT90_v16',
    'HLT_DiPFJetAve100_HFJEC_v31',
    'HLT_DiPFJetAve140_v27',
    'HLT_DiPFJetAve160_HFJEC_v30',
    'HLT_DiPFJetAve180_PPSMatch_Xi0p3_QuadJet_Max2ProtPerRP_v8',
    'HLT_DiPFJetAve200_v27',
    'HLT_DiPFJetAve220_HFJEC_v30',
    'HLT_DiPFJetAve260_HFJEC_v13',
    'HLT_DiPFJetAve260_v28',
    'HLT_DiPFJetAve300_HFJEC_v30',
    'HLT_DiPFJetAve320_v28',
    'HLT_DiPFJetAve400_v28',
    'HLT_DiPFJetAve40_v28',
    'HLT_DiPFJetAve500_v28',
    'HLT_DiPFJetAve60_HFJEC_v29',
    'HLT_DiPFJetAve60_v28',
    'HLT_DiPFJetAve80_HFJEC_v31',
    'HLT_DiPFJetAve80_v28',
    'HLT_DoublePFJets100_PNetBTag_0p11_v8',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_DoublePFJets200_PNetBTag_0p11_v8',
    'HLT_DoublePFJets350_PNetBTag_0p11_v8',
    'HLT_DoublePFJets40_PNetBTag_0p11_v8',
    'HLT_HT350_v9',
    'HLT_HT425_v21',
    'HLT_L1ETMHadSeeds_v11',
    'HLT_L1Mu6HT240_v10',
    'HLT_MET105_IsoTrk50_v21',
    'HLT_MET120_IsoTrk50_v21',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_Mu12eta2p3_PFJet40_v15',
    'HLT_Mu12eta2p3_v15',
    'HLT_PFHT1050_v32',
    'HLT_PFHT180_v31',
    'HLT_PFHT250_v31',
    'HLT_PFHT350_v33',
    'HLT_PFHT370_v31',
    'HLT_PFHT430_v31',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v26',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v26',
    'HLT_PFHT510_v31',
    'HLT_PFHT590_v31',
    'HLT_PFHT680_v31',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v26',
    'HLT_PFHT780_v31',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v26',
    'HLT_PFHT890_v31',
    'HLT_PFJet110_v14',
    'HLT_PFJet140_v33',
    'HLT_PFJet200_v33',
    'HLT_PFJet260_v34',
    'HLT_PFJet320_v34',
    'HLT_PFJet400_v34',
    'HLT_PFJet40_v35',
    'HLT_PFJet450_v35',
    'HLT_PFJet500_v35',
    'HLT_PFJet550_v25',
    'HLT_PFJet60_v35',
    'HLT_PFJet80_v35',
    'HLT_PFJetFwd140_v32',
    'HLT_PFJetFwd200_v32',
    'HLT_PFJetFwd260_v33',
    'HLT_PFJetFwd320_v33',
    'HLT_PFJetFwd400_v33',
    'HLT_PFJetFwd40_v33',
    'HLT_PFJetFwd450_v33',
    'HLT_PFJetFwd500_v33',
    'HLT_PFJetFwd60_v33',
    'HLT_PFJetFwd80_v32',
    'HLT_PFMET105_IsoTrk50_v15',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v23',
    'HLT_PFMET120_PFMHT120_IDTight_v34',
    'HLT_PFMET130_PFMHT130_IDTight_v34',
    'HLT_PFMET140_PFMHT140_IDTight_v34',
    'HLT_PFMET200_BeamHaloCleaned_v23',
    'HLT_PFMET200_NotCleaned_v23',
    'HLT_PFMET250_NotCleaned_v23',
    'HLT_PFMET300_NotCleaned_v23',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v23',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v34',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v33',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v33',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v25',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v23' ),
  L1Accept = cms.vstring( 'DST_Physics_v17',
    'DST_ZeroBias_v12' ),
  MonteCarlo = cms.vstring( 'MC_AK4CaloJetsFromPV_v20',
    'MC_AK4CaloJets_v21',
    'MC_AK4PFJetPNet_v7',
    'MC_AK4PFJets_v31',
    'MC_AK8CaloHT_v20',
    'MC_AK8PFHT_v30',
    'MC_AK8PFJetPNet_v7',
    'MC_AK8PFJets_v31',
    'MC_CaloHT_v20',
    'MC_CaloMET_JetIdCleaned_v21',
    'MC_CaloMET_v20',
    'MC_CaloMHT_v20',
    'MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v25',
    'MC_DoubleEle5_CaloIdL_MW_v28',
    'MC_DoubleMuNoFiltersNoVtx_v19',
    'MC_DoubleMu_TrkIsoVVL_DZ_v25',
    'MC_Egamma_Open_Unseeded_v10',
    'MC_Egamma_Open_v10',
    'MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'MC_Ele5_WPTight_Gsf_v20',
    'MC_IsoMu_v29',
    'MC_PFHT_v30',
    'MC_PFMET_v31',
    'MC_PFMHT_v30',
    'MC_PFScouting_v8',
    'MC_ReducedIterativeTracking_v24' ),
  Muon0 = cms.vstring( 'HLT_CascadeMu100_v15',
    'HLT_CscCluster100_Ele5_v6',
    'HLT_CscCluster100_Mu5_v8',
    'HLT_CscCluster100_PNetTauhPFJet10_Loose_v8',
    'HLT_CscCluster50_Photon20Unseeded_v5',
    'HLT_CscCluster50_Photon30Unseeded_v5',
    'HLT_CscCluster_Loose_v11',
    'HLT_CscCluster_Medium_v11',
    'HLT_CscCluster_Tight_v11',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v10',
    'HLT_DoubleCscCluster100_v8',
    'HLT_DoubleCscCluster75_v8',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v14',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v12',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v12',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v12',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v12',
    'HLT_DoubleL2Mu50_v12',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v12',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v12',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v13',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v24',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v24',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v24',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v24',
    'HLT_DoubleMu43NoFiltersNoVtx_v16',
    'HLT_DoubleMu48NoFiltersNoVtx_v16',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v22',
    'HLT_HighPtTkMu100_v14',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v8',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v8',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v8',
    'HLT_IsoMu20_v29',
    'HLT_IsoMu24_OneProng32_v11',
    'HLT_IsoMu24_TwoProngs35_v15',
    'HLT_IsoMu24_eta2p1_L1HT200_QuadPFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_L1HT200_QuadPFJet25_v2',
    'HLT_IsoMu24_eta2p1_L1HT200_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v8',
    'HLT_IsoMu24_eta2p1_v29',
    'HLT_IsoMu24_v27',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v10',
    'HLT_IsoMu27_v30',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v11',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v14',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v14',
    'HLT_IsoTrk200_L1SingleMuShower_v6',
    'HLT_IsoTrk400_L1SingleMuShower_v6',
    'HLT_L1CSCShower_DTCluster50_v11',
    'HLT_L1CSCShower_DTCluster75_v11',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v5',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v5',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v12',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v7',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v29',
    'HLT_Mu15_IsoVVVL_PFHT450_v29',
    'HLT_Mu15_IsoVVVL_PFHT600_v33',
    'HLT_Mu15_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v19',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v8',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v19',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v29',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v28',
    'HLT_Mu17_TrkIsoVVL_v27',
    'HLT_Mu17_v27',
    'HLT_Mu18_Mu9_SameSign_v18',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v17',
    'HLT_Mu19_TrkIsoVVL_v18',
    'HLT_Mu19_v18',
    'HLT_Mu20_v26',
    'HLT_Mu27_v27',
    'HLT_Mu37_TkMu27_v19',
    'HLT_Mu3_PFJet40_v30',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v16',
    'HLT_Mu50_IsoVVVL_PFHT450_v29',
    'HLT_Mu50_L1SingleMuShower_v13',
    'HLT_Mu50_v27',
    'HLT_Mu55_v17',
    'HLT_Mu8_TrkIsoVVL_v26',
    'HLT_Mu8_v26',
    'HLT_TripleMu_10_5_5_DZ_v24',
    'HLT_TripleMu_12_10_5_v24',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v17',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v22',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v19' ),
  Muon1 = cms.vstring( 'HLT_CascadeMu100_v15',
    'HLT_CscCluster100_Ele5_v6',
    'HLT_CscCluster100_Mu5_v8',
    'HLT_CscCluster100_PNetTauhPFJet10_Loose_v8',
    'HLT_CscCluster50_Photon20Unseeded_v5',
    'HLT_CscCluster50_Photon30Unseeded_v5',
    'HLT_CscCluster_Loose_v11',
    'HLT_CscCluster_Medium_v11',
    'HLT_CscCluster_Tight_v11',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v10',
    'HLT_DoubleCscCluster100_v8',
    'HLT_DoubleCscCluster75_v8',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v14',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v12',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v12',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v12',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v12',
    'HLT_DoubleL2Mu50_v12',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v12',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v12',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v13',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v24',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v24',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v24',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v24',
    'HLT_DoubleMu43NoFiltersNoVtx_v16',
    'HLT_DoubleMu48NoFiltersNoVtx_v16',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v22',
    'HLT_HighPtTkMu100_v14',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v8',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v8',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v8',
    'HLT_IsoMu20_v29',
    'HLT_IsoMu24_OneProng32_v11',
    'HLT_IsoMu24_TwoProngs35_v15',
    'HLT_IsoMu24_eta2p1_L1HT200_QuadPFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_L1HT200_QuadPFJet25_v2',
    'HLT_IsoMu24_eta2p1_L1HT200_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v8',
    'HLT_IsoMu24_eta2p1_v29',
    'HLT_IsoMu24_v27',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v10',
    'HLT_IsoMu27_v30',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v11',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v14',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v14',
    'HLT_IsoTrk200_L1SingleMuShower_v6',
    'HLT_IsoTrk400_L1SingleMuShower_v6',
    'HLT_L1CSCShower_DTCluster50_v11',
    'HLT_L1CSCShower_DTCluster75_v11',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v5',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v5',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v12',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v7',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v29',
    'HLT_Mu15_IsoVVVL_PFHT450_v29',
    'HLT_Mu15_IsoVVVL_PFHT600_v33',
    'HLT_Mu15_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v19',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v8',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v19',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v29',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v28',
    'HLT_Mu17_TrkIsoVVL_v27',
    'HLT_Mu17_v27',
    'HLT_Mu18_Mu9_SameSign_v18',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v17',
    'HLT_Mu19_TrkIsoVVL_v18',
    'HLT_Mu19_v18',
    'HLT_Mu20_v26',
    'HLT_Mu27_v27',
    'HLT_Mu37_TkMu27_v19',
    'HLT_Mu3_PFJet40_v30',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v16',
    'HLT_Mu50_IsoVVVL_PFHT450_v29',
    'HLT_Mu50_L1SingleMuShower_v13',
    'HLT_Mu50_v27',
    'HLT_Mu55_v17',
    'HLT_Mu8_TrkIsoVVL_v26',
    'HLT_Mu8_v26',
    'HLT_TripleMu_10_5_5_DZ_v24',
    'HLT_TripleMu_12_10_5_v24',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v17',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v22',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v19' ),
  MuonEG = cms.vstring( 'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v31',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v31',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v31',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v21',
    'HLT_Mu17_Photon30_IsoCaloId_v20',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v13',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v21',
    'HLT_Mu27_Ele37_CaloIdL_MW_v19',
    'HLT_Mu37_Ele27_CaloIdL_MW_v19',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v13',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v13',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v17',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v17',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v32',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v32',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v33',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v33',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v12',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v12',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_L1HT200_QuadPFJet20_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_L1HT200_QuadPFJet25_PNet1BTag0p50_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_L1HT200_QuadPFJet25_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_L1HT200_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v15',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet1BTag0p20_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v25' ),
  NoBPTX = cms.vstring( 'HLT_CDC_L2cosmic_10_er1p0_v11',
    'HLT_CDC_L2cosmic_5p5_er1p0_v11',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v15',
    'HLT_L2Mu10_NoVertex_NoBPTX_v16',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v15',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v14',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v16',
    'HLT_UncorrectedJetE30_NoBPTX_v16',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v16',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v16' ),
  OnlineMonitor = ( cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v8',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v8',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v8',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v8',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v8',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v14',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v8',
    'HLT_AK8PFJet140_v29',
    'HLT_AK8PFJet200_v29',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v11',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v11',
    'HLT_AK8PFJet220_SoftDropMass40_v15',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet230_SoftDropMass40_v15',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet260_v30',
    'HLT_AK8PFJet275_Nch40_v8',
    'HLT_AK8PFJet275_Nch45_v8',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v11',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v11',
    'HLT_AK8PFJet320_v30',
    'HLT_AK8PFJet380_SoftDropMass30_v8',
    'HLT_AK8PFJet400_SoftDropMass30_v8',
    'HLT_AK8PFJet400_v30',
    'HLT_AK8PFJet40_v30',
    'HLT_AK8PFJet425_SoftDropMass30_v8',
    'HLT_AK8PFJet450_SoftDropMass30_v8',
    'HLT_AK8PFJet450_v30',
    'HLT_AK8PFJet500_v30',
    'HLT_AK8PFJet550_v25',
    'HLT_AK8PFJet60_v29',
    'HLT_AK8PFJet80_v30',
    'HLT_AK8PFJetFwd140_v28',
    'HLT_AK8PFJetFwd200_v28',
    'HLT_AK8PFJetFwd260_v29',
    'HLT_AK8PFJetFwd320_v29',
    'HLT_AK8PFJetFwd400_v29',
    'HLT_AK8PFJetFwd40_v29',
    'HLT_AK8PFJetFwd450_v29',
    'HLT_AK8PFJetFwd500_v29',
    'HLT_AK8PFJetFwd60_v28',
    'HLT_AK8PFJetFwd80_v28',
    'HLT_BTagMu_AK4DiJet110_Mu5_v27',
    'HLT_BTagMu_AK4DiJet170_Mu5_v26',
    'HLT_BTagMu_AK4DiJet20_Mu5_v27',
    'HLT_BTagMu_AK4DiJet40_Mu5_v27',
    'HLT_BTagMu_AK4DiJet70_Mu5_v27',
    'HLT_BTagMu_AK4Jet300_Mu5_v26',
    'HLT_BTagMu_AK8DiJet170_Mu5_v23',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v16',
    'HLT_BTagMu_AK8Jet300_Mu5_v26',
    'HLT_CDC_L2cosmic_10_er1p0_v11',
    'HLT_CDC_L2cosmic_5p5_er1p0_v11',
    'HLT_CaloJet500_NoJetID_v24',
    'HLT_CaloJet550_NoJetID_v19',
    'HLT_CaloMET350_NotCleaned_v16',
    'HLT_CaloMET60_DTCluster50_v13',
    'HLT_CaloMET60_DTClusterNoMB1S50_v13',
    'HLT_CaloMET90_NotCleaned_v16',
    'HLT_CaloMHT90_v16',
    'HLT_CascadeMu100_v15',
    'HLT_CscCluster50_Photon20Unseeded_v5',
    'HLT_CscCluster50_Photon30Unseeded_v5',
    'HLT_CscCluster_Loose_v11',
    'HLT_CscCluster_Medium_v11',
    'HLT_CscCluster_Tight_v11',
    'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v15',
    'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v31',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v31',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v31',
    'HLT_DiPFJetAve100_HFJEC_v31',
    'HLT_DiPFJetAve140_v27',
    'HLT_DiPFJetAve160_HFJEC_v30',
    'HLT_DiPFJetAve200_v27',
    'HLT_DiPFJetAve220_HFJEC_v30',
    'HLT_DiPFJetAve260_HFJEC_v13',
    'HLT_DiPFJetAve260_v28',
    'HLT_DiPFJetAve300_HFJEC_v30',
    'HLT_DiPFJetAve320_v28',
    'HLT_DiPFJetAve400_v28',
    'HLT_DiPFJetAve40_v28',
    'HLT_DiPFJetAve500_v28',
    'HLT_DiPFJetAve60_HFJEC_v29',
    'HLT_DiPFJetAve60_v28',
    'HLT_DiPFJetAve80_HFJEC_v31',
    'HLT_DiPFJetAve80_v28',
    'HLT_DiPhoton10Time1ns_v11',
    'HLT_DiPhoton10Time1p2ns_v11',
    'HLT_DiPhoton10Time1p4ns_v11',
    'HLT_DiPhoton10Time1p6ns_v11',
    'HLT_DiPhoton10Time1p8ns_v11',
    'HLT_DiPhoton10Time2ns_v11',
    'HLT_DiPhoton10_CaloIdL_v11',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v25',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Dielectron12_5_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_10_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2_v1',
    'HLT_Diphoton15_12_EBEB_TightID_ECALTrackIsoDr0p2to0p4_v1',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v12',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v13',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v13',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v25',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v25',
    'HLT_DiphotonMVA14p25_High_Mass60_v1',
    'HLT_DiphotonMVA14p25_Low_Mass60_v1',
    'HLT_DiphotonMVA14p25_Medium_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightHigh_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightLow_Mass60_v1',
    'HLT_DiphotonMVA14p25_TightMedium_Mass60_v1',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v10',
    'HLT_DoubleCscCluster100_v8',
    'HLT_DoubleCscCluster75_v8',
    'HLT_DoubleEle25_CaloIdL_MW_v17',
    'HLT_DoubleEle27_CaloIdL_MW_v17',
    'HLT_DoubleEle33_CaloIdL_MW_v30',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v34',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v34',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v14',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v13',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v12',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v12',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v12',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v12',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v12',
    'HLT_DoubleL2Mu50_v12',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v12',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v12',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v13',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v12',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v10',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v15',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v10',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v24',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v24',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v24',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v24',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu43NoFiltersNoVtx_v16',
    'HLT_DoubleMu48NoFiltersNoVtx_v16',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v22',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_DoublePFJets100_PNetBTag_0p11_v8',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_DoublePFJets200_PNetBTag_0p11_v8',
    'HLT_DoublePFJets350_PNetBTag_0p11_v8',
    'HLT_DoublePFJets40_PNetBTag_0p11_v8',
    'HLT_DoublePhoton33_CaloIdL_v18',
    'HLT_DoublePhoton70_v18',
    'HLT_DoublePhoton85_v26',
    'HLT_ECALHT800_v22',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v27',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v20',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v7',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v30',
    'HLT_Ele15_IsoVVVL_PFHT450_v30',
    'HLT_Ele15_IsoVVVL_PFHT600_v34',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v32',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v31',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31',
    'HLT_Ele28_HighEta_SC20_Mass55_v25',
    'HLT_Ele30_WPTight_Gsf_v13',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v21',
    'HLT_Ele32_WPTight_Gsf_v27',
    'HLT_Ele35_WPTight_Gsf_v21',
    'HLT_Ele38_WPTight_Gsf_v21',
    'HLT_Ele40_WPTight_Gsf_v21',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v14',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v32',
    'HLT_Ele50_IsoVVVL_PFHT450_v30',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v32',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v8')+cms.vstring( 'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v8',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v10',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v10',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v13',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v9',
    'HLT_HT350_v9',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v25',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v13',
    'HLT_HT425_v21',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v12',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v13',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v13',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v13',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v13',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v9',
    'HLT_HT550_DisplacedDijet60_Inclusive_v25',
    'HLT_HcalNZS_v22',
    'HLT_HcalPhiSym_v24',
    'HLT_HighPtTkMu100_v14',
    'HLT_IsoMu20_v29',
    'HLT_IsoMu24_OneProng32_v11',
    'HLT_IsoMu24_TwoProngs35_v15',
    'HLT_IsoMu24_eta2p1_L1HT200_QuadPFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_L1HT200_QuadPFJet25_v2',
    'HLT_IsoMu24_eta2p1_L1HT200_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v8',
    'HLT_IsoMu24_eta2p1_v29',
    'HLT_IsoMu24_v27',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v10',
    'HLT_IsoMu27_v30',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v11',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v14',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v11',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v11',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v14',
    'HLT_L1CSCShower_DTCluster50_v11',
    'HLT_L1CSCShower_DTCluster75_v11',
    'HLT_L1ETMHadSeeds_v11',
    'HLT_L1MET_DTCluster50_v13',
    'HLT_L1MET_DTClusterNoMB1S50_v13',
    'HLT_L1Mu6HT240_v10',
    'HLT_L1SingleLLPJet_v8',
    'HLT_L1SingleMuCosmics_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v9',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v10',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v15',
    'HLT_L2Mu10_NoVertex_NoBPTX_v16',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v15',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v14',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v5',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v5',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v12',
    'HLT_MET105_IsoTrk50_v21',
    'HLT_MET120_IsoTrk50_v21',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v8',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v8',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v7',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v21',
    'HLT_Mu12eta2p3_PFJet40_v15',
    'HLT_Mu12eta2p3_v15',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v29',
    'HLT_Mu15_IsoVVVL_PFHT450_v29',
    'HLT_Mu15_IsoVVVL_PFHT600_v33',
    'HLT_Mu15_v17',
    'HLT_Mu17_Photon30_IsoCaloId_v20',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v19',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v8',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v19',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v29',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v28',
    'HLT_Mu17_TrkIsoVVL_v27',
    'HLT_Mu17_v27',
    'HLT_Mu18_Mu9_SameSign_v18',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v17',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v17',
    'HLT_Mu19_TrkIsoVVL_v18',
    'HLT_Mu19_v18',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v13',
    'HLT_Mu20_v26',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v21',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu27_Ele37_CaloIdL_MW_v19',
    'HLT_Mu27_v27',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu37_Ele27_CaloIdL_MW_v19',
    'HLT_Mu37_TkMu27_v19',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v13',
    'HLT_Mu3_PFJet40_v30',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v16',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v13',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v17',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v17',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu50_IsoVVVL_PFHT450_v29',
    'HLT_Mu50_L1SingleMuShower_v13',
    'HLT_Mu50_v27',
    'HLT_Mu55_v17',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v32',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v32',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v33',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v33',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v12',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v12',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_L1HT200_QuadPFJet20_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_L1HT200_QuadPFJet25_PNet1BTag0p50_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_L1HT200_QuadPFJet25_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_L1HT200_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v15',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet1BTag0p20_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v25',
    'HLT_Mu8_TrkIsoVVL_v26',
    'HLT_Mu8_v26',
    'HLT_PFHT1050_v32',
    'HLT_PFHT180_v31',
    'HLT_PFHT250_v31',
    'HLT_PFHT350_v33',
    'HLT_PFHT370_v31',
    'HLT_PFHT430_v31',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v26',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v26',
    'HLT_PFHT510_v31',
    'HLT_PFHT590_v31',
    'HLT_PFHT680_v31',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v26',
    'HLT_PFHT780_v31',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v26',
    'HLT_PFHT890_v31',
    'HLT_PFJet110_v14',
    'HLT_PFJet140_v33',
    'HLT_PFJet200_TimeGt2p5ns_v12',
    'HLT_PFJet200_TimeLtNeg2p5ns_v12',
    'HLT_PFJet200_v33',
    'HLT_PFJet260_v34',
    'HLT_PFJet320_v34',
    'HLT_PFJet400_v34',
    'HLT_PFJet40_v35',
    'HLT_PFJet450_v35',
    'HLT_PFJet500_v35',
    'HLT_PFJet550_v25',
    'HLT_PFJet60_v35',
    'HLT_PFJet80_v35',
    'HLT_PFJetFwd140_v32',
    'HLT_PFJetFwd200_v32',
    'HLT_PFJetFwd260_v33',
    'HLT_PFJetFwd320_v33',
    'HLT_PFJetFwd400_v33',
    'HLT_PFJetFwd40_v33',
    'HLT_PFJetFwd450_v33',
    'HLT_PFJetFwd500_v33',
    'HLT_PFJetFwd60_v33',
    'HLT_PFJetFwd80_v32',
    'HLT_PFMET105_IsoTrk50_v15',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v23',
    'HLT_PFMET120_PFMHT120_IDTight_v34',
    'HLT_PFMET130_PFMHT130_IDTight_v34',
    'HLT_PFMET140_PFMHT140_IDTight_v34',
    'HLT_PFMET200_BeamHaloCleaned_v23',
    'HLT_PFMET200_NotCleaned_v23',
    'HLT_PFMET250_NotCleaned_v23',
    'HLT_PFMET300_NotCleaned_v23',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v23',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v34',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v33',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v14',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v33',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v25',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v23',
    'HLT_Photon100EBHE10_v13',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon110EB_TightID_TightIso_v14',
    'HLT_Photon120_R9Id90_HE10_IsoM_v26',
    'HLT_Photon120_v24',
    'HLT_Photon150_v18',
    'HLT_Photon165_R9Id90_HE10_IsoM_v27',
    'HLT_Photon175_v26',
    'HLT_Photon200_v25',
    'HLT_Photon20_HoverELoose_v21',
    'HLT_Photon300_NoHE_v24')+cms.vstring( 'HLT_Photon30EB_TightID_TightIso_v14',
    'HLT_Photon30_HoverELoose_v21',
    'HLT_Photon32_OneProng32_M50To105_v12',
    'HLT_Photon33_v16',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v10',
    'HLT_Photon35_TwoProngs35_v15',
    'HLT_Photon40EB_TightID_TightIso_v5',
    'HLT_Photon40EB_v4',
    'HLT_Photon45EB_TightID_TightIso_v5',
    'HLT_Photon45EB_v4',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v7',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v8',
    'HLT_Photon50EB_TightID_TightIso_v10',
    'HLT_Photon50_R9Id90_HE10_IsoM_v26',
    'HLT_Photon50_TimeGt2p5ns_v8',
    'HLT_Photon50_TimeLtNeg2p5ns_v8',
    'HLT_Photon50_v24',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v12',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v12',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
    'HLT_Photon75EB_TightID_TightIso_v10',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v19',
    'HLT_Photon75_R9Id90_HE10_IsoM_v26',
    'HLT_Photon75_v24',
    'HLT_Photon90EB_TightID_TightIso_v10',
    'HLT_Photon90_R9Id90_HE10_IsoM_v26',
    'HLT_Photon90_v24',
    'HLT_Physics_v15',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_Random_v3',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16',
    'HLT_TripleMu_10_5_5_DZ_v24',
    'HLT_TripleMu_12_10_5_v24',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v17',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v22',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v19',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v16',
    'HLT_UncorrectedJetE30_NoBPTX_v16',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v16',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v16',
    'HLT_ZeroBias_Alignment_v9',
    'HLT_ZeroBias_FirstBXAfterTrain_v11',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v13',
    'HLT_ZeroBias_FirstCollisionInTrain_v12',
    'HLT_ZeroBias_IsolatedBunches_v13',
    'HLT_ZeroBias_LastCollisionInTrain_v11',
    'HLT_ZeroBias_v14') ),
  ParkingAnomalyDetection = cms.vstring( 'HLT_L1AXOVVTight_v1',
    'HLT_L1AXOVVVTight_v1',
    'HLT_L1CICADA_VVTight_v1',
    'HLT_L1CICADA_VVVTight_v1',
    'HLT_L1CICADA_VVVVTight_v1' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu2_Jpsi_LowPt_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_LowMass_SS_v8',
    'HLT_DoubleMu4_3_LowMass_v15',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_LowMass_Displaced_v15',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu2_Jpsi_LowPt_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_LowMass_SS_v8',
    'HLT_DoubleMu4_3_LowMass_v15',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_LowMass_Displaced_v15',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu2_Jpsi_LowPt_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_LowMass_SS_v8',
    'HLT_DoubleMu4_3_LowMass_v15',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_LowMass_Displaced_v15',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu2_Jpsi_LowPt_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_LowMass_SS_v8',
    'HLT_DoubleMu4_3_LowMass_v15',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_LowMass_Displaced_v15',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16' ),
  ParkingDoubleMuonLowMass4 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu2_Jpsi_LowPt_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_LowMass_SS_v8',
    'HLT_DoubleMu4_3_LowMass_v15',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_LowMass_Displaced_v15',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16' ),
  ParkingDoubleMuonLowMass5 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu2_Jpsi_LowPt_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_LowMass_SS_v8',
    'HLT_DoubleMu4_3_LowMass_v15',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_LowMass_Displaced_v15',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16' ),
  ParkingDoubleMuonLowMass6 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu2_Jpsi_LowPt_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_LowMass_SS_v8',
    'HLT_DoubleMu4_3_LowMass_v15',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_LowMass_Displaced_v15',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16' ),
  ParkingDoubleMuonLowMass7 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v19',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v21',
    'HLT_Dimuon0_Jpsi_NoVertexing_v22',
    'HLT_Dimuon0_Jpsi_v22',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v22',
    'HLT_Dimuon0_LowMass_L1_4_v22',
    'HLT_Dimuon0_LowMass_L1_TM530_v20',
    'HLT_Dimuon0_LowMass_v22',
    'HLT_Dimuon0_Upsilon_L1_4p5_v23',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v23',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v20',
    'HLT_Dimuon0_Upsilon_NoVertexing_v21',
    'HLT_Dimuon10_Upsilon_y1p4_v15',
    'HLT_Dimuon12_Upsilon_y1p4_v16',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v21',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v19',
    'HLT_Dimuon14_PsiPrime_v27',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v20',
    'HLT_Dimuon18_PsiPrime_v28',
    'HLT_Dimuon24_Phi_noCorrL1_v20',
    'HLT_Dimuon24_Upsilon_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_noCorrL1_v20',
    'HLT_Dimuon25_Jpsi_v28',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v20',
    'HLT_DoubleMu2_Jpsi_LowPt_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v18',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v20',
    'HLT_DoubleMu3_Trk_Tau3mu_v26',
    'HLT_DoubleMu4_3_Bs_v29',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_3_Jpsi_v29',
    'HLT_DoubleMu4_3_LowMass_SS_v8',
    'HLT_DoubleMu4_3_LowMass_v15',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v14',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v21',
    'HLT_DoubleMu4_JpsiTrk_Bc_v14',
    'HLT_DoubleMu4_Jpsi_Displaced_v21',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v21',
    'HLT_DoubleMu4_LowMass_Displaced_v15',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v29',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v18',
    'HLT_Mu25_TkMu0_Phi_v22',
    'HLT_Mu30_TkMu0_Psi_v15',
    'HLT_Mu30_TkMu0_Upsilon_v15',
    'HLT_Mu4_L1DoubleMu_v15',
    'HLT_Mu7p5_L2Mu2_Jpsi_v24',
    'HLT_Mu7p5_L2Mu2_Upsilon_v24',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v18',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v19',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v16' ),
  ParkingHH0 = cms.vstring( 'HLT_L1HT200_QuadPFJet20_PNet1BTag0p50_PNet1Tauh0p50_v2',
    'HLT_L1HT200_QuadPFJet25_PNet1BTag0p50_PNet1Tauh0p50_v2',
    'HLT_PFHT250_QuadPFJet25_PNet1BTag0p20_PNet1Tauh0p50_v8',
    'HLT_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v8',
    'HLT_PFHT250_QuadPFJet25_v8',
    'HLT_PFHT250_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v8',
    'HLT_PFHT250_QuadPFJet30_PNet2BTagMean0p55_v8',
    'HLT_PFHT280_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v8',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v11',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p60_v11',
    'HLT_PFHT280_QuadPFJet30_v11',
    'HLT_PFHT280_QuadPFJet35_PNet2BTagMean0p60_v11',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_2p0_v7',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_4p3_v7',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v23',
    'HLT_PFHT340_QuadPFJet70_50_40_40_PNet2BTagMean0p70_v12',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_4p3_v8',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_5p6_v8',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_v8',
    'HLT_PFHT400_SixPFJet32_PNet2BTagMean0p50_v11',
    'HLT_PFHT400_SixPFJet32_v23',
    'HLT_PFHT450_SixPFJet36_PNetBTag0p35_v11',
    'HLT_PFHT450_SixPFJet36_v22' ),
  ParkingHH1 = cms.vstring( 'HLT_L1HT200_QuadPFJet20_PNet1BTag0p50_PNet1Tauh0p50_v2',
    'HLT_L1HT200_QuadPFJet25_PNet1BTag0p50_PNet1Tauh0p50_v2',
    'HLT_PFHT250_QuadPFJet25_PNet1BTag0p20_PNet1Tauh0p50_v8',
    'HLT_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v8',
    'HLT_PFHT250_QuadPFJet25_v8',
    'HLT_PFHT250_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v8',
    'HLT_PFHT250_QuadPFJet30_PNet2BTagMean0p55_v8',
    'HLT_PFHT280_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v8',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v11',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p60_v11',
    'HLT_PFHT280_QuadPFJet30_v11',
    'HLT_PFHT280_QuadPFJet35_PNet2BTagMean0p60_v11',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_2p0_v7',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_4p3_v7',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v23',
    'HLT_PFHT340_QuadPFJet70_50_40_40_PNet2BTagMean0p70_v12',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_4p3_v8',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_5p6_v8',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_v8',
    'HLT_PFHT400_SixPFJet32_PNet2BTagMean0p50_v11',
    'HLT_PFHT400_SixPFJet32_v23',
    'HLT_PFHT450_SixPFJet36_PNetBTag0p35_v11',
    'HLT_PFHT450_SixPFJet36_v22' ),
  ParkingLLP0 = cms.vstring( 'HLT_CaloMET60_DTCluster50_v13',
    'HLT_CaloMET60_DTClusterNoMB1S50_v13',
    'HLT_CscCluster150_DisplacedSingleJet30_Inclusive1PtrkShortSig5_v2',
    'HLT_CscCluster150_DisplacedSingleJet35_Inclusive1PtrkShortSig5_v2',
    'HLT_CscCluster150_DisplacedSingleJet40_Inclusive1PtrkShortSig5_v2',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v8',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v8',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v10',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v10',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v13',
    'HLT_HT350_DelayedJet40_SingleDelay1p5To3p5nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay1p6To3p5nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay1p75To3p5nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v9',
    'HLT_HT360_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT360_DisplacedDijet45_Inclusive1PtrkShortSig5_v9',
    'HLT_HT390_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT390_DisplacedDijet45_Inclusive1PtrkShortSig5_v9',
    'HLT_HT390eta2p0_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v25',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v13',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v12',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v13',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v13',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1To1p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v13',
    'HLT_HT430_DelayedJet40_SingleDelay1p1To1p6nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p25To1p75nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v13',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v9',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v25',
    'HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v13',
    'HLT_HT550_DisplacedDijet60_Inclusive_v25',
    'HLT_HT650_DisplacedDijet60_Inclusive_v25',
    'HLT_L1MET_DTCluster50_v13',
    'HLT_L1MET_DTClusterNoMB1S50_v13',
    'HLT_L1SingleLLPJet_v8',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5To4nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p6To4nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75To4nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v9',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v13',
    'HLT_PFJet200_TimeGt2p5ns_v12',
    'HLT_PFJet200_TimeLtNeg2p5ns_v12' ),
  ParkingLLP1 = cms.vstring( 'HLT_CaloMET60_DTCluster50_v13',
    'HLT_CaloMET60_DTClusterNoMB1S50_v13',
    'HLT_CscCluster150_DisplacedSingleJet30_Inclusive1PtrkShortSig5_v2',
    'HLT_CscCluster150_DisplacedSingleJet35_Inclusive1PtrkShortSig5_v2',
    'HLT_CscCluster150_DisplacedSingleJet40_Inclusive1PtrkShortSig5_v2',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v13',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v13',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v13',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v8',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v8',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v10',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v10',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v13',
    'HLT_HT350_DelayedJet40_SingleDelay1p5To3p5nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay1p6To3p5nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay1p75To3p5nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v9',
    'HLT_HT360_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT360_DisplacedDijet45_Inclusive1PtrkShortSig5_v9',
    'HLT_HT390_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT390_DisplacedDijet45_Inclusive1PtrkShortSig5_v9',
    'HLT_HT390eta2p0_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v25',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v13',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v12',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v13',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v13',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1To1p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v13',
    'HLT_HT430_DelayedJet40_SingleDelay1p1To1p6nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p25To1p75nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v13',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v9',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v25',
    'HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v13',
    'HLT_HT550_DisplacedDijet60_Inclusive_v25',
    'HLT_HT650_DisplacedDijet60_Inclusive_v25',
    'HLT_L1MET_DTCluster50_v13',
    'HLT_L1MET_DTClusterNoMB1S50_v13',
    'HLT_L1SingleLLPJet_v8',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5To4nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v11',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p6To4nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75To4nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v11',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v9',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v13',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v13',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v13',
    'HLT_PFJet200_TimeGt2p5ns_v12',
    'HLT_PFJet200_TimeLtNeg2p5ns_v12' ),
  ParkingSingleMuon0 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon1 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon10 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon11 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon12 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon13 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon14 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon15 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon2 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon3 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon4 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon5 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon6 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon7 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon8 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingSingleMuon9 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v8',
    'HLT_Mu0_Barrel_L1HP11_v8',
    'HLT_Mu0_Barrel_L1HP13_v2',
    'HLT_Mu0_Barrel_L1HP6_IP6_v5',
    'HLT_Mu0_Barrel_L1HP6_v5',
    'HLT_Mu0_Barrel_L1HP7_v5',
    'HLT_Mu0_Barrel_L1HP8_v6',
    'HLT_Mu0_Barrel_L1HP9_v6',
    'HLT_Mu0_Barrel_v8',
    'HLT_Mu10_Barrel_L1HP11_IP4_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v8',
    'HLT_Mu12_Barrel_L1HP13_IP4_v2',
    'HLT_Mu12_Barrel_L1HP13_IP6_v2',
    'HLT_Mu4_Barrel_IP4_v2',
    'HLT_Mu4_Barrel_IP6_v2',
    'HLT_Mu6_Barrel_L1HP7_IP6_v5',
    'HLT_Mu7_Barrel_L1HP8_IP6_v6',
    'HLT_Mu8_Barrel_L1HP9_IP6_v6',
    'HLT_Mu9_Barrel_L1HP10_IP6_v8' ),
  ParkingVBF0 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v12',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_VBF_DiPFJet115_40_Mjj1000_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1100_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1200_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj850_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v10',
    'HLT_VBF_DiPFJet125_45_Mjj1150_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1250_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj850_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v8',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj700_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj800_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj850_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj1000_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v8',
    'HLT_VBF_DiPFJet75_45_Mjj900_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj850_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj950_Mu3_TrkIsoVVL_v2' ),
  ParkingVBF1 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v12',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_VBF_DiPFJet115_40_Mjj1000_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1100_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1200_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj850_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v10',
    'HLT_VBF_DiPFJet125_45_Mjj1150_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1250_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj850_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v8',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj700_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj800_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj850_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj1000_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v8',
    'HLT_VBF_DiPFJet75_45_Mjj900_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj850_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj950_Mu3_TrkIsoVVL_v2' ),
  ParkingVBF2 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v12',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_VBF_DiPFJet115_40_Mjj1000_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1100_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1200_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj850_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v10',
    'HLT_VBF_DiPFJet125_45_Mjj1150_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1250_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj850_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v8',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj700_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj800_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj850_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj1000_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v8',
    'HLT_VBF_DiPFJet75_45_Mjj900_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj850_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj950_Mu3_TrkIsoVVL_v2' ),
  ParkingVBF3 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v12',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_VBF_DiPFJet115_40_Mjj1000_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1100_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1200_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj850_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v10',
    'HLT_VBF_DiPFJet125_45_Mjj1150_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1250_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj850_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v8',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj700_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj800_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj850_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj1000_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v8',
    'HLT_VBF_DiPFJet75_45_Mjj900_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj850_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj950_Mu3_TrkIsoVVL_v2' ),
  ParkingVBF4 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v12',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_VBF_DiPFJet115_40_Mjj1000_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1100_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1200_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj850_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v10',
    'HLT_VBF_DiPFJet125_45_Mjj1150_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1250_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj850_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v8',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj700_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj800_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj850_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj1000_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v8',
    'HLT_VBF_DiPFJet75_45_Mjj900_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj850_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj950_Mu3_TrkIsoVVL_v2' ),
  ParkingVBF5 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v12',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_VBF_DiPFJet115_40_Mjj1000_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1100_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1200_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj850_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v10',
    'HLT_VBF_DiPFJet125_45_Mjj1150_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1250_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj850_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v8',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj700_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj800_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj850_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj1000_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v8',
    'HLT_VBF_DiPFJet75_45_Mjj900_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj850_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj950_Mu3_TrkIsoVVL_v2' ),
  ParkingVBF6 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v12',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_VBF_DiPFJet115_40_Mjj1000_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1100_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1200_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj850_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v10',
    'HLT_VBF_DiPFJet125_45_Mjj1150_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1250_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj850_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v8',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj700_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj800_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj850_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj1000_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v8',
    'HLT_VBF_DiPFJet75_45_Mjj900_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj850_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj950_Mu3_TrkIsoVVL_v2' ),
  ParkingVBF7 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet100_88_70_30_v12',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v19',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v12',
    'HLT_QuadPFJet105_88_75_30_v11',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v19',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v19',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v12',
    'HLT_QuadPFJet111_90_80_30_v11',
    'HLT_VBF_DiPFJet115_40_Mjj1000_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1100_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj1200_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet115_40_Mjj850_DoublePNetTauhPFJet20_eta2p3_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v10',
    'HLT_VBF_DiPFJet125_45_Mjj1150_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1250_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v8',
    'HLT_VBF_DiPFJet45_Mjj850_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v8',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj700_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v8',
    'HLT_VBF_DiPFJet50_Mjj800_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj850_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj1000_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v8',
    'HLT_VBF_DiPFJet75_45_Mjj900_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v8',
    'HLT_VBF_DiPFJet80_45_Mjj850_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v8',
    'HLT_VBF_DiPFJet95_45_Mjj950_Mu3_TrkIsoVVL_v2' ),
  RPCMonitor = cms.vstring( 'AlCa_RPCMuonNormalisation_v24' ),
  ScoutingPFMonitor = cms.vstring( 'DST_PFScouting_DoubleMuonVtxMonitorJPsi_v2',
    'DST_PFScouting_DoubleMuonVtxMonitorZ_v2',
    'HLT_TriggersForScoutingPFMonitor_PS1000_v1',
    'HLT_TriggersForScoutingPFMonitor_PS125_v1',
    'HLT_TriggersForScoutingPFMonitor_PS250_v1',
    'HLT_TriggersForScoutingPFMonitor_PS500_v1' ),
  ScoutingPFRun3 = cms.vstring( 'DST_PFScouting_AXOLoose_v6',
    'DST_PFScouting_AXOMedium_v2',
    'DST_PFScouting_AXOTight_v8',
    'DST_PFScouting_AXOVLoose_v6',
    'DST_PFScouting_AXOVTight_v6',
    'DST_PFScouting_CICADALoose_v4',
    'DST_PFScouting_CICADAMedium_v4',
    'DST_PFScouting_CICADATight_v4',
    'DST_PFScouting_CICADAVLoose_v4',
    'DST_PFScouting_CICADAVTight_v4',
    'DST_PFScouting_DoubleEG_v8',
    'DST_PFScouting_DoubleMuonNoVtx_v2',
    'DST_PFScouting_DoubleMuonVtxMonitorJPsi_v2',
    'DST_PFScouting_DoubleMuonVtxMonitorZ_v2',
    'DST_PFScouting_DoubleMuonVtx_v2',
    'DST_PFScouting_JetHT_v8',
    'DST_PFScouting_SingleMuon_v8',
    'DST_PFScouting_SinglePhotonEB_v5',
    'DST_PFScouting_ZeroBias_v6' ),
  Tau = cms.vstring( 'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v10',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v15',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v10',
    'HLT_DoublePNetTauhPFJet26_L2NN_eta2p3_PFJet60_v8',
    'HLT_DoublePNetTauhPFJet26_L2NN_eta2p3_PFJet75_v8',
    'HLT_DoublePNetTauhPFJet30_Medium_L2NN_eta2p3_v8',
    'HLT_DoublePNetTauhPFJet30_Tight_L2NN_eta2p3_v8',
    'HLT_SinglePNetTauhPFJet130_Loose_L2NN_eta2p3_v8',
    'HLT_SinglePNetTauhPFJet130_Medium_L2NN_eta2p3_v8',
    'HLT_SinglePNetTauhPFJet130_Tight_L2NN_eta2p3_v8' ),
  TestDataRaw = cms.vstring( 'HLT_TestData_v1' ),
  TestDataScouting = cms.vstring( 'HLT_TestData_v1' ),
  TestEnablesEcalHcal = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  TestEnablesEcalHcalDQM = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  ZeroBias = cms.vstring( 'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v9',
    'HLT_ZeroBias_FirstBXAfterTrain_v11',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v13',
    'HLT_ZeroBias_FirstCollisionInTrain_v12',
    'HLT_ZeroBias_IsolatedBunches_v13',
    'HLT_ZeroBias_LastCollisionInTrain_v11',
    'HLT_ZeroBias_v14' )
)

process.CSCChannelMapperESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCChannelMapperRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.CSCINdexerESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCIndexerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.GlobalParametersRcdSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "L1TGlobalParametersRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.GlobalTag = cms.ESSource( "PoolDBESSource",
    DBParameters = cms.PSet( 
      messageLevel = cms.untracked.int32( 0 ),
      authenticationPath = cms.untracked.string( "." )
    ),
    connect = cms.string( "frontier://FrontierProd/CMS_CONDITIONS" ),
    globaltag = cms.string( "None" ),
    snapshotTime = cms.string( "" ),
    frontierKey = cms.untracked.string( "" ),
    toGet = cms.VPSet( 
      cms.PSet(  refreshTime = cms.uint64( 2 ),
        record = cms.string( "BeamSpotOnlineLegacyObjectsRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 2 ),
        record = cms.string( "BeamSpotOnlineHLTObjectsRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 40 ),
        record = cms.string( "LHCInfoPerLSRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 40 ),
        record = cms.string( "LHCInfoPerFillRcd" )
      )
    ),
    JsonDumpFileName = cms.untracked.string( "" ),
    DumpStat = cms.untracked.bool( False ),
    ReconnectEachRun = cms.untracked.bool( True ),
    RefreshAlways = cms.untracked.bool( False ),
    RefreshEachRun = cms.untracked.bool( True ),
    RefreshOpenIOVs = cms.untracked.bool( False ),
    pfnPostfix = cms.untracked.string( "" ),
    pfnPrefix = cms.untracked.string( "" ),
    recordsToDebug = cms.untracked.vstring(  ),
    appendToDataLabel = cms.string( "" )
)
process.HcalTimeSlewEP = cms.ESSource( "HcalTimeSlewEP",
    appendToDataLabel = cms.string( "HBHE" ),
    timeSlewParametersM2 = cms.VPSet( 
      cms.PSet(  tmax = cms.double( 16.0 ),
        tzero = cms.double( 23.960177 ),
        slope = cms.double( -3.178648 )
      ),
      cms.PSet(  tmax = cms.double( 10.0 ),
        tzero = cms.double( 11.977461 ),
        slope = cms.double( -1.5610227 )
      ),
      cms.PSet(  tmax = cms.double( 6.25 ),
        tzero = cms.double( 9.109694 ),
        slope = cms.double( -1.075824 )
      )
    ),
    timeSlewParametersM3 = cms.VPSet( 
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 32.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -3.2 ),
        tspar0 = cms.double( 15.5 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      )
    )
)
process.HepPDTESSource = cms.ESSource( "HepPDTESSource",
    pdtFileName = cms.FileInPath( "SimGeneral/HepPDTESSource/data/pythiaparticle.tbl" )
)
process.eegeom = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalMappingRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.es_hardcode = cms.ESSource( "HcalHardcodeCalibrations",
    fromDDD = cms.untracked.bool( False ),
    toGet = cms.untracked.vstring( 'GainWidths' )
)
process.hltESSBTagRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "JetTagComputerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSPFRecHitHCALParamsRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "PFRecHitHCALParamsRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSPFRecHitHCALTopologyRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "PFRecHitHCALTopologyRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSTfGraphRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "TfGraphRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.ppsPixelTopologyESSource = cms.ESSource( "PPSPixelTopologyESSource",
    RunType = cms.string( "Run3" ),
    PitchSimY = cms.double( 0.15 ),
    PitchSimX = cms.double( 0.1 ),
    thickness = cms.double( 0.23 ),
    noOfPixelSimX = cms.int32( 160 ),
    noOfPixelSimY = cms.int32( 104 ),
    noOfPixels = cms.int32( 16640 ),
    simXWidth = cms.double( 16.6 ),
    simYWidth = cms.double( 16.2 ),
    deadEdgeWidth = cms.double( 0.2 ),
    activeEdgeSigma = cms.double( 0.02 ),
    physActiveEdgeDist = cms.double( 0.15 ),
    appendToDataLabel = cms.string( "" )
)

process.mkFitGeometryESProducer = cms.ESProducer( "MkFitGeometryESProducer",
  appendToDataLabel = cms.string( "" )
)
process.hltESPIter0PFlowTrackCandidatesMkFitConfig = cms.ESProducer( "MkFitIterationConfigESProducer",
  ComponentName = cms.string( "hltESPIter0PFlowTrackCandidatesMkFitConfig" ),
  config = cms.FileInPath( "RecoTracker/MkFit/data/mkfit-phase1-hltiter0.json" ),
  minPt = cms.double( 0.0 ),
  maxClusterSize = cms.uint32( 8 ),
  appendToDataLabel = cms.string( "" )
)
process.AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  SimpleMagneticField = cms.string( "" ),
  PropagationDirection = cms.string( "anyDirection" ),
  MaxDPhi = cms.double( 1.6 ),
  appendToDataLabel = cms.string( "" )
)
process.CSCChannelMapperESProducer = cms.ESProducer( "CSCChannelMapperESProducer",
  AlgoName = cms.string( "CSCChannelMapperPostls1" )
)
process.CSCGeometryESModule = cms.ESProducer( "CSCGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  useRealWireGeometry = cms.bool( True ),
  useOnlyWiresInME1a = cms.bool( False ),
  useGangedStripsInME1a = cms.bool( False ),
  useCentreTIOffsets = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  debugV = cms.untracked.bool( False )
)
process.CSCIndexerESProducer = cms.ESProducer( "CSCIndexerESProducer",
  AlgoName = cms.string( "CSCIndexerPostls1" )
)
process.CSCObjectMapESProducer = cms.ESProducer( "CSCObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
process.CaloGeometryBuilder = cms.ESProducer( "CaloGeometryBuilder",
  SelectedCalos = cms.vstring( 'HCAL',
    'ZDC',
    'EcalBarrel',
    'EcalEndcap',
    'EcalPreshower',
    'TOWER' )
)
process.CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder" )
process.CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" ),
  MapAuto = cms.untracked.bool( False ),
  SkipHE = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.CaloTowerGeometryFromDBEP = cms.ESProducer( "CaloTowerGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.CaloTowerTopologyEP = cms.ESProducer( "CaloTowerTopologyEP",
  appendToDataLabel = cms.string( "" )
)
process.CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  dump = cms.untracked.vstring(  ),
  appendToDataLabel = cms.string( "" )
)
process.ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
process.DTGeometryESModule = cms.ESProducer( "DTGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  DDDetector = cms.ESInputTag( "","" ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  attribute = cms.string( "MuStructure" ),
  value = cms.string( "MuonBarrelDT" ),
  applyAlignment = cms.bool( True )
)
process.DTObjectMapESProducer = cms.ESProducer( "DTObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
process.EcalBarrelGeometryFromDBEP = cms.ESProducer( "EcalBarrelGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.EcalElectronicsMappingBuilder = cms.ESProducer( "EcalElectronicsMappingBuilder" )
process.EcalEndcapGeometryFromDBEP = cms.ESProducer( "EcalEndcapGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.EcalLaserCorrectionService = cms.ESProducer( "EcalLaserCorrectionService",
  maxExtrapolationTimeInSec = cms.uint32( 0 ),
  appendToDataLabel = cms.string( "" )
)
process.EcalPreshowerGeometryFromDBEP = cms.ESProducer( "EcalPreshowerGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.GEMGeometryESModule = cms.ESProducer( "GEMGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  applyAlignment = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.GlobalParameters = cms.ESProducer( "StableParametersTrivialProducer",
  TotalBxInEvent = cms.int32( 5 ),
  NumberPhysTriggers = cms.uint32( 512 ),
  NumberL1Muon = cms.uint32( 8 ),
  NumberL1EGamma = cms.uint32( 12 ),
  NumberL1Jet = cms.uint32( 12 ),
  NumberL1Tau = cms.uint32( 12 ),
  NumberChips = cms.uint32( 1 ),
  PinsOnChip = cms.uint32( 512 ),
  OrderOfChip = cms.vint32( 1 ),
  NumberL1IsoEG = cms.uint32( 4 ),
  NumberL1JetCounts = cms.uint32( 12 ),
  UnitLength = cms.int32( 8 ),
  NumberL1ForJet = cms.uint32( 4 ),
  IfCaloEtaNumberBits = cms.uint32( 4 ),
  IfMuEtaNumberBits = cms.uint32( 6 ),
  NumberL1TauJet = cms.uint32( 4 ),
  NumberL1Mu = cms.uint32( 4 ),
  NumberConditionChips = cms.uint32( 1 ),
  NumberPsbBoards = cms.int32( 7 ),
  NumberL1CenJet = cms.uint32( 4 ),
  PinsOnConditionChip = cms.uint32( 512 ),
  NumberL1NoIsoEG = cms.uint32( 4 ),
  NumberTechnicalTriggers = cms.uint32( 64 ),
  NumberPhysTriggersExtended = cms.uint32( 64 ),
  WordLength = cms.int32( 64 ),
  OrderConditionChip = cms.vint32( 1 ),
  appendToDataLabel = cms.string( "" )
)
process.HcalGeometryFromDBEP = cms.ESProducer( "HcalGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.HcalTopologyIdealEP = cms.ESProducer( "HcalTopologyIdealEP",
  Exclude = cms.untracked.string( "" ),
  MergePosition = cms.untracked.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.MaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.MaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositePropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
process.ParametrizedMagneticFieldProducer = cms.ESProducer( "AutoParametrizedMagneticFieldProducer",
  version = cms.string( "Parabolic" ),
  label = cms.untracked.string( "ParabolicMf" ),
  valueOverride = cms.int32( -1 )
)
process.PropagatorWithMaterialForLoopers = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 4.0 ),
  ComponentName = cms.string( "PropagatorWithMaterialForLoopers" ),
  Mass = cms.double( 0.1396 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.PropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStep" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
process.RPCGeometryESModule = cms.ESProducer( "RPCGeometryESModule",
  fromDDD = cms.untracked.bool( False ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.SiPixelTemplateStoreESProducer = cms.ESProducer( "SiPixelTemplateStoreESProducer",
  appendToDataLabel = cms.string( "" )
)
process.SiStripClusterizerConditionsESProducer = cms.ESProducer( "SiStripClusterizerConditionsESProducer",
  QualityLabel = cms.string( "" ),
  Label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.SiStripGainESProducer = cms.ESProducer( "SiStripGainESProducer",
  appendToDataLabel = cms.string( "" ),
  printDebug = cms.untracked.bool( False ),
  AutomaticNormalization = cms.bool( False ),
  APVGain = cms.VPSet( 
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGainRcd" )
    ),
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGain2Rcd" )
    )
  )
)
process.SiStripQualityESProducer = cms.ESProducer( "SiStripQualityESProducer",
  appendToDataLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiStripDetVOffRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripDetCablingRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadChannelRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadFiberRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadModuleRcd" ),
      tag = cms.string( "" )
    )
  ),
  ReduceGranularity = cms.bool( False ),
  ThresholdForReducedGranularity = cms.double( 0.3 ),
  PrintDebugOutput = cms.bool( False ),
  UseEmptyRunInfo = cms.bool( False )
)
process.SiStripRecHitMatcherESProducer = cms.ESProducer( "SiStripRecHitMatcherESProducer",
  ComponentName = cms.string( "StandardMatcher" ),
  NSigmaInside = cms.double( 3.0 ),
  PreFilter = cms.bool( False )
)
process.SiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 ),
  appendToDataLabel = cms.string( "" )
)
process.SimpleSecondaryVertex3TrkComputer = cms.ESProducer( "SimpleSecondaryVertexESProducer",
  use3d = cms.bool( True ),
  useSignificance = cms.bool( True ),
  unBoost = cms.bool( False ),
  minTracks = cms.uint32( 3 ),
  minVertices = cms.uint32( 1 ),
  appendToDataLabel = cms.string( "" )
)
process.SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "SteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.TrackerAdditionalParametersPerDetESModule = cms.ESProducer( "TrackerAdditionalParametersPerDetESModule",
  appendToDataLabel = cms.string( "" )
)
process.TrackerDigiGeometryESModule = cms.ESProducer( "TrackerDigiGeometryESModule",
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  alignmentsLabel = cms.string( "" )
)
process.TrackerGeometricDetESModule = cms.ESProducer( "TrackerGeometricDetESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" ),
  appendToDataLabel = cms.string( "" )
)
process.VolumeBasedMagneticFieldESProducer = cms.ESProducer( "VolumeBasedMagneticFieldESProducerFromDB",
  label = cms.untracked.string( "" ),
  debugBuilder = cms.untracked.bool( False ),
  valueOverride = cms.int32( -1 )
)
process.ZdcGeometryFromDBEP = cms.ESProducer( "ZdcGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ctppsGeometryESModule = cms.ESProducer( "CTPPSGeometryESModule",
  verbosity = cms.untracked.uint32( 1 ),
  buildMisalignedGeometry = cms.bool( False ),
  isRun2 = cms.bool( False ),
  dbTag = cms.string( "" ),
  compactViewTag = cms.string( "" ),
  fromPreprocessedDB = cms.untracked.bool( True ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.ctppsInterpolatedOpticalFunctionsESSource = cms.ESProducer( "CTPPSInterpolatedOpticalFunctionsESSource",
  lhcInfoLabel = cms.string( "" ),
  lhcInfoPerFillLabel = cms.string( "" ),
  lhcInfoPerLSLabel = cms.string( "" ),
  opticsLabel = cms.string( "" ),
  useNewLHCInfo = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.ecalElectronicsMappingHostESProducer = cms.ESProducer( "EcalElectronicsMappingHostESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.ecalMultifitConditionsHostESProducer = cms.ESProducer( "EcalMultifitConditionsHostESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  flagMask = cms.PSet( 
    kBad = cms.vstring( 'kFaultyHardware',
      'kDead',
      'kKilled' ),
    kGood = cms.vstring( 'kGood' ),
    kRecovered = cms.vstring( 'kLeadingEdgeRecovered',
      'kTowerRecovered' ),
    kProblematic = cms.vstring( 'kPoorReco',
      'kPoorCalib',
      'kNoisy',
      'kSaturated' ),
    kWeird = cms.vstring( 'kWeird',
      'kDiWeird' ),
    kTime = cms.vstring( 'kOutOfTime' )
  ),
  dbstatusMask = cms.PSet( 
    kBad = cms.vstring( 'kNonRespondingIsolated',
      'kDeadVFE',
      'kDeadFE',
      'kNoDataNoTP' ),
    kGood = cms.vstring( 'kOk' ),
    kRecovered = cms.vstring(  ),
    kProblematic = cms.vstring( 'kDAC',
      'kNoLaser',
      'kNoisy',
      'kNNoisy',
      'kNNNoisy',
      'kNNNNoisy',
      'kNNNNNoisy',
      'kFixedG6',
      'kFixedG1',
      'kFixedG0' ),
    kWeird = cms.vstring(  ),
    kTime = cms.vstring(  )
  ),
  timeThresh = cms.double( 2.0 )
)
process.hcalChannelPropertiesESProd = cms.ESProducer( "HcalChannelPropertiesEP" )
process.hcalDDDRecConstants = cms.ESProducer( "HcalDDDRecConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
process.hcalDDDSimConstants = cms.ESProducer( "HcalDDDSimConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
process.hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.hcalMahiConditionsESProducer = cms.ESProducer( "HcalMahiConditionsESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  phase = cms.uint32( 1 ),
  RecoveredRecHitBits = cms.vstring( '' ),
  SeverityLevels = cms.VPSet( 
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellExcludeFromHBHENoiseSummary' ),
      RecHitFlags = cms.vstring( 'HBHEIsolatedNoise',
        'HFAnomalousHit' ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
        'HBHESpikeNoise',
        'HBHETS4TS5Noise',
        'HBHEOOTPU',
        'HBHEFlatNoise',
        'HBHENegativeNoise' ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HFLongShort',
        'HFS8S1Ratio',
        'HFPET',
        'HFSignalAsymmetry' ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerMask' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 12 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellHot' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellOff',
  'HcalCellDead' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 20 )
    )
  ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRecoParamWithPulseShapeESProducer = cms.ESProducer( "HcalRecoParamWithPulseShapeESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hcalSiPMCharacteristicsESProducer = cms.ESProducer( "HcalSiPMCharacteristicsESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hcal_db_producer = cms.ESProducer( "HcalDbProducer" )
process.hltBoostedDoubleSecondaryVertexAK8Computer = cms.ESProducer( "CandidateBoostedDoubleSecondaryVertexESProducer",
  useCondDB = cms.bool( False ),
  gbrForestLabel = cms.string( "" ),
  weightFile = cms.FileInPath( "RecoBTag/SecondaryVertex/data/BoostedDoubleSV_AK8_BDT_v4.weights.xml.gz" ),
  useGBRForest = cms.bool( True ),
  useAdaBoost = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltCombinedSecondaryVertex = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( 2.0 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( -99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  SoftLeptonFlip = cms.bool( False ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  minimumTrackWeight = cms.double( 0.5 ),
  charmCut = cms.double( 1.5 ),
  trackSort = cms.string( "sip2dSig" ),
  trackMultiplicityMin = cms.uint32( 3 ),
  vertexFlip = cms.bool( False ),
  useCategories = cms.bool( True ),
  categoryVariableName = cms.string( "vertexCategory" ),
  calibrationRecords = cms.vstring( 'CombinedSVRecoVertex',
    'CombinedSVPseudoVertex',
    'CombinedSVNoVertex' ),
  calibrationRecord = cms.string( "" ),
  recordLabel = cms.string( "HLT" ),
  appendToDataLabel = cms.string( "" )
)
process.hltCombinedSecondaryVertexV2 = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( 2.0 )
  ),
  trackSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( -99999.9 )
  ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  SoftLeptonFlip = cms.bool( False ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  minimumTrackWeight = cms.double( 0.5 ),
  charmCut = cms.double( 1.5 ),
  trackSort = cms.string( "sip2dSig" ),
  trackMultiplicityMin = cms.uint32( 3 ),
  vertexFlip = cms.bool( False ),
  useCategories = cms.bool( True ),
  categoryVariableName = cms.string( "vertexCategory" ),
  calibrationRecords = cms.vstring( 'CombinedSVIVFV2RecoVertex',
    'CombinedSVIVFV2PseudoVertex',
    'CombinedSVIVFV2NoVertex' ),
  calibrationRecord = cms.string( "" ),
  recordLabel = cms.string( "HLT" ),
  appendToDataLabel = cms.string( "" )
)
process.hltDisplacedDijethltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  nthTrack = cms.int32( -1 ),
  impactParameterType = cms.int32( 1 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  appendToDataLabel = cms.string( "" )
)
process.hltDisplacedDijethltESPTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  nthTrack = cms.int32( 1 ),
  impactParameterType = cms.int32( 1 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False ),
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESChi2MeasurementEstimatorForP5 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 100.0 ),
  nSigma = cms.double( 4.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 100000.0 ),
  ComponentName = cms.string( "hltESChi2MeasurementEstimatorForP5" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESFittingSmootherRKP5 = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESFittingSmootherRKP5" ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 4 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  SimpleMagneticField = cms.string( "" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  MaxDPhi = cms.double( 1.6 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPBwdAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  ComponentName = cms.string( "hltESPBwdAnalyticalPropagator" ),
  SimpleMagneticField = cms.string( "" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  MaxDPhi = cms.double( 1.6 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPBwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.hltESPChi2ChargeLooseMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeLooseMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator2000 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 2000.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator9ForHI = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutForHI" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeTightMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator100 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 40.0 ),
  nSigma = cms.double( 4.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator100" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator16 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator16" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator30 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator30" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator9 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator9" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPCloseComponentsMerger5D = cms.ESProducer( "CloseComponentsMergerESProducer5D",
  ComponentName = cms.string( "hltESPCloseComponentsMerger5D" ),
  MaxComponents = cms.int32( 12 ),
  DistanceMeasure = cms.string( "hltESPKullbackLeiblerDistance5D" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDetachedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  nthTrack = cms.int32( -1 ),
  impactParameterType = cms.int32( 1 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducerLong = cms.ESProducer( "PromptTrackCountingESProducer",
  nthTrack = cms.int32( -1 ),
  impactParameterType = cms.int32( 1 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maxImpactParameter = cms.double( 0.2 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducerShortSig5 = cms.ESProducer( "PromptTrackCountingESProducer",
  nthTrack = cms.int32( -1 ),
  impactParameterType = cms.int32( 1 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maxImpactParameter = cms.double( 0.05 ),
  maxImpactParameterSig = cms.double( 5.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDisplacedDijethltTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  nthTrack = cms.int32( 1 ),
  impactParameterType = cms.int32( 1 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False ),
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDisplacedDijethltTrackCounting2D1stLoose = cms.ESProducer( "TrackCountingESProducer",
  minimumImpactParameter = cms.double( 0.03 ),
  useSignedImpactParameterSig = cms.bool( False ),
  nthTrack = cms.int32( 1 ),
  impactParameterType = cms.int32( 1 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False ),
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDisplacedDijethltTrackCounting2D2ndLong = cms.ESProducer( "TrackCountingESProducer",
  minimumImpactParameter = cms.double( 0.2 ),
  useSignedImpactParameterSig = cms.bool( True ),
  nthTrack = cms.int32( 2 ),
  impactParameterType = cms.int32( 1 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False ),
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPEcalTrigTowerConstituentsMapBuilder = cms.ESProducer( "EcalTrigTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/EcalMapping/data/EndCap_TTMap.txt" )
)
process.hltESPElectronMaterialEffects = cms.ESProducer( "GsfMaterialEffectsESProducer",
  BetheHeitlerParametrization = cms.string( "BetheHeitler_cdfmom_nC6_O5.par" ),
  EnergyLossUpdator = cms.string( "GsfBetheHeitlerUpdator" ),
  ComponentName = cms.string( "hltESPElectronMaterialEffects" ),
  MultipleScatteringUpdator = cms.string( "MultipleScatteringUpdator" ),
  Mass = cms.double( 5.11E-4 ),
  BetheHeitlerCorrection = cms.int32( 2 )
)
process.hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  looperFitter = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPFwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.hltESPGlobalDetLayerGeometry = cms.ESProducer( "GlobalDetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPGlobalDetLayerGeometry" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPGlobalTrackingGeometryESProducer = cms.ESProducer( "GlobalTrackingGeometryESProducer" )
process.hltESPGsfElectronFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPGsfElectronFittingSmoother" ),
  Fitter = cms.string( "hltESPGsfTrajectoryFitter" ),
  Smoother = cms.string( "hltESPGsfTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPGsfTrajectoryFitter = cms.ESProducer( "GsfTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPGsfTrajectoryFitter" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  GeometricalPropagator = cms.string( "hltESPAnalyticalPropagator" ),
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPGsfTrajectorySmoother = cms.ESProducer( "GsfTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPGsfTrajectorySmoother" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  GeometricalPropagator = cms.string( "hltESPBwdAnalyticalPropagator" ),
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  ErrorRescaling = cms.double( 100.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPInitialStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPInitialStepChi2MeasurementEstimator36 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 36.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2MeasurementEstimator36" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKullbackLeiblerDistance5D = cms.ESProducer( "DistanceBetweenComponentsESProducer5D",
  DistanceMeasure = cms.string( "KullbackLeibler" ),
  ComponentName = cms.string( "hltESPKullbackLeiblerDistance5D" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPLowPtStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  SiStripQualityLabel = cms.string( "" ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TIB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TID = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TEC = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    )
  ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPMixedStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMixedTripletStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMuonDetLayerGeometryESProducer = cms.ESProducer( "MuonDetLayerGeometryESProducer" )
process.hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPFRecHitHCALParams = cms.ESProducer( "PFRecHitHCALParamsESProducer@alpaka",
  energyThresholdsHB = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
  energyThresholdsHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPFRecHitHCALTopology = cms.ESProducer( "PFRecHitHCALTopologyESProducer@alpaka",
  usePFThresholdsFromDB = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPixelCPEFastParamsHIonPhase1 = cms.ESProducer( "PixelCPEFastParamsESProducerAlpakaHIonPhase1@alpaka",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "PixelCPEFastParamsHIonPhase1" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPEFastParamsPhase1 = cms.ESProducer( "PixelCPEFastParamsESProducerAlpakaPhase1@alpaka",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "PixelCPEFastParams" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( False ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  eff_charge_cut_lowY = cms.double( 0.0 ),
  size_cutX = cms.double( 3.0 ),
  size_cutY = cms.double( 3.0 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  inflate_errors = cms.bool( False ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  NoTemplateErrorsWhenNoTrkAngles = cms.bool( False ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  IrradiationBiasCorrection = cms.bool( True ),
  DoCosmics = cms.bool( False ),
  isPhase2 = cms.bool( False ),
  SmallPitch = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPETemplateReco = cms.ESProducer( "PixelCPETemplateRecoESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  barrelTemplateID = cms.int32( 0 ),
  forwardTemplateID = cms.int32( 0 ),
  directoryWithTemplates = cms.int32( 0 ),
  speed = cms.int32( -2 ),
  UseClusterSplitter = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPETemplateReco" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPPixelLessStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelLessStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPPixelPairStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelPairStepChi2MeasurementEstimator25 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 25.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2MeasurementEstimator25" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelPairTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelPairTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPRKTrajectoryFitter" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPRKTrajectorySmoother" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( True ),
  ptMin = cms.double( -1.0 )
)
process.hltESPSiPixelCablingSoA = cms.ESProducer( "SiPixelCablingSoAESProducer@alpaka",
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPSiPixelGainCalibrationForHLTSoA = cms.ESProducer( "SiPixelGainCalibrationForHLTSoAESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  distance = cms.double( 0.5 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPStripCPEfromTrackAngle = cms.ESProducer( "StripCPEESProducer",
  ComponentName = cms.string( "hltESPStripCPEfromTrackAngle" ),
  ComponentType = cms.string( "StripCPEfromTrackAngle" ),
  parameters = cms.PSet( 
    mTIB_P1 = cms.double( 0.202 ),
    maxChgOneMIP = cms.double( 6000.0 ),
    mTEC_P0 = cms.double( -1.885 ),
    mTOB_P1 = cms.double( 0.253 ),
    mTEC_P1 = cms.double( 0.471 ),
    mLC_P2 = cms.double( 0.3 ),
    mLC_P1 = cms.double( 0.618 ),
    mTOB_P0 = cms.double( -1.026 ),
    mLC_P0 = cms.double( -0.326 ),
    useLegacyError = cms.bool( False ),
    mTIB_P0 = cms.double( -0.742 ),
    mTID_P1 = cms.double( 0.433 ),
    mTID_P0 = cms.double( -1.427 )
  )
)
process.hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderAngleAndTemplate" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPETemplateReco" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderWithoutAngle4PixelTriplets" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPTobTecStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmoother" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitter" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmoother" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPTobTecStepFitterSmoother" ),
  looperFitter = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTobTecStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.09 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPTrackAlgoPriorityOrder = cms.ESProducer( "TrackAlgoPriorityOrderESProducer",
  ComponentName = cms.string( "hltESPTrackAlgoPriorityOrder" ),
  algoOrder = cms.vstring(  ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrackSelectionTfCKF = cms.ESProducer( "TfGraphDefProducer",
  ComponentName = cms.string( "hltESPTrackSelectionTfCKF" ),
  FileName = cms.FileInPath( "RecoTracker/FinalTrackSelectors/data/TrackTfClassifier/CKF_Run3_12_5_0_pre5.pb" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrackerRecoGeometryESProducer = cms.ESProducer( "TrackerRecoGeometryESProducer",
  usePhase2Stacks = cms.bool( False ),
  trackerGeometryLabel = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.5 ),
  ValidHitBonus = cms.double( 100.0 ),
  MissingHitPenalty = cms.double( 0.0 ),
  allowSharedFirstHit = cms.bool( False )
)
process.hltESPTrajectoryCleanerBySharedHitsP5 = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHitsP5" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltPixelTracksCleanerBySharedHits = cms.ESProducer( "PixelTrackCleanerBySharedHitsESProducer",
  ComponentName = cms.string( "hltPixelTracksCleanerBySharedHits" ),
  useQuadrupletAlgo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltTrackCleaner = cms.ESProducer( "TrackCleanerESProducer",
  ComponentName = cms.string( "hltTrackCleaner" ),
  appendToDataLabel = cms.string( "" )
)
process.hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.multipleScatteringParametrisationMakerESProducer = cms.ESProducer( "MultipleScatteringParametrisationMakerESProducer",
  appendToDataLabel = cms.string( "" )
)
process.muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( True ),
  includeGEM = cms.bool( True ),
  includeME0 = cms.bool( False )
)
process.muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.1 ),
  ValidHitBonus = cms.double( 1000.0 ),
  MissingHitPenalty = cms.double( 1.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  appendToDataLabel = cms.string( "" )
)
process.preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.siPixelGainCalibrationForHLTGPU = cms.ESProducer( "SiPixelGainCalibrationForHLTGPUESProducer",
  appendToDataLabel = cms.string( "" )
)
process.siPixelQualityESProducer = cms.ESProducer( "SiPixelQualityESProducer",
  siPixelQualityFromDbLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiPixelQualityFromDbRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiPixelDetVOffRcd" ),
      tag = cms.string( "" )
    )
  ),
  appendToDataLabel = cms.string( "" )
)
process.siPixelROCsStatusAndMappingWrapperESProducer = cms.ESProducer( "SiPixelROCsStatusAndMappingWrapperESProducer",
  ComponentName = cms.string( "" ),
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer" )
process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer( "SiStripBackPlaneCorrectionDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  BackPlaneCorrectionPeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  ),
  BackPlaneCorrectionDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  )
)
process.siStripLorentzAngleDepESProducer = cms.ESProducer( "SiStripLorentzAngleDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  LorentzAnglePeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  ),
  LorentzAngleDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  )
)
process.sistripconn = cms.ESProducer( "SiStripConnectivity" )
process.trackerTopology = cms.ESProducer( "TrackerTopologyEP",
  appendToDataLabel = cms.string( "" )
)
process.zdcTopologyEP = cms.ESProducer( "ZdcTopologyEP",
  appendToDataLabel = cms.string( "" )
)

process.FastTimerService = cms.Service( "FastTimerService",
    printEventSummary = cms.untracked.bool( False ),
    printRunSummary = cms.untracked.bool( True ),
    printJobSummary = cms.untracked.bool( True ),
    writeJSONSummary = cms.untracked.bool( False ),
    jsonFileName = cms.untracked.string( "resources.json" ),
    enableDQM = cms.untracked.bool( True ),
    enableDQMbyModule = cms.untracked.bool( False ),
    enableDQMbyPath = cms.untracked.bool( False ),
    enableDQMbyLumiSection = cms.untracked.bool( True ),
    enableDQMbyProcesses = cms.untracked.bool( True ),
    enableDQMTransitions = cms.untracked.bool( False ),
    dqmTimeRange = cms.untracked.double( 2000.0 ),
    dqmTimeResolution = cms.untracked.double( 5.0 ),
    dqmMemoryRange = cms.untracked.double( 1000000.0 ),
    dqmMemoryResolution = cms.untracked.double( 5000.0 ),
    dqmPathTimeRange = cms.untracked.double( 100.0 ),
    dqmPathTimeResolution = cms.untracked.double( 0.5 ),
    dqmPathMemoryRange = cms.untracked.double( 1000000.0 ),
    dqmPathMemoryResolution = cms.untracked.double( 5000.0 ),
    dqmModuleTimeRange = cms.untracked.double( 40.0 ),
    dqmModuleTimeResolution = cms.untracked.double( 0.2 ),
    dqmModuleMemoryRange = cms.untracked.double( 100000.0 ),
    dqmModuleMemoryResolution = cms.untracked.double( 500.0 ),
    dqmLumiSectionsRange = cms.untracked.uint32( 2500 ),
    dqmPath = cms.untracked.string( "HLT/TimerService" ),
)
process.MessageLogger = cms.Service( "MessageLogger",
    suppressWarning = cms.untracked.vstring( 'hltL3MuonsIOHit',
      'hltL3MuonsOIHit',
      'hltL3MuonsOIState',
      'hltLightPFTracks',
      'hltPixelTracks',
      'hltPixelTracksForHighMult',
      'hltSiPixelClusters',
      'hltSiPixelDigis' ),
    suppressFwkInfo = cms.untracked.vstring(  ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    debugModules = cms.untracked.vstring(  ),
    cerr = cms.untracked.PSet( 
      INFO = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      noTimeStamps = cms.untracked.bool( False ),
      FwkReport = cms.untracked.PSet( 
        reportEvery = cms.untracked.int32( 1 ),
        limit = cms.untracked.int32( 0 )
      ),
      default = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) ),
      Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      FwkSummary = cms.untracked.PSet( 
        reportEvery = cms.untracked.int32( 1 ),
        limit = cms.untracked.int32( 10000000 )
      ),
      threshold = cms.untracked.string( "INFO" ),
      enableStatistics = cms.untracked.bool( False )
    ),
    suppressError = cms.untracked.vstring( 'hltL3TkTracksFromL2IOHit',
      'hltL3TkTracksFromL2OIHit',
      'hltL3TkTracksFromL2OIState' )
)
process.PrescaleService = cms.Service( "PrescaleService",
    lvl1Labels = cms.vstring( 'Emergency',
      'EmittanceScan',
      '2p0E34+ZeroBias+HLTPhysics',
      '2p0E34',
      '1p95E34',
      '1p9E34',
      '1p85E34',
      '1p8E34',
      '1p6E34',
      '1p4E34',
      '2p0E34_OnlyMuons',
      '2p0E34_NoL1CICADA',
      'Backup1',
      'Backup2',
      'HIon',
      'PRef' ),
    prescaleTable = cms.VPSet(  *(
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle33_CaloIdL_MW_v30" ),
        prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele30_WPTight_Gsf_v13" ),
        prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele32_WPTight_Gsf_v27" ),
        prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31" ),
        prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele115_CaloIdVT_GsfTrkIdT_v27" ),
        prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele135_CaloIdVT_GsfTrkIdT_v20" ),
        prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0 )
      ),
) ),
    lvl1DefaultLabel = cms.string( "2p0E34" ),
    forceDefault = cms.bool( False )
)
process.ThroughputService = cms.Service( "ThroughputService",
    eventRange = cms.untracked.uint32( 10000 ),
    eventResolution = cms.untracked.uint32( 1 ),
    printEventSummary = cms.untracked.bool( False ),
    enableDQM = cms.untracked.bool( True ),
    dqmPathByProcesses = cms.untracked.bool( True ),
    dqmPath = cms.untracked.string( "HLT/Throughput" ),
    timeRange = cms.untracked.double( 60000.0 ),
    timeResolution = cms.untracked.double( 5.828 )
)

process.hltGetRaw = cms.EDAnalyzer( "HLTGetRaw",
    RawDataCollection = cms.InputTag( "rawDataCollector" )
)
process.hltPSetMap = cms.EDProducer( "ParameterSetBlobProducer" )
process.hltBoolFalse = cms.EDFilter( "HLTBool",
    result = cms.bool( False )
)
process.hltTriggerType = cms.EDFilter( "HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32( 1 )
)
process.hltGtStage2Digis = cms.EDProducer( "L1TRawToDigi",
    FedIds = cms.vint32( 1404 ),
    Setup = cms.string( "stage2::GTSetup" ),
    FWId = cms.uint32( 0 ),
    DmxFWId = cms.uint32( 0 ),
    FWOverride = cms.bool( False ),
    TMTCheck = cms.bool( True ),
    CTP7 = cms.untracked.bool( False ),
    MTF7 = cms.untracked.bool( False ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    lenSlinkHeader = cms.untracked.int32( 8 ),
    lenSlinkTrailer = cms.untracked.int32( 8 ),
    lenAMCHeader = cms.untracked.int32( 8 ),
    lenAMCTrailer = cms.untracked.int32( 0 ),
    lenAMC13Header = cms.untracked.int32( 8 ),
    lenAMC13Trailer = cms.untracked.int32( 8 ),
    debug = cms.untracked.bool( False ),
    MinFeds = cms.uint32( 0 )
)
process.hltGtStage2ObjectMap = cms.EDProducer( "L1TGlobalProducer",
    MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' ),
    CICADAInputTag = cms.InputTag( 'hltGtStage2Digis','CICADAScore' ),
    ExtInputTag = cms.InputTag( "hltGtStage2Digis" ),
    AlgoBlkInputTag = cms.InputTag( "hltGtStage2Digis" ),
    GetPrescaleColumnFromData = cms.bool( False ),
    AlgorithmTriggersUnprescaled = cms.bool( True ),
    RequireMenuToMatchAlgoBlkInput = cms.bool( True ),
    AlgorithmTriggersUnmasked = cms.bool( True ),
    useMuonShowers = cms.bool( True ),
    produceAXOL1TLScore = cms.bool( False ),
    resetPSCountersEachLumiSec = cms.bool( True ),
    semiRandomInitialPSCounters = cms.bool( False ),
    ProduceL1GtDaqRecord = cms.bool( True ),
    ProduceL1GtObjectMapRecord = cms.bool( True ),
    EmulateBxInEvent = cms.int32( 1 ),
    L1DataBxInEvent = cms.int32( 5 ),
    AlternativeNrBxBoardDaq = cms.uint32( 0 ),
    BstLengthBytes = cms.int32( -1 ),
    PrescaleSet = cms.uint32( 1 ),
    Verbosity = cms.untracked.int32( 0 ),
    PrintL1Menu = cms.untracked.bool( False ),
    TriggerMenuLuminosity = cms.string( "startup" )
)
process.hltOnlineMetaDataDigis = cms.EDProducer( "OnlineMetaDataRawToDigi",
    onlineMetaDataInputLabel = cms.InputTag( "rawDataCollector" )
)
process.hltOnlineBeamSpot = cms.EDProducer( "BeamSpotOnlineProducer",
    changeToCMSCoordinates = cms.bool( False ),
    maxZ = cms.double( 40.0 ),
    setSigmaZ = cms.double( 0.0 ),
    beamMode = cms.untracked.uint32( 11 ),
    src = cms.InputTag( "" ),
    gtEvmLabel = cms.InputTag( "" ),
    maxRadius = cms.double( 2.0 ),
    useBSOnlineRecords = cms.bool( True ),
    timeThreshold = cms.int32( 48 ),
    sigmaZThreshold = cms.double( 2.0 ),
    sigmaXYThreshold = cms.double( 4.0 )
)
process.hltL1sSingleAndDoubleEGNonIsoOrWithEG26WithJetAndTau = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleEG26er2p5 OR L1_SingleEG34er2p5 OR L1_SingleEG36er2p5 OR L1_SingleEG38er2p5 OR L1_SingleEG40er2p5 OR L1_SingleEG42er2p5 OR L1_SingleEG45er2p5 OR L1_SingleEG60 OR L1_DoubleEG_22_10_er2p5 OR L1_DoubleEG_25_12_er2p5 OR L1_DoubleEG_25_14_er2p5 OR L1_SingleJet160er2p5 OR L1_SingleJet180 OR L1_SingleJet200 OR L1_SingleTau120er2p1 OR L1_SingleTau130er2p1" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDoubleEle33CaloIdLMW = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltEcalDigisLegacy = cms.EDProducer( "EcalRawToDigi",
    tccUnpacking = cms.bool( True ),
    FedLabel = cms.InputTag( "listfeds" ),
    srpUnpacking = cms.bool( True ),
    syncCheck = cms.bool( True ),
    feIdCheck = cms.bool( True ),
    silentMode = cms.untracked.bool( True ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    orderedFedList = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    eventPut = cms.bool( True ),
    numbTriggerTSamples = cms.int32( 1 ),
    numbXtalTSamples = cms.int32( 10 ),
    orderedDCCIdList = cms.vint32( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 ),
    FEDs = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    DoRegional = cms.bool( False ),
    feUnpacking = cms.bool( True ),
    forceToKeepFRData = cms.bool( False ),
    headerUnpacking = cms.bool( True ),
    memUnpacking = cms.bool( True )
)
process.hltEcalDigisSoA = cms.EDProducer( "EcalRawToDigiPortable@alpaka",
    InputLabel = cms.InputTag( "rawDataCollector" ),
    FEDs = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    maxChannelsEB = cms.uint32( 61200 ),
    maxChannelsEE = cms.uint32( 14648 ),
    digisLabelEB = cms.string( "ebDigis" ),
    digisLabelEE = cms.string( "eeDigis" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltEcalDigis = cms.EDProducer( "EcalDigisFromPortableProducer",
    digisInLabelEB = cms.InputTag( 'hltEcalDigisSoA','ebDigis' ),
    digisInLabelEE = cms.InputTag( 'hltEcalDigisSoA','eeDigis' ),
    digisOutLabelEB = cms.string( "ebDigis" ),
    digisOutLabelEE = cms.string( "eeDigis" ),
    produceDummyIntegrityCollections = cms.bool( False )
)
process.hltEcalUncalibRecHitSoA = cms.EDProducer( "EcalUncalibRecHitProducerPortable@alpaka",
    digisLabelEB = cms.InputTag( 'hltEcalDigisSoA','ebDigis' ),
    digisLabelEE = cms.InputTag( 'hltEcalDigisSoA','eeDigis' ),
    recHitsLabelEB = cms.string( "EcalUncalibRecHitsEB" ),
    recHitsLabelEE = cms.string( "EcalUncalibRecHitsEE" ),
    EBtimeFitLimits_Lower = cms.double( 0.2 ),
    EBtimeFitLimits_Upper = cms.double( 1.4 ),
    EEtimeFitLimits_Lower = cms.double( 0.2 ),
    EEtimeFitLimits_Upper = cms.double( 1.4 ),
    EBtimeConstantTerm = cms.double( 0.6 ),
    EEtimeConstantTerm = cms.double( 1.0 ),
    EBtimeNconst = cms.double( 28.5 ),
    EEtimeNconst = cms.double( 31.8 ),
    outOfTimeThresholdGain12pEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain12mEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain61pEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain61mEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain12pEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain12mEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain61pEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain61mEE = cms.double( 1000.0 ),
    amplitudeThresholdEB = cms.double( 10.0 ),
    amplitudeThresholdEE = cms.double( 10.0 ),
    EBtimeFitParameters = cms.vdouble( -2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 91.01147, -50.35761, 11.05621 ),
    EEtimeFitParameters = cms.vdouble( -2.390548, 3.553628, -17.62341, 67.67538, -133.213, 140.7432, -75.41106, 16.20277 ),
    EBamplitudeFitParameters = cms.vdouble( 1.138, 1.652 ),
    EEamplitudeFitParameters = cms.vdouble( 1.89, 1.4 ),
    kernelMinimizeThreads = cms.untracked.vuint32( 32, 1, 1 ),
    shouldRunTimingComputation = cms.bool( True ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltEcalUncalibRecHit = cms.EDProducer( "EcalUncalibRecHitSoAToLegacy",
    inputCollectionEB = cms.InputTag( 'hltEcalUncalibRecHitSoA','EcalUncalibRecHitsEB' ),
    outputLabelEB = cms.string( "EcalUncalibRecHitsEB" ),
    isPhase2 = cms.bool( False ),
    inputCollectionEE = cms.InputTag( 'hltEcalUncalibRecHitSoA','EcalUncalibRecHitsEE' ),
    outputLabelEE = cms.string( "EcalUncalibRecHitsEE" )
)
process.hltEcalDetIdToBeRecovered = cms.EDProducer( "EcalDetIdToBeRecoveredProducer",
    ebSrFlagCollection = cms.InputTag( "hltEcalDigisLegacy" ),
    eeSrFlagCollection = cms.InputTag( "hltEcalDigisLegacy" ),
    ebIntegrityGainErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityGainErrors' ),
    ebIntegrityGainSwitchErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityGainSwitchErrors' ),
    ebIntegrityChIdErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityChIdErrors' ),
    eeIntegrityGainErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityGainErrors' ),
    eeIntegrityGainSwitchErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityGainSwitchErrors' ),
    eeIntegrityChIdErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityChIdErrors' ),
    integrityTTIdErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityTTIdErrors' ),
    integrityBlockSizeErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityBlockSizeErrors' ),
    ebDetIdToBeRecovered = cms.string( "ebDetId" ),
    eeDetIdToBeRecovered = cms.string( "eeDetId" ),
    ebFEToBeRecovered = cms.string( "ebFE" ),
    eeFEToBeRecovered = cms.string( "eeFE" )
)
process.hltEcalRecHit = cms.EDProducer( "EcalRecHitProducer",
    EErechitCollection = cms.string( "EcalRecHitsEE" ),
    EEuncalibRecHitCollection = cms.InputTag( 'hltEcalUncalibRecHit','EcalUncalibRecHitsEE' ),
    EBuncalibRecHitCollection = cms.InputTag( 'hltEcalUncalibRecHit','EcalUncalibRecHitsEB' ),
    EBrechitCollection = cms.string( "EcalRecHitsEB" ),
    ChannelStatusToBeExcluded = cms.vstring(  ),
    killDeadChannels = cms.bool( True ),
    algo = cms.string( "EcalRecHitWorkerSimple" ),
    EBLaserMIN = cms.double( 0.5 ),
    EELaserMIN = cms.double( 0.5 ),
    EBLaserMAX = cms.double( 3.0 ),
    EELaserMAX = cms.double( 8.0 ),
    timeCalibTag = cms.ESInputTag( "","" ),
    timeOffsetTag = cms.ESInputTag( "","" ),
    skipTimeCalib = cms.bool( False ),
    laserCorrection = cms.bool( True ),
    flagsMapDBReco = cms.PSet( 
      kDead = cms.vstring( 'kNoDataNoTP' ),
      kGood = cms.vstring( 'kOk',
        'kDAC',
        'kNoLaser',
        'kNoisy' ),
      kTowerRecovered = cms.vstring( 'kDeadFE' ),
      kNoisy = cms.vstring( 'kNNoisy',
        'kFixedG6',
        'kFixedG1' ),
      kNeighboursRecovered = cms.vstring( 'kFixedG0',
        'kNonRespondingIsolated',
        'kDeadVFE' )
    ),
    algoRecover = cms.string( "EcalRecHitWorkerRecover" ),
    recoverEBIsolatedChannels = cms.bool( False ),
    recoverEEIsolatedChannels = cms.bool( False ),
    recoverEBVFE = cms.bool( False ),
    recoverEEVFE = cms.bool( False ),
    recoverEBFE = cms.bool( False ),
    recoverEEFE = cms.bool( False ),
    dbStatusToBeExcludedEE = cms.vint32( 14, 78, 142 ),
    dbStatusToBeExcludedEB = cms.vint32( 14, 78, 142 ),
    logWarningEtThreshold_EB_FE = cms.double( -1.0 ),
    logWarningEtThreshold_EE_FE = cms.double( -1.0 ),
    ebDetIdToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','ebDetId' ),
    eeDetIdToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','eeDetId' ),
    ebFEToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','ebFE' ),
    eeFEToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','eeFE' ),
    singleChannelRecoveryMethod = cms.string( "NeuralNetworks" ),
    singleChannelRecoveryThreshold = cms.double( 8.0 ),
    sum8ChannelRecoveryThreshold = cms.double( 0.0 ),
    bdtWeightFileNoCracks = cms.FileInPath( "RecoLocalCalo/EcalDeadChannelRecoveryAlgos/data/BDTWeights/bdtgAllRH_8GT700MeV_noCracks_ZskimData2017_v1.xml" ),
    bdtWeightFileCracks = cms.FileInPath( "RecoLocalCalo/EcalDeadChannelRecoveryAlgos/data/BDTWeights/bdtgAllRH_8GT700MeV_onlyCracks_ZskimData2017_v1.xml" ),
    triggerPrimitiveDigiCollection = cms.InputTag( 'hltEcalDigisLegacy','EcalTriggerPrimitives' ),
    cleaningConfig = cms.PSet( 
      cThreshold_endcap = cms.double( 15.0 ),
      tightenCrack_e1_double = cms.double( 2.0 ),
      cThreshold_barrel = cms.double( 4.0 ),
      e6e2thresh = cms.double( 0.04 ),
      e4e1Threshold_barrel = cms.double( 0.08 ),
      e4e1Threshold_endcap = cms.double( 0.3 ),
      tightenCrack_e4e1_single = cms.double( 3.0 ),
      cThreshold_double = cms.double( 10.0 ),
      e4e1_b_barrel = cms.double( -0.024 ),
      tightenCrack_e6e2_double = cms.double( 3.0 ),
      e4e1_a_barrel = cms.double( 0.04 ),
      tightenCrack_e1_single = cms.double( 2.0 ),
      e4e1_a_endcap = cms.double( 0.02 ),
      e4e1_b_endcap = cms.double( -0.0125 ),
      ignoreOutOfTimeThresh = cms.double( 1.0E9 )
    )
)
process.hltEcalPreshowerDigis = cms.EDProducer( "ESRawToDigi",
    sourceTag = cms.InputTag( "rawDataCollector" ),
    debugMode = cms.untracked.bool( False ),
    InstanceES = cms.string( "" ),
    LookupTable = cms.FileInPath( "EventFilter/ESDigiToRaw/data/ES_lookup_table.dat" ),
    ESdigiCollection = cms.string( "" )
)
process.hltEcalPreshowerRecHit = cms.EDProducer( "ESRecHitProducer",
    ESrechitCollection = cms.string( "EcalRecHitsES" ),
    ESdigiCollection = cms.InputTag( "hltEcalPreshowerDigis" ),
    algo = cms.string( "ESRecHitWorker" ),
    ESRecoAlgo = cms.int32( 0 )
)
process.hltRechitInRegionsECAL = cms.EDProducer( "HLTEcalRecHitInAllL1RegionsProducer",
    productLabels = cms.vstring( 'EcalRecHitsEB',
      'EcalRecHitsEE' ),
    recHitLabels = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    l1InputRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "EGamma" ),
        minEt = cms.double( 5.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Jet' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Jet" ),
        minEt = cms.double( 170.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Tau' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Tau" ),
        minEt = cms.double( 100.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      )
    )
)
process.hltRechitInRegionsES = cms.EDProducer( "HLTEcalRecHitInAllL1RegionsProducer",
    productLabels = cms.vstring( 'EcalRecHitsES' ),
    recHitLabels = cms.VInputTag( 'hltEcalPreshowerRecHit:EcalRecHitsES' ),
    l1InputRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "EGamma" ),
        minEt = cms.double( 5.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Jet' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Jet" ),
        minEt = cms.double( 170.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Tau' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Tau" ),
        minEt = cms.double( 100.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      )
    )
)
process.hltParticleFlowRecHitECALL1Seeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEB' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEE' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    )
)
process.hltParticleFlowRecHitPSL1Seeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsES','EcalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    )
)
process.hltParticleFlowClusterPSL1Seeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSL1Seeded" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALUncorrectedL1Seeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALL1Seeded" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALL1Seeded = cms.EDProducer( "CorrectedECALPFClusterProducer",
    minimumPSEnergy = cms.double( 0.0 ),
    skipPS = cms.bool( False ),
    inputPS = cms.InputTag( "hltParticleFlowClusterPSL1Seeded" ),
    energyCorrector = cms.PSet( 
      recHitsEELabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      recHitsEBLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      applyCrackCorrections = cms.bool( False ),
      ebSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      applyMVACorrections = cms.bool( True ),
      eeSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      maxPtForMVAEvaluation = cms.double( 300.0 ),
      srfAwareCorrection = cms.bool( True )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedL1Seeded" )
)
process.hltParticleFlowSuperClusterECALL1Seeded = cms.EDProducer( "PFECALSuperClusterProducer",
    PFSuperClusterCollectionEndcap = cms.string( "hltParticleFlowSuperClusterECALEndcap" ),
    doSatelliteClusterMerge = cms.bool( False ),
    thresh_PFClusterBarrel = cms.double( 0.5 ),
    PFBasicClusterCollectionBarrel = cms.string( "hltParticleFlowBasicClusterECALBarrel" ),
    useRegression = cms.bool( True ),
    satelliteMajorityFraction = cms.double( 0.5 ),
    thresh_PFClusterEndcap = cms.double( 0.5 ),
    ESAssociation = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    PFBasicClusterCollectionPreshower = cms.string( "hltParticleFlowBasicClusterECALPreshower" ),
    verbose = cms.untracked.bool( False ),
    thresh_SCEt = cms.double( 4.0 ),
    etawidth_SuperClusterEndcap = cms.double( 0.04 ),
    phiwidth_SuperClusterEndcap = cms.double( 0.6 ),
    useDynamicDPhiWindow = cms.bool( True ),
    PFSuperClusterCollectionBarrel = cms.string( "hltParticleFlowSuperClusterECALBarrel" ),
    regressionConfig = cms.PSet( 
      uncertaintyKeyEB = cms.string( "pfscecal_EBUncertainty_online" ),
      ecalRecHitsEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ecalRecHitsEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      regressionKeyEE = cms.string( "pfscecal_EECorrection_online" ),
      regressionKeyEB = cms.string( "pfscecal_EBCorrection_online" ),
      uncertaintyKeyEE = cms.string( "pfscecal_EEUncertainty_online" ),
      isHLT = cms.bool( True ),
      regTrainedWithPS = cms.bool( True )
    ),
    applyCrackCorrections = cms.bool( False ),
    satelliteClusterSeedThreshold = cms.double( 50.0 ),
    etawidth_SuperClusterBarrel = cms.double( 0.04 ),
    PFBasicClusterCollectionEndcap = cms.string( "hltParticleFlowBasicClusterECALEndcap" ),
    PFClusters = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    thresh_PFClusterSeedBarrel = cms.double( 1.0 ),
    EnergyWeight = cms.string( "Raw" ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    thresh_PFClusterSeedEndcap = cms.double( 1.0 ),
    phiwidth_SuperClusterBarrel = cms.double( 0.6 ),
    thresh_PFClusterES = cms.double( 0.5 ),
    seedThresholdIsET = cms.bool( True ),
    isOOTCollection = cms.bool( False ),
    barrelRecHits = cms.InputTag( "" ),
    endcapRecHits = cms.InputTag( "" ),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string( "hltParticleFlowSuperClusterECALEndcapWithPreshower" ),
    dropUnseedable = cms.bool( False ),
    ClusteringType = cms.string( "Mustache" )
)
process.hltEgammaCandidates = cms.EDProducer( "EgammaHLTRecoEcalCandidateProducers",
    scHybridBarrelProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALL1Seeded','hltParticleFlowSuperClusterECALBarrel' ),
    scIslandEndcapProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALL1Seeded','hltParticleFlowSuperClusterECALEndcapWithPreshower' ),
    recoEcalCandidateCollection = cms.string( "" )
)
process.hltEGL1SingleAndDoubleEGNonIsoOrWithEG26WithJetAndTauFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1SeedFilterTag = cms.InputTag( "hltL1sSingleAndDoubleEGNonIsoOrWithEG26WithJetAndTau" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    ncandcut = cms.int32( 1 ),
    doIsolated = cms.bool( False ),
    region_eta_size = cms.double( 0.522 ),
    region_eta_size_ecap = cms.double( 1.0 ),
    region_phi_size = cms.double( 1.044 ),
    barrel_end = cms.double( 1.4791 ),
    endcap_end = cms.double( 2.65 )
)
process.hltEG33EtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleAndDoubleEGNonIsoOrWithEG26WithJetAndTauFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 33.0 ),
    etcutEE = cms.double( 33.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltHcalDigis = cms.EDProducer( "HcalRawToDigi",
    HcalFirstFED = cms.untracked.int32( 700 ),
    firstSample = cms.int32( 0 ),
    lastSample = cms.int32( 9 ),
    FilterDataQuality = cms.bool( True ),
    FEDs = cms.untracked.vint32(  ),
    UnpackZDC = cms.untracked.bool( True ),
    UnpackCalib = cms.untracked.bool( True ),
    UnpackUMNio = cms.untracked.bool( True ),
    UnpackTTP = cms.untracked.bool( False ),
    silent = cms.untracked.bool( True ),
    saveQIE10DataNSamples = cms.untracked.vint32(  ),
    saveQIE10DataTags = cms.untracked.vstring(  ),
    saveQIE11DataNSamples = cms.untracked.vint32(  ),
    saveQIE11DataTags = cms.untracked.vstring(  ),
    ComplainEmptyData = cms.untracked.bool( False ),
    UnpackerMode = cms.untracked.int32( 0 ),
    ExpectedOrbitMessageTime = cms.untracked.int32( -1 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    ElectronicsMap = cms.string( "" )
)
process.hltHcalDigisSoA = cms.EDProducer( "HcalDigisSoAProducer@alpaka",
    hbheDigisLabel = cms.InputTag( "hltHcalDigis" ),
    qie11DigiLabel = cms.InputTag( "hltHcalDigis" ),
    digisLabelF01HE = cms.string( "f01HEDigis" ),
    digisLabelF5HB = cms.string( "f5HBDigis" ),
    digisLabelF3HB = cms.string( "f3HBDigis" ),
    maxChannelsF01HE = cms.uint32( 10000 ),
    maxChannelsF5HB = cms.uint32( 10000 ),
    maxChannelsF3HB = cms.uint32( 10000 ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltHbheRecoSoA = cms.EDProducer( "HBHERecHitProducerPortable@alpaka",
    maxTimeSamples = cms.uint32( 10 ),
    kprep1dChannelsPerBlock = cms.uint32( 32 ),
    digisLabelF01HE = cms.InputTag( 'hltHcalDigisSoA','f01HEDigis' ),
    digisLabelF5HB = cms.InputTag( 'hltHcalDigisSoA','f5HBDigis' ),
    digisLabelF3HB = cms.InputTag( 'hltHcalDigisSoA','f3HBDigis' ),
    recHitsLabelM0HBHE = cms.string( "" ),
    sipmQTSShift = cms.int32( 0 ),
    sipmQNTStoSum = cms.int32( 3 ),
    firstSampleShift = cms.int32( 0 ),
    useEffectivePedestals = cms.bool( True ),
    meanTime = cms.double( 0.0 ),
    timeSigmaSiPM = cms.double( 2.5 ),
    timeSigmaHPD = cms.double( 5.0 ),
    ts4Thresh = cms.double( 0.0 ),
    applyTimeSlew = cms.bool( True ),
    tzeroTimeSlewParameters = cms.vdouble( 23.960177, 11.977461, 9.109694 ),
    slopeTimeSlewParameters = cms.vdouble( -3.178648, -1.5610227, -1.075824 ),
    tmaxTimeSlewParameters = cms.vdouble( 16.0, 10.0, 6.25 ),
    kernelMinimizeThreads = cms.vuint32( 16, 1, 1 ),
    pulseOffsets = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltHbhereco = cms.EDProducer( "HcalRecHitSoAToLegacy",
    src = cms.InputTag( "hltHbheRecoSoA" )
)
process.hltHfprereco = cms.EDProducer( "HFPreReconstructor",
    digiLabel = cms.InputTag( "hltHcalDigis" ),
    forceSOI = cms.int32( -1 ),
    soiShift = cms.int32( 0 ),
    dropZSmarkedPassed = cms.bool( True ),
    tsFromDB = cms.bool( False ),
    sumAllTimeSlices = cms.bool( False )
)
process.hltHfreco = cms.EDProducer( "HFPhase1Reconstructor",
    inputLabel = cms.InputTag( "hltHfprereco" ),
    algoConfigClass = cms.string( "HFPhase1PMTParams" ),
    useChannelQualityFromDB = cms.bool( False ),
    checkChannelQualityForDepth3and4 = cms.bool( False ),
    algorithm = cms.PSet( 
      tfallIfNoTDC = cms.double( -101.0 ),
      triseIfNoTDC = cms.double( -100.0 ),
      rejectAllFailures = cms.bool( True ),
      energyWeights = cms.vdouble( 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0 ),
      soiPhase = cms.uint32( 1 ),
      timeShift = cms.double( 0.0 ),
      tlimits = cms.vdouble( -1000.0, 1000.0, -1000.0, 1000.0 ),
      Class = cms.string( "HFFlexibleTimeCheck" )
    ),
    runHFStripFilter = cms.bool( False ),
    HFStripFilter = cms.PSet( 
      seedHitIetaMax = cms.int32( 35 ),
      verboseLevel = cms.untracked.int32( 10 ),
      maxThreshold = cms.double( 100.0 ),
      stripThreshold = cms.double( 40.0 ),
      wedgeCut = cms.double( 0.05 ),
      lstrips = cms.int32( 2 ),
      maxStripTime = cms.double( 10.0 ),
      gap = cms.int32( 2 ),
      timeMax = cms.double( 6.0 )
    ),
    setNoiseFlags = cms.bool( True ),
    S9S1stat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 35.1773, 35.37, 35.7933, 36.4472, 37.3317, 38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 47.4813, 49.98, 52.7093 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_optimumSlope = cms.vdouble( -99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 0.135313, 0.136289, 0.0589927 ),
      isS8S1 = cms.bool( False ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 43.5, 45.7, 48.32, 51.36, 54.82, 58.7, 63.0, 67.72, 72.86, 78.42, 84.4, 90.8, 97.62 ),
      short_optimumSlope = cms.vdouble( -99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 0.135313, 0.136289, 0.0589927 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    S8S1stat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 40.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_optimumSlope = cms.vdouble( 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ),
      isS8S1 = cms.bool( True ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 40.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0 ),
      short_optimumSlope = cms.vdouble( 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    PETstat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 35.1773, 35.37, 35.7933, 36.4472, 37.3317, 38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 47.4813, 49.98, 52.7093 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_R_29 = cms.vdouble( 0.8 ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 43.5, 45.7, 48.32, 51.36, 54.82, 58.7, 63.0, 67.72, 72.86, 78.42, 84.4, 90.8, 97.62 ),
      short_R_29 = cms.vdouble( 0.8 ),
      long_R = cms.vdouble( 0.98 ),
      short_R = cms.vdouble( 0.8 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    )
)
process.hltHoreco = cms.EDProducer( "HcalHitReconstructor",
    correctForTimeslew = cms.bool( True ),
    correctForPhaseContainment = cms.bool( True ),
    correctionPhaseNS = cms.double( 13.0 ),
    digiLabel = cms.InputTag( "hltHcalDigis" ),
    correctTiming = cms.bool( False ),
    dropZSmarkedPassed = cms.bool( True ),
    firstAuxTS = cms.int32( 4 ),
    firstSample = cms.int32( 4 ),
    samplesToAdd = cms.int32( 4 ),
    tsFromDB = cms.bool( True ),
    useLeakCorrection = cms.bool( False ),
    recoParamsFromDB = cms.bool( True ),
    setNegativeFlags = cms.bool( False ),
    saturationParameters = cms.PSet(  maxADCvalue = cms.int32( 127 ) ),
    setSaturationFlags = cms.bool( False ),
    Subdetector = cms.string( "HO" ),
    digiTimeFromDB = cms.bool( True ),
    hfTimingTrustParameters = cms.PSet(  ),
    setTimingTrustFlags = cms.bool( False ),
    setNoiseFlags = cms.bool( False ),
    digistat = cms.PSet(  ),
    HFInWindowStat = cms.PSet(  ),
    S9S1stat = cms.PSet(  ),
    S8S1stat = cms.PSet(  ),
    PETstat = cms.PSet(  ),
    dataOOTCorrectionName = cms.string( "" ),
    dataOOTCorrectionCategory = cms.string( "Data" ),
    mcOOTCorrectionName = cms.string( "" ),
    mcOOTCorrectionCategory = cms.string( "MC" )
)
process.hltFixedGridRhoFastjetAllCaloForMuons = cms.EDProducer( "FixedGridRhoProducerFastjetFromRecHit",
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    ebRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    eeRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    skipHCAL = cms.bool( False ),
    skipECAL = cms.bool( False ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    maxRapidity = cms.double( 2.5 ),
    gridSpacing = cms.double( 0.55 ),
    usePFThresholdsFromDB = cms.bool( True )
)
process.hltEgammaHoverE = cms.EDProducer( "EgammaHLTHcalVarProducerFromRecHit",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    etThresHB = cms.vdouble( 0.0, 0.0, 0.0, 0.0 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    etThresHE = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
    usePFThresholdsFromDB = cms.bool( True ),
    innerCone = cms.double( 0.0 ),
    outerCone = cms.double( 0.14 ),
    depth = cms.int32( 0 ),
    maxSeverityHB = cms.int32( 9 ),
    maxSeverityHE = cms.int32( 9 ),
    doEtSum = cms.bool( False ),
    useSingleTower = cms.bool( False ),
    effectiveAreas = cms.vdouble( 0.105, 0.17 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltEG33HEFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG33EtFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEgammaClusterShape = cms.EDProducer( "EgammaHLTClusterShapeProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    ecalRechitEB = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEE' ),
    multThresEB = cms.double( 1.0 ),
    multThresEE = cms.double( 1.25 )
)
process.hltEG33CaloIdLClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG33HEFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.014 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltOnlineBeamSpotDevice = cms.EDProducer( "BeamSpotDeviceProducer@alpaka",
    src = cms.InputTag( "hltOnlineBeamSpot" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltSiPixelClustersSoA = cms.EDProducer( "SiPixelRawToClusterPhase1@alpaka",
    IncludeErrors = cms.bool( True ),
    UseQualityInfo = cms.bool( False ),
    clusterThreshold_layer1 = cms.int32( 2000 ),
    clusterThreshold_otherLayers = cms.int32( 4000 ),
    VCaltoElectronGain = cms.double( 1.0 ),
    VCaltoElectronGain_L1 = cms.double( 1.0 ),
    VCaltoElectronOffset = cms.double( 0.0 ),
    VCaltoElectronOffset_L1 = cms.double( 0.0 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    Regions = cms.PSet(  ),
    CablingMapLabel = cms.string( "" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltSiPixelClusters = cms.EDProducer( "SiPixelDigisClustersFromSoAAlpakaPhase1",
    src = cms.InputTag( "hltSiPixelClustersSoA" ),
    clusterThreshold_layer1 = cms.int32( 2000 ),
    clusterThreshold_otherLayers = cms.int32( 4000 ),
    produceDigis = cms.bool( False ),
    storeDigis = cms.bool( False )
)
process.hltSiPixelDigiErrors = cms.EDProducer( "SiPixelDigiErrorsFromSoAAlpaka",
    digiErrorSoASrc = cms.InputTag( "hltSiPixelClustersSoA" ),
    fmtErrorsSoASrc = cms.InputTag( "hltSiPixelClustersSoA" ),
    CablingMapLabel = cms.string( "" ),
    UsePhase1 = cms.bool( True ),
    ErrorList = cms.vint32( 29 ),
    UserErrorList = cms.vint32( 40 )
)
process.hltSiPixelRecHitsSoA = cms.EDProducer( "SiPixelRecHitAlpakaPhase1@alpaka",
    beamSpot = cms.InputTag( "hltOnlineBeamSpotDevice" ),
    src = cms.InputTag( "hltSiPixelClustersSoA" ),
    CPE = cms.string( "PixelCPEFastParams" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltSiPixelRecHits = cms.EDProducer( "SiPixelRecHitFromSoAAlpakaPhase1",
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsSoA" ),
    src = cms.InputTag( "hltSiPixelClusters" )
)
process.hltSiStripExcludedFEDListProducer = cms.EDProducer( "SiStripExcludedFEDListProducer",
    ProductLabel = cms.InputTag( "rawDataCollector" )
)
process.hltSiStripRawToClustersFacility = cms.EDProducer( "SiStripClusterizerFromRaw",
    ProductLabel = cms.InputTag( "rawDataCollector" ),
    ConditionsLabel = cms.string( "" ),
    onDemand = cms.bool( False ),
    DoAPVEmulatorCheck = cms.bool( False ),
    LegacyUnpacker = cms.bool( False ),
    HybridZeroSuppressed = cms.bool( False ),
    Clusterizer = cms.PSet( 
      ConditionsLabel = cms.string( "" ),
      MaxClusterSize = cms.uint32( 16 ),
      ClusterThreshold = cms.double( 5.0 ),
      SeedThreshold = cms.double( 3.0 ),
      Algorithm = cms.string( "ThreeThresholdAlgorithm" ),
      ChannelThreshold = cms.double( 2.0 ),
      MaxAdjacentBad = cms.uint32( 0 ),
      setDetId = cms.bool( True ),
      MaxSequentialHoles = cms.uint32( 0 ),
      RemoveApvShots = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      MaxSequentialBad = cms.uint32( 1 )
    ),
    Algorithms = cms.PSet( 
      Use10bitsTruncation = cms.bool( False ),
      CommonModeNoiseSubtractionMode = cms.string( "Median" ),
      useCMMeanMap = cms.bool( False ),
      TruncateInSuppressor = cms.bool( True ),
      doAPVRestore = cms.bool( False ),
      SiStripFedZeroSuppressionMode = cms.uint32( 4 ),
      PedestalSubtractionFedMode = cms.bool( True )
    )
)
process.hltMeasurementTrackerEvent = cms.EDProducer( "MeasurementTrackerEventProducer",
    measurementTracker = cms.string( "hltESPMeasurementTracker" ),
    skipClusters = cms.InputTag( "" ),
    pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
    stripClusterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
    Phase2TrackerCluster1DProducer = cms.string( "" ),
    vectorHits = cms.InputTag( "" ),
    vectorHitsRej = cms.InputTag( "" ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    pixelCablingMapLabel = cms.string( "" ),
    inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
    switchOffPixelsIfEmpty = cms.bool( True )
)
process.hltPixelLayerPairs = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix1+BPix3',
      'BPix1+BPix4',
      'BPix2+BPix3',
      'BPix2+BPix4',
      'BPix3+BPix4',
      'FPix1_pos+FPix2_pos',
      'FPix1_pos+FPix3_pos',
      'FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos',
      'BPix1+FPix2_pos',
      'BPix1+FPix3_pos',
      'BPix2+FPix1_pos',
      'BPix2+FPix2_pos',
      'BPix2+FPix3_pos',
      'BPix3+FPix1_pos',
      'BPix3+FPix2_pos',
      'BPix3+FPix3_pos',
      'BPix4+FPix1_pos',
      'BPix4+FPix2_pos',
      'BPix4+FPix3_pos',
      'FPix1_neg+FPix2_neg',
      'FPix1_neg+FPix3_neg',
      'FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg',
      'BPix1+FPix2_neg',
      'BPix1+FPix3_neg',
      'BPix2+FPix1_neg',
      'BPix2+FPix2_neg',
      'BPix2+FPix3_neg',
      'BPix3+FPix1_neg',
      'BPix3+FPix2_neg',
      'BPix3+FPix3_neg',
      'BPix4+FPix1_neg',
      'BPix4+FPix2_neg',
      'BPix4+FPix3_neg' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltPixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg',
      'BPix1+BPix3+FPix1_pos',
      'BPix1+BPix2+FPix2_pos',
      'BPix1+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix2_neg',
      'BPix1+FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg+FPix3_neg',
      'BPix1+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos+FPix3_pos' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltEgammaSuperClustersToPixelMatch = cms.EDProducer( "EgammaHLTFilteredSuperClusterProducer",
    cands = cms.InputTag( "hltEgammaCandidates" ),
    minEtCutEB = cms.double( 0.0 ),
    minEtCutEE = cms.double( 0.0 ),
    cuts = cms.VPSet( 
      cms.PSet(  endcapCut = cms.PSet( 
  useEt = cms.bool( False ),
  cutOverE = cms.double( 0.2 )
),
        var = cms.InputTag( "hltEgammaHoverE" ),
        barrelCut = cms.PSet( 
          useEt = cms.bool( False ),
          cutOverE = cms.double( 0.2 )
        )
      )
    )
)
process.hltEleSeedsTrackingRegions = cms.EDProducer( "TrackingRegionsFromSuperClustersEDProducer",
    RegionPSet = cms.PSet( 
      minBSDeltaZ = cms.double( 0.0 ),
      useZInVertex = cms.bool( False ),
      vertices = cms.InputTag( "" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      useZInBeamspot = cms.bool( False ),
      ptMin = cms.double( 1.5 ),
      deltaEtaRegion = cms.double( 0.1 ),
      nrSigmaForBSDeltaZ = cms.double( 4.0 ),
      originHalfLength = cms.double( 12.5 ),
      measurementTrackerEvent = cms.InputTag( "" ),
      originRadius = cms.double( 0.05 ),
      precise = cms.bool( True ),
      superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatch' ),
      whereToUseMeasTracker = cms.string( "kNever" ),
      deltaPhiRegion = cms.double( 0.4 ),
      defaultZ = cms.double( 0.0 )
    )
)
process.hltElePixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltPixelLayerPairs" ),
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegions" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltElePixelHitDoubletsForTriplets = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltPixelLayerTriplets" ),
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegions" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0, 1 )
)
process.hltElePixelHitTriplets = cms.EDProducer( "CAHitTripletEDProducer",
    doublets = cms.InputTag( "hltElePixelHitDoubletsForTriplets" ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    useBendingCorrection = cms.bool( True ),
    CAThetaCut = cms.double( 0.004 ),
    CAPhiCut = cms.double( 0.1 ),
    CAThetaCut_byTriplets = cms.VPSet( 
      cms.PSet(  seedingLayers = cms.string( "" ),
        cut = cms.double( -1.0 )
      )
    ),
    CAPhiCut_byTriplets = cms.VPSet( 
      cms.PSet(  seedingLayers = cms.string( "" ),
        cut = cms.double( -1.0 )
      )
    ),
    CAHardPtCut = cms.double( 0.3 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsDoublets = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltElePixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsTriplets = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltElePixelHitTriplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsCombined = cms.EDProducer( "SeedCombiner",
    seedCollections = cms.VInputTag( 'hltElePixelSeedsDoublets','hltElePixelSeedsTriplets' ),
    clusterRemovalInfos = cms.VInputTag(  )
)
process.hltEgammaElectronPixelSeeds = cms.EDProducer( "ElectronNHitSeedProducer",
    initialSeeds = cms.InputTag( "hltElePixelSeedsCombined" ),
    vertices = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    measTkEvt = cms.InputTag( "hltMeasurementTrackerEvent" ),
    superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatch' ),
    matcherConfig = cms.PSet( 
      useRecoVertex = cms.bool( False ),
      minNrHits = cms.vuint32( 2, 3 ),
      matchingCuts = cms.VPSet( 
        cms.PSet(  dPhiMaxHighEt = cms.vdouble( 0.05 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 9999.0 ),
          dRZMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxHighEtThres = cms.vdouble( 20.0 ),
          dRZMaxHighEtThres = cms.vdouble( 0.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        )
      ),
      minNrHitsValidLayerBins = cms.vint32( 4 ),
      detLayerGeom = cms.ESInputTag( "","hltESPGlobalDetLayerGeometry" ),
      navSchool = cms.ESInputTag( "","SimpleNavigationSchool" ),
      paramMagField = cms.ESInputTag( "","ParabolicMf" )
    )
)
process.hltEgammaPixelMatchVars = cms.EDProducer( "EgammaHLTPixelMatchVarProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    pixelSeedsProducer = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    dPhi1SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00112, 7.52E-4, -0.00122, 0.00109 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00222, 1.96E-4, -2.03E-4, 4.47E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00236, 6.91E-4, 1.99E-4, 4.16E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00823, -0.0029 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00282 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.010838, -0.00345 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0043 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0208, -0.0125, 0.00231 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol2" )
  )
) ),
    dPhi2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 1.3E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.6 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 4.5E-4, -1.99E-4 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.9 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 7.94E-5 ),
    xMin = cms.double( 1.9 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  )
) ),
    dRZ2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00299, 2.99E-4, -4.13E-6, 0.00191 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.248, -0.329, 0.148, -0.0222 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol3" )
  )
) ),
    productsToWrite = cms.int32( 0 )
)
process.hltEle33CaloIdLPixelMatchFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG33CaloIdLClusterShapeFilter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltEle33CaloIdLMWPMS2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle33CaloIdLPixelMatchFilter" ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVars','s2' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 150.0 ),
    thrRegularEE = cms.vdouble( 150.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltParticleFlowRecHitECALUnseeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    )
)
process.hltParticleFlowRecHitPSUnseeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltEcalPreshowerRecHit','EcalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    )
)
process.hltParticleFlowClusterPSUnseeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSUnseeded" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALUncorrectedUnseeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALUnseeded" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALUnseeded = cms.EDProducer( "CorrectedECALPFClusterProducer",
    minimumPSEnergy = cms.double( 0.0 ),
    skipPS = cms.bool( False ),
    inputPS = cms.InputTag( "hltParticleFlowClusterPSUnseeded" ),
    energyCorrector = cms.PSet( 
      recHitsEELabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      recHitsEBLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      applyCrackCorrections = cms.bool( False ),
      ebSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      applyMVACorrections = cms.bool( True ),
      eeSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      maxPtForMVAEvaluation = cms.double( 300.0 ),
      srfAwareCorrection = cms.bool( True )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedUnseeded" )
)
process.hltParticleFlowSuperClusterECALUnseeded = cms.EDProducer( "PFECALSuperClusterProducer",
    PFSuperClusterCollectionEndcap = cms.string( "hltParticleFlowSuperClusterECALEndcap" ),
    doSatelliteClusterMerge = cms.bool( False ),
    thresh_PFClusterBarrel = cms.double( 0.5 ),
    PFBasicClusterCollectionBarrel = cms.string( "hltParticleFlowBasicClusterECALBarrel" ),
    useRegression = cms.bool( True ),
    satelliteMajorityFraction = cms.double( 0.5 ),
    thresh_PFClusterEndcap = cms.double( 0.5 ),
    ESAssociation = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    PFBasicClusterCollectionPreshower = cms.string( "hltParticleFlowBasicClusterECALPreshower" ),
    verbose = cms.untracked.bool( False ),
    thresh_SCEt = cms.double( 4.0 ),
    etawidth_SuperClusterEndcap = cms.double( 0.04 ),
    phiwidth_SuperClusterEndcap = cms.double( 0.6 ),
    useDynamicDPhiWindow = cms.bool( True ),
    PFSuperClusterCollectionBarrel = cms.string( "hltParticleFlowSuperClusterECALBarrel" ),
    regressionConfig = cms.PSet( 
      uncertaintyKeyEB = cms.string( "pfscecal_EBUncertainty_online" ),
      ecalRecHitsEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ecalRecHitsEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      regressionKeyEE = cms.string( "pfscecal_EECorrection_online" ),
      regressionKeyEB = cms.string( "pfscecal_EBCorrection_online" ),
      uncertaintyKeyEE = cms.string( "pfscecal_EEUncertainty_online" ),
      isHLT = cms.bool( True ),
      regTrainedWithPS = cms.bool( True )
    ),
    applyCrackCorrections = cms.bool( False ),
    satelliteClusterSeedThreshold = cms.double( 50.0 ),
    etawidth_SuperClusterBarrel = cms.double( 0.04 ),
    PFBasicClusterCollectionEndcap = cms.string( "hltParticleFlowBasicClusterECALEndcap" ),
    PFClusters = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    thresh_PFClusterSeedBarrel = cms.double( 1.0 ),
    EnergyWeight = cms.string( "Raw" ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    thresh_PFClusterSeedEndcap = cms.double( 1.0 ),
    phiwidth_SuperClusterBarrel = cms.double( 0.6 ),
    thresh_PFClusterES = cms.double( 0.5 ),
    seedThresholdIsET = cms.bool( True ),
    isOOTCollection = cms.bool( False ),
    barrelRecHits = cms.InputTag( "" ),
    endcapRecHits = cms.InputTag( "" ),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string( "hltParticleFlowSuperClusterECALEndcapWithPreshower" ),
    dropUnseedable = cms.bool( False ),
    ClusteringType = cms.string( "Mustache" )
)
process.hltEgammaCandidatesUnseeded = cms.EDProducer( "EgammaHLTRecoEcalCandidateProducers",
    scHybridBarrelProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALUnseeded','hltParticleFlowSuperClusterECALBarrel' ),
    scIslandEndcapProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALUnseeded','hltParticleFlowSuperClusterECALEndcapWithPreshower' ),
    recoEcalCandidateCollection = cms.string( "" )
)
process.hltEgammaCandidatesWrapperUnseeded = cms.EDFilter( "HLTEgammaTriggerFilterObjectWrapper",
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    candNonIsolatedTag = cms.InputTag( "" ),
    doIsolated = cms.bool( True )
)
process.hltDiEG33EtUnseededFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEgammaCandidatesWrapperUnseeded" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    etcutEB = cms.double( 33.0 ),
    etcutEE = cms.double( 33.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 2 )
)
process.hltEgammaHoverEUnseeded = cms.EDProducer( "EgammaHLTHcalVarProducerFromRecHit",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    etThresHB = cms.vdouble( 0.0, 0.0, 0.0, 0.0 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    etThresHE = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
    usePFThresholdsFromDB = cms.bool( True ),
    innerCone = cms.double( 0.0 ),
    outerCone = cms.double( 0.14 ),
    depth = cms.int32( 0 ),
    maxSeverityHB = cms.int32( 9 ),
    maxSeverityHE = cms.int32( 9 ),
    doEtSum = cms.bool( False ),
    useSingleTower = cms.bool( False ),
    effectiveAreas = cms.vdouble( 0.105, 0.17 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltDiEG33HEUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDiEG33EtUnseededFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltEgammaClusterShapeUnseeded = cms.EDProducer( "EgammaHLTClusterShapeProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    multThresEB = cms.double( 1.0 ),
    multThresEE = cms.double( 1.25 )
)
process.hltDiEG33CaloIdLClusterShapeUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDiEG33HEUnseededFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShapeUnseeded','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.014 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltEgammaSuperClustersToPixelMatchUnseeded = cms.EDProducer( "EgammaHLTFilteredSuperClusterProducer",
    cands = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    minEtCutEB = cms.double( 0.0 ),
    minEtCutEE = cms.double( 0.0 ),
    cuts = cms.VPSet( 
      cms.PSet(  endcapCut = cms.PSet( 
  useEt = cms.bool( False ),
  cutOverE = cms.double( 0.2 )
),
        var = cms.InputTag( "hltEgammaHoverEUnseeded" ),
        barrelCut = cms.PSet( 
          useEt = cms.bool( False ),
          cutOverE = cms.double( 0.2 )
        )
      )
    )
)
process.hltEleSeedsTrackingRegionsUnseeded = cms.EDProducer( "TrackingRegionsFromSuperClustersEDProducer",
    RegionPSet = cms.PSet( 
      minBSDeltaZ = cms.double( 0.0 ),
      useZInVertex = cms.bool( False ),
      vertices = cms.InputTag( "" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      useZInBeamspot = cms.bool( False ),
      ptMin = cms.double( 1.5 ),
      deltaEtaRegion = cms.double( 0.1 ),
      nrSigmaForBSDeltaZ = cms.double( 4.0 ),
      originHalfLength = cms.double( 12.5 ),
      measurementTrackerEvent = cms.InputTag( "" ),
      originRadius = cms.double( 0.05 ),
      precise = cms.bool( True ),
      superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatchUnseeded' ),
      whereToUseMeasTracker = cms.string( "kNever" ),
      deltaPhiRegion = cms.double( 0.4 ),
      defaultZ = cms.double( 0.0 )
    )
)
process.hltElePixelHitDoubletsUnseeded = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltPixelLayerPairs" ),
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegionsUnseeded" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltElePixelHitDoubletsForTripletsUnseeded = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltPixelLayerTriplets" ),
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegionsUnseeded" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0, 1 )
)
process.hltElePixelHitTripletsUnseeded = cms.EDProducer( "CAHitTripletEDProducer",
    doublets = cms.InputTag( "hltElePixelHitDoubletsForTripletsUnseeded" ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    useBendingCorrection = cms.bool( True ),
    CAThetaCut = cms.double( 0.004 ),
    CAPhiCut = cms.double( 0.1 ),
    CAThetaCut_byTriplets = cms.VPSet( 
      cms.PSet(  seedingLayers = cms.string( "" ),
        cut = cms.double( -1.0 )
      )
    ),
    CAPhiCut_byTriplets = cms.VPSet( 
      cms.PSet(  seedingLayers = cms.string( "" ),
        cut = cms.double( -1.0 )
      )
    ),
    CAHardPtCut = cms.double( 0.3 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsDoubletsUnseeded = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltElePixelHitDoubletsUnseeded" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsTripletsUnseeded = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltElePixelHitTripletsUnseeded" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsCombinedUnseeded = cms.EDProducer( "SeedCombiner",
    seedCollections = cms.VInputTag( 'hltElePixelSeedsDoubletsUnseeded','hltElePixelSeedsTripletsUnseeded' ),
    clusterRemovalInfos = cms.VInputTag(  )
)
process.hltEgammaElectronPixelSeedsUnseeded = cms.EDProducer( "ElectronNHitSeedProducer",
    initialSeeds = cms.InputTag( "hltElePixelSeedsCombinedUnseeded" ),
    vertices = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    measTkEvt = cms.InputTag( "hltMeasurementTrackerEvent" ),
    superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatchUnseeded' ),
    matcherConfig = cms.PSet( 
      useRecoVertex = cms.bool( False ),
      minNrHits = cms.vuint32( 2, 3 ),
      matchingCuts = cms.VPSet( 
        cms.PSet(  dPhiMaxHighEt = cms.vdouble( 0.05 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 9999.0 ),
          dRZMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxHighEtThres = cms.vdouble( 20.0 ),
          dRZMaxHighEtThres = cms.vdouble( 0.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        )
      ),
      minNrHitsValidLayerBins = cms.vint32( 4 ),
      detLayerGeom = cms.ESInputTag( "","hltESPGlobalDetLayerGeometry" ),
      navSchool = cms.ESInputTag( "","SimpleNavigationSchool" ),
      paramMagField = cms.ESInputTag( "","ParabolicMf" )
    )
)
process.hltEgammaPixelMatchVarsUnseeded = cms.EDProducer( "EgammaHLTPixelMatchVarProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    pixelSeedsProducer = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    dPhi1SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00112, 7.52E-4, -0.00122, 0.00109 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00222, 1.96E-4, -2.03E-4, 4.47E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00236, 6.91E-4, 1.99E-4, 4.16E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00823, -0.0029 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00282 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.010838, -0.00345 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0043 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0208, -0.0125, 0.00231 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol2" )
  )
) ),
    dPhi2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 1.3E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.6 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 4.5E-4, -1.99E-4 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.9 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 7.94E-5 ),
    xMin = cms.double( 1.9 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  )
) ),
    dRZ2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00299, 2.99E-4, -4.13E-6, 0.00191 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.248, -0.329, 0.148, -0.0222 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol3" )
  )
) ),
    productsToWrite = cms.int32( 0 )
)
process.hltDiEle33CaloIdLPixelMatchUnseededFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDiEG33CaloIdLClusterShapeUnseededFilter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 2 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltDiEle33CaloIdLMWPMS2UnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDiEle33CaloIdLPixelMatchUnseededFilter" ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVarsUnseeded','s2' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 150.0 ),
    thrRegularEE = cms.vdouble( 150.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltBoolEnd = cms.EDFilter( "HLTBool",
    result = cms.bool( True )
)
process.hltL1sSingleEGor = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleLooseIsoEG26er2p5 OR L1_SingleLooseIsoEG26er1p5 OR L1_SingleLooseIsoEG28er2p5 OR L1_SingleLooseIsoEG28er2p1 OR L1_SingleLooseIsoEG28er1p5 OR L1_SingleLooseIsoEG30er2p5 OR L1_SingleLooseIsoEG30er1p5 OR L1_SingleEG26er2p5 OR L1_SingleEG38er2p5 OR L1_SingleEG40er2p5 OR L1_SingleEG42er2p5 OR L1_SingleEG45er2p5 OR L1_SingleEG60 OR L1_SingleEG34er2p5 OR L1_SingleEG36er2p5 OR L1_SingleIsoEG24er2p1 OR L1_SingleIsoEG26er2p1 OR L1_SingleIsoEG28er2p1 OR L1_SingleIsoEG30er2p1 OR L1_SingleIsoEG32er2p1 OR L1_SingleIsoEG26er2p5 OR L1_SingleIsoEG28er2p5 OR L1_SingleIsoEG30er2p5 OR L1_SingleIsoEG32er2p5 OR L1_SingleIsoEG34er2p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreEle30WPTightGsf = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltEGL1SingleEGOrFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1SeedFilterTag = cms.InputTag( "hltL1sSingleEGor" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    ncandcut = cms.int32( 1 ),
    doIsolated = cms.bool( False ),
    region_eta_size = cms.double( 0.522 ),
    region_eta_size_ecap = cms.double( 1.0 ),
    region_phi_size = cms.double( 1.044 ),
    barrel_end = cms.double( 1.4791 ),
    endcap_end = cms.double( 2.65 )
)
process.hltEG30L1SingleEGOrEtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleEGOrFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 30.0 ),
    etcutEE = cms.double( 30.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEle30WPTightClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG30L1SingleEGOrEtFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.0105 ),
    thrRegularEE = cms.vdouble( 0.0305 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle30WPTightHEFilter = cms.EDFilter( "HLTEgammaGenericQuadraticEtaFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightClusterShapeFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    etaBoundaryEB12 = cms.double( 1.0 ),
    etaBoundaryEE12 = cms.double( 2.1 ),
    thrRegularEB1 = cms.vdouble( 1.0 ),
    thrRegularEE1 = cms.vdouble( 3.0 ),
    thrOverEEB1 = cms.vdouble( 0.06 ),
    thrOverEEE1 = cms.vdouble( 0.03 ),
    thrOverE2EB1 = cms.vdouble( 0.0 ),
    thrOverE2EE1 = cms.vdouble( 0.0 ),
    thrRegularEB2 = cms.vdouble( 1.0 ),
    thrRegularEE2 = cms.vdouble( 5.0 ),
    thrOverEEB2 = cms.vdouble( 0.06 ),
    thrOverEEE2 = cms.vdouble( 0.03 ),
    thrOverE2EB2 = cms.vdouble( 0.0 ),
    thrOverE2EE2 = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.066, 0.14, 0.3, 0.5 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.0, 1.479, 2.1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEgammaEcalPFClusterIsoDr0p2 = cms.EDProducer( "EgammaHLTEcalPFClusterIsolationProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    pfClusterProducer = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.2 ),
    drVetoBarrel = cms.double( 0.0 ),
    drVetoEndcap = cms.double( 0.0 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    effectiveAreas = cms.vdouble( 0.085, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltEle30WPTightEcalIsoFilter = cms.EDFilter( "HLTEgammaGenericQuadraticEtaFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightHEFilter" ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIsoDr0p2" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    etaBoundaryEB12 = cms.double( 1.0 ),
    etaBoundaryEE12 = cms.double( 2.1 ),
    thrRegularEB1 = cms.vdouble( 3.0 ),
    thrRegularEE1 = cms.vdouble( 1.0 ),
    thrOverEEB1 = cms.vdouble( 0.01 ),
    thrOverEEE1 = cms.vdouble( 0.025 ),
    thrOverE2EB1 = cms.vdouble( 0.0 ),
    thrOverE2EE1 = cms.vdouble( 0.0 ),
    thrRegularEB2 = cms.vdouble( 3.0 ),
    thrRegularEE2 = cms.vdouble( 2.0 ),
    thrOverEEB2 = cms.vdouble( 0.01 ),
    thrOverEEE2 = cms.vdouble( 0.025 ),
    thrOverE2EB2 = cms.vdouble( 0.0 ),
    thrOverE2EE2 = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.1, 0.08, 0.06, 0.06 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.0, 1.479, 2.1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltParticleFlowRecHitHBHESoA = cms.EDProducer( "PFRecHitSoAProducerHCAL@alpaka",
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( "hltHbheRecoSoA" ),
        params = cms.ESInputTag( "hltESPPFRecHitHCALParams","" )
      )
    ),
    topology = cms.ESInputTag( "hltESPPFRecHitHCALTopology","" ),
    synchronise = cms.untracked.bool( False ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltParticleFlowRecHitHBHE = cms.EDProducer( "LegacyPFRecHitProducer",
    src = cms.InputTag( "hltParticleFlowRecHitHBHESoA" )
)
process.hltParticleFlowClusterHBHESoA = cms.EDProducer( "PFClusterSoAProducer@alpaka",
    pfRecHits = cms.InputTag( "hltParticleFlowRecHitHBHESoA" ),
    topology = cms.ESInputTag( "hltESPPFRecHitHCALTopology","" ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.vdouble( 0.125, 0.25, 0.35, 0.35 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.vdouble( 0.1375, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet(  thresholdsByDetector = cms.VPSet( 
  cms.PSet(  gatheringThreshold = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
    detector = cms.string( "HCAL_BARREL1" )
  ),
  cms.PSet(  gatheringThreshold = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    detector = cms.string( "HCAL_ENDCAP" )
  )
) ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 5 ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 10.0 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True ),
      timeResolutionCalcBarrel = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeResolutionCalcEndcap = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      )
    ),
    synchronise = cms.bool( False ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltParticleFlowClusterHBHE = cms.EDProducer( "LegacyPFClusterProducer",
    src = cms.InputTag( "hltParticleFlowClusterHBHESoA" ),
    PFRecHitsLabelIn = cms.InputTag( "hltParticleFlowRecHitHBHESoA" ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitHBHE" ),
    usePFThresholdsFromDB = cms.bool( True ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 5 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominatorByDetector = cms.VPSet( 
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
            depths = cms.vint32( 1, 2, 3, 4 ),
            detector = cms.string( "HCAL_BARREL1" )
          ),
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
            depths = cms.vint32( 1, 2, 3, 4, 5, 6, 7 ),
            detector = cms.string( "HCAL_ENDCAP" )
          )
        ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 5 ),
      minChi2Prob = cms.double( 0.0 ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominatorByDetector = cms.VPSet( 
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
            depths = cms.vint32( 1, 2, 3, 4 ),
            detector = cms.string( "HCAL_BARREL1" )
          ),
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
            depths = cms.vint32( 1, 2, 3, 4, 5, 6, 7 ),
            detector = cms.string( "HCAL_ENDCAP" )
          )
        ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
          depths = cms.vint32( 1, 2, 3, 4 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
          depths = cms.vint32( 1, 2, 3, 4, 5, 6, 7 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      maxNSigmaTime = cms.double( 10.0 ),
      showerSigma = cms.double( 10.0 ),
      timeSigmaEE = cms.double( 10.0 ),
      clusterTimeResFromSeed = cms.bool( False ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True ),
      timeResolutionCalcBarrel = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeResolutionCalcEndcap = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeSigmaEB = cms.double( 10.0 )
    )
)
process.hltParticleFlowClusterHCAL = cms.EDProducer( "PFMultiDepthClusterProducer",
    clustersSource = cms.InputTag( "hltParticleFlowClusterHBHE" ),
    energyCorrector = cms.PSet(  ),
    pfClusterBuilder = cms.PSet( 
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominatorByDetector = cms.VPSet( 
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
            depths = cms.vint32( 1, 2, 3, 4 ),
            detector = cms.string( "HCAL_BARREL1" )
          ),
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
            depths = cms.vint32( 1, 2, 3, 4, 5, 6, 7 ),
            detector = cms.string( "HCAL_ENDCAP" )
          )
        ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "PFMultiDepthClusterizer" ),
      nSigmaPhi = cms.double( 2.0 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      nSigmaEta = cms.double( 2.0 )
    ),
    positionReCalc = cms.PSet(  ),
    usePFThresholdsFromDB = cms.bool( True )
)
process.hltEgammaHcalPFClusterIso = cms.EDProducer( "EgammaHLTHcalPFClusterIsolationProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    pfClusterProducerHCAL = cms.InputTag( "hltParticleFlowClusterHCAL" ),
    useHF = cms.bool( False ),
    pfClusterProducerHFEM = cms.InputTag( "" ),
    pfClusterProducerHFHAD = cms.InputTag( "" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.0 ),
    drVetoEndcap = cms.double( 0.0 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    useEt = cms.bool( True ),
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    doEffAreaCorrection = cms.bool( False ),
    effectiveAreasCorr = cms.vdouble( 0.0, 0.0 ),
    effectiveAreasThres = cms.vdouble( 0.0, 0.0 )
)
process.hltEle30WPTightHcalIsoFilter = cms.EDFilter( "HLTEgammaGenericQuadraticEtaFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightEcalIsoFilter" ),
    varTag = cms.InputTag( "hltEgammaHcalPFClusterIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    etaBoundaryEB12 = cms.double( 1.0 ),
    etaBoundaryEE12 = cms.double( 2.0 ),
    thrRegularEB1 = cms.vdouble( 4.0 ),
    thrRegularEE1 = cms.vdouble( 1.0 ),
    thrOverEEB1 = cms.vdouble( 0.04 ),
    thrOverEEE1 = cms.vdouble( 0.03 ),
    thrOverE2EB1 = cms.vdouble( 0.0 ),
    thrOverE2EE1 = cms.vdouble( 0.0 ),
    thrRegularEB2 = cms.vdouble( 4.0 ),
    thrRegularEE2 = cms.vdouble( 2.0 ),
    thrOverEEB2 = cms.vdouble( 0.04 ),
    thrOverEEE2 = cms.vdouble( 0.03 ),
    thrOverE2EB2 = cms.vdouble( 0.0 ),
    thrOverE2EE2 = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.26, 0.32, 0.4, 0.5 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.0, 1.479, 2.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle30WPTightPixelMatchFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightHcalIsoFilter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltEle30WPTightPMS2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightPixelMatchFilter" ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVars','s2' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 200.0 ),
    thrRegularEE = cms.vdouble( 45.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEgammaCkfTrackCandidatesForGSF = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( True ),
    doSeedingRegionRebuilding = cms.bool( True ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryBuilderForGsfElectrons" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 1000000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltEgammaGsfTracks = cms.EDProducer( "GsfTrackProducer",
    TrajectoryInEvent = cms.bool( True ),
    useHitsSplitting = cms.bool( False ),
    src = cms.InputTag( "hltEgammaCkfTrackCandidatesForGSF" ),
    AlgorithmName = cms.string( "gsf" ),
    GeometricInnerState = cms.bool( True ),
    reMatchSplitHits = cms.bool( False ),
    usePropagatorForPCA = cms.bool( False ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    Fitter = cms.string( "hltESPGsfElectronFittingSmoother" ),
    Propagator = cms.string( "hltESPFwdElectronPropagator" ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    MeasurementTracker = cms.string( "hltESPMeasurementTracker" )
)
process.hltEgammaGsfElectrons = cms.EDProducer( "EgammaHLTPixelMatchElectronProducers",
    TrackProducer = cms.InputTag( "" ),
    GsfTrackProducer = cms.InputTag( "hltEgammaGsfTracks" ),
    UseGsfTracks = cms.bool( True ),
    BSProducer = cms.InputTag( "hltOnlineBeamSpot" )
)
process.hltEgammaGsfTrackVars = cms.EDProducer( "EgammaHLTGsfTrackVarProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    inputCollection = cms.InputTag( "hltEgammaGsfTracks" ),
    beamSpotProducer = cms.InputTag( "hltOnlineBeamSpot" ),
    upperTrackNrToRemoveCut = cms.int32( 9999 ),
    lowerTrackNrToRemoveCut = cms.int32( -1 ),
    useDefaultValuesForBarrel = cms.bool( False ),
    useDefaultValuesForEndcap = cms.bool( False ),
    produceAbsValues = cms.bool( False )
)
process.hltEle30WPTightGsfOneOEMinusOneOPFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightPMS2Filter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','OneOESuperMinusOneOP' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.025 ),
    thrRegularEE = cms.vdouble( 0.011 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle30WPTightGsfMissingHitsFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightGsfOneOEMinusOneOPFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','MissingHits' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 999.0 ),
    thrRegularEE = cms.vdouble( 1.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle30WPTightGsfDetaFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightGsfMissingHitsFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.003 ),
    thrRegularEE = cms.vdouble( 0.005 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle30WPTightGsfDphiFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightGsfDetaFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.03 ),
    thrRegularEE = cms.vdouble( 0.023 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltPixelTracksSoA = cms.EDProducer( "CAHitNtupletAlpakaPhase1@alpaka",
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsSoA" ),
    CPE = cms.string( "PixelCPEFastParams" ),
    ptmin = cms.double( 0.9 ),
    CAThetaCutBarrel = cms.double( 0.00123302705499 ),
    CAThetaCutForward = cms.double( 0.00355691321774 ),
    hardCurvCut = cms.double( 0.503169690002 ),
    dcaCutInnerTriplet = cms.double( 0.0918113099491 ),
    dcaCutOuterTriplet = cms.double( 0.420724617835 ),
    earlyFishbone = cms.bool( True ),
    lateFishbone = cms.bool( False ),
    fillStatistics = cms.bool( False ),
    minHitsPerNtuplet = cms.uint32( 3 ),
    minHitsForSharingCut = cms.uint32( 10 ),
    fitNas4 = cms.bool( False ),
    doClusterCut = cms.bool( True ),
    doZ0Cut = cms.bool( True ),
    doPtCut = cms.bool( True ),
    useRiemannFit = cms.bool( False ),
    doSharedHitCut = cms.bool( True ),
    dupPassThrough = cms.bool( False ),
    useSimpleTripletCleaner = cms.bool( True ),
    maxNumberOfDoublets = cms.uint32( 524288 ),
    idealConditions = cms.bool( False ),
    includeJumpingForwardDoublets = cms.bool( True ),
    cellZ0Cut = cms.double( 12.0 ),
    cellPtCut = cms.double( 0.5 ),
    trackQualityCuts = cms.PSet( 
      chi2MaxPt = cms.double( 10.0 ),
      tripletMaxTip = cms.double( 0.3 ),
      chi2Scale = cms.double( 8.0 ),
      quadrupletMaxTip = cms.double( 0.5 ),
      quadrupletMinPt = cms.double( 0.3 ),
      quadrupletMaxZip = cms.double( 12.0 ),
      tripletMaxZip = cms.double( 12.0 ),
      tripletMinPt = cms.double( 0.5 ),
      chi2Coeff = cms.vdouble( 0.9, 1.8 )
    ),
    minYsizeB1 = cms.int32( 1 ),
    minYsizeB2 = cms.int32( 1 ),
    phiCuts = cms.vint32( 965, 1241, 395, 698, 1058, 1211, 348, 782, 1016, 810, 463, 755, 694, 531, 770, 471, 592, 750, 348 ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltPixelTracks = cms.EDProducer( "PixelTrackProducerFromSoAAlpakaPhase1",
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    trackSrc = cms.InputTag( "hltPixelTracksSoA" ),
    pixelRecHitLegacySrc = cms.InputTag( "hltSiPixelRecHits" ),
    minNumberOfHits = cms.int32( 0 ),
    minQuality = cms.string( "loose" )
)
process.hltPixelVerticesSoA = cms.EDProducer( "PixelVertexProducerAlpakaPhase1@alpaka",
    oneKernel = cms.bool( True ),
    useDensity = cms.bool( True ),
    useDBSCAN = cms.bool( False ),
    useIterative = cms.bool( False ),
    doSplitting = cms.bool( True ),
    minT = cms.int32( 2 ),
    eps = cms.double( 0.07 ),
    errmax = cms.double( 0.01 ),
    chi2max = cms.double( 9.0 ),
    maxVertices = cms.int32( 256 ),
    PtMin = cms.double( 0.5 ),
    PtMax = cms.double( 75.0 ),
    pixelTrackSrc = cms.InputTag( "hltPixelTracksSoA" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltPixelVertices = cms.EDProducer( "PixelVertexProducerFromSoAAlpaka",
    TrackCollection = cms.InputTag( "hltPixelTracks" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    src = cms.InputTag( "hltPixelVerticesSoA" )
)
process.hltTrimmedPixelVertices = cms.EDProducer( "PixelVertexCollectionTrimmer",
    src = cms.InputTag( "hltPixelVertices" ),
    maxVtx = cms.uint32( 100 ),
    fractionSumPt2 = cms.double( 0.3 ),
    minSumPt2 = cms.double( 0.0 ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) )
)
process.hltIter0PFLowPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracks" ),
    InputVertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0PFlowCkfTrackCandidatesMkFitSiPixelHits = cms.EDProducer( "MkFitSiPixelHitConverter",
    hits = cms.InputTag( "hltSiPixelRecHits" ),
    clusters = cms.InputTag( "hltSiPixelClusters" ),
    ttrhBuilder = cms.ESInputTag( "","hltESPTTRHBWithTrackAngle" )
)
process.hltSiStripRecHits = cms.EDProducer( "SiStripRecHitConverter",
    ClusterProducer = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    rphiRecHits = cms.string( "rphiRecHit" ),
    stereoRecHits = cms.string( "stereoRecHit" ),
    matchedRecHits = cms.string( "matchedRecHit" ),
    useSiStripQuality = cms.bool( False ),
    MaskBadAPVFibers = cms.bool( False ),
    doMatching = cms.bool( False ),
    StripCPE = cms.ESInputTag( "hltESPStripCPEfromTrackAngle","hltESPStripCPEfromTrackAngle" ),
    Matcher = cms.ESInputTag( "SiStripRecHitMatcherESProducer","StandardMatcher" ),
    siStripQualityLabel = cms.ESInputTag( "","" )
)
process.hltIter0PFlowCkfTrackCandidatesMkFitSiStripHits = cms.EDProducer( "MkFitSiStripHitConverter",
    rphiHits = cms.InputTag( 'hltSiStripRecHits','rphiRecHit' ),
    stereoHits = cms.InputTag( 'hltSiStripRecHits','stereoRecHit' ),
    clusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    ttrhBuilder = cms.ESInputTag( "","hltESPTTRHBWithTrackAngle" ),
    minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
process.hltIter0PFlowCkfTrackCandidatesMkFitEventOfHits = cms.EDProducer( "MkFitEventOfHitsProducer",
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    pixelHits = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitSiPixelHits" ),
    stripHits = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitSiStripHits" ),
    usePixelQualityDB = cms.bool( True ),
    useStripStripQualityDB = cms.bool( True )
)
process.hltIter0PFlowCkfTrackCandidatesMkFitSeeds = cms.EDProducer( "MkFitSeedConverter",
    seeds = cms.InputTag( "hltIter0PFLowPixelSeedsFromPixelTracks" ),
    ttrhBuilder = cms.ESInputTag( "","hltESPTTRHBWithTrackAngle" ),
    maxNSeeds = cms.uint32( 500000 )
)
process.hltIter0PFlowCkfTrackCandidatesMkFit = cms.EDProducer( "MkFitProducer",
    pixelHits = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitSiPixelHits" ),
    stripHits = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitSiStripHits" ),
    eventOfHits = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitEventOfHits" ),
    seeds = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitSeeds" ),
    clustersToSkip = cms.InputTag( "" ),
    buildingRoutine = cms.string( "cloneEngine" ),
    config = cms.ESInputTag( "","hltESPIter0PFlowTrackCandidatesMkFitConfig" ),
    seedCleaning = cms.bool( True ),
    removeDuplicates = cms.bool( True ),
    backwardFitInCMSSW = cms.bool( False ),
    mkFitSilent = cms.untracked.bool( True ),
    limitConcurrency = cms.untracked.bool( False ),
    minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
)
process.hltIter0PFlowCkfTrackCandidates = cms.EDProducer( "MkFitOutputConverter",
    mkFitEventOfHits = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitEventOfHits" ),
    mkFitPixelHits = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitSiPixelHits" ),
    mkFitStripHits = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitSiStripHits" ),
    mkFitSeeds = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFitSeeds" ),
    tracks = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesMkFit" ),
    seeds = cms.InputTag( "hltIter0PFLowPixelSeedsFromPixelTracks" ),
    ttrhBuilder = cms.ESInputTag( "","hltESPTTRHBWithTrackAngle" ),
    propagatorAlong = cms.ESInputTag( "","PropagatorWithMaterialParabolicMf" ),
    propagatorOpposite = cms.ESInputTag( "","PropagatorWithMaterialParabolicMfOpposite" ),
    qualityMaxInvPt = cms.double( 100.0 ),
    qualityMinTheta = cms.double( 0.01 ),
    qualityMaxR = cms.double( 120.0 ),
    qualityMaxZ = cms.double( 280.0 ),
    qualityMaxPosErr = cms.double( 100.0 ),
    qualitySignPt = cms.bool( True ),
    doErrorRescale = cms.bool( True ),
    tfDnnLabel = cms.string( "trackSelectionTf" ),
    candMVASel = cms.bool( False ),
    candWP = cms.double( 0.0 ),
    batchSize = cms.int32( 16 )
)
process.hltIter0PFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    TrajectoryInEvent = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    src = cms.InputTag( "hltIter0PFlowCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    AlgorithmName = cms.string( "hltIter0" ),
    GeometricInnerState = cms.bool( True ),
    reMatchSplitHits = cms.bool( False ),
    usePropagatorForPCA = cms.bool( False ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" )
)
process.hltIter0PFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.45, 0.45 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.6, 0.6 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.6, 0.6 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.51, 0.51 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 999.0, 25.0, 99.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 999.0 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltIter0PFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltDoubletRecoveryClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltIter0PFlowTrackSelectionHighPurity" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
process.hltDoubletRecoveryMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    clustersToSkip = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
    phase2clustersToSkip = cms.InputTag( "" )
)
process.hltDoubletRecoveryPixelLayersAndRegions = cms.EDProducer( "PixelInactiveAreaTrackingRegionsSeedingLayersProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      extraPhi = cms.double( 0.0 ),
      extraEta = cms.double( 0.0 ),
      maxNVertices = cms.int32( 3 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 1.2 ),
      operationMode = cms.string( "VerticesFixed" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.015 ),
      measurementTrackerName = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      zErrorVertex = cms.double( 0.03 )
    ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    ignoreSingleFPixPanelModules = cms.bool( True ),
    debug = cms.untracked.bool( False ),
    createPlottingFiles = cms.untracked.bool( False ),
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg',
      'BPix1+FPix2_neg',
      'BPix2+FPix2_neg',
      'FPix2_neg+FPix3_neg',
      'BPix2+BPix3' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltDoubletRecoveryPFlowPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 50000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    DontCountDetsAboveNClusters = cms.uint32( 0 ),
    silentClusterCheck = cms.untracked.bool( False )
)
process.hltDoubletRecoveryPFlowPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "" ),
    trackingRegions = cms.InputTag( "" ),
    trackingRegionsSeedingLayers = cms.InputTag( "hltDoubletRecoveryPixelLayersAndRegions" ),
    clusterCheck = cms.InputTag( "hltDoubletRecoveryPFlowPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( False ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltDoubletRecoveryPFlowPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltDoubletRecoveryPFlowPixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltDoubletRecoveryPFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltDoubletRecoveryPFlowPixelSeeds" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltDoubletRecoveryPFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    TrajectoryInEvent = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    src = cms.InputTag( "hltDoubletRecoveryPFlowCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    AlgorithmName = cms.string( "hltDoubletRecovery" ),
    GeometricInnerState = cms.bool( True ),
    reMatchSplitHits = cms.bool( False ),
    usePropagatorForPCA = cms.bool( False ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" )
)
process.hltDoubletRecoveryPFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltDoubletRecoveryPFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltMergedTracks = cms.EDProducer( "TrackListMerger",
    copyExtras = cms.untracked.bool( True ),
    copyMVA = cms.bool( False ),
    TrackProducers = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinPT = cms.double( 0.05 ),
    MinFound = cms.int32( 3 ),
    Epsilon = cms.double( -0.001 ),
    ShareFrac = cms.double( 0.19 ),
    allowFirstHitShare = cms.bool( True ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    newQuality = cms.string( "confirmed" ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    hasSelector = cms.vint32( 0, 0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    writeOnlyTrkQuals = cms.bool( False ),
    makeReKeyedSeeds = cms.untracked.bool( False ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" )
)
process.hltEgammaEleGsfTrackIso = cms.EDProducer( "EgammaHLTElectronTrackIsolationProducers",
    electronProducer = cms.InputTag( "hltEgammaGsfElectrons" ),
    trackProducer = cms.InputTag( "hltMergedTracks" ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    beamSpotProducer = cms.InputTag( "hltOnlineBeamSpot" ),
    egTrkIsoPtMin = cms.double( 1.0 ),
    egTrkIsoConeSize = cms.double( 0.2 ),
    egTrkIsoZSpan = cms.double( 0.15 ),
    egTrkIsoRSpan = cms.double( 999999.0 ),
    egTrkIsoVetoConeSizeBarrel = cms.double( 0.03 ),
    egTrkIsoVetoConeSizeEndcap = cms.double( 0.03 ),
    egTrkIsoStripBarrel = cms.double( 0.01 ),
    egTrkIsoStripEndcap = cms.double( 0.01 ),
    useGsfTrack = cms.bool( True ),
    useSCRefs = cms.bool( True )
)
process.hltEle30WPTightGsfTrackIsoFilter = cms.EDFilter( "HLTEgammaGenericQuadraticEtaFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle30WPTightGsfDphiFilter" ),
    varTag = cms.InputTag( "hltEgammaEleGsfTrackIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    etaBoundaryEB12 = cms.double( 1.0 ),
    etaBoundaryEE12 = cms.double( 2.1 ),
    thrRegularEB1 = cms.vdouble( 2.0 ),
    thrRegularEE1 = cms.vdouble( -0.363 ),
    thrOverEEB1 = cms.vdouble( 0.0 ),
    thrOverEEE1 = cms.vdouble( 0.025 ),
    thrOverE2EB1 = cms.vdouble( 0.0 ),
    thrOverE2EE1 = cms.vdouble( 0.0 ),
    thrRegularEB2 = cms.vdouble( 2.0 ),
    thrRegularEE2 = cms.vdouble( 0.702 ),
    thrOverEEB2 = cms.vdouble( 0.0 ),
    thrOverEEE2 = cms.vdouble( 0.025 ),
    thrOverE2EB2 = cms.vdouble( 0.0 ),
    thrOverE2EE2 = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.03, 0.04, 0.114, 0.032 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.0, 1.479, 2.1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltPreEle32WPTightGsf = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltEG32L1SingleEGOrEtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleEGOrFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 32.0 ),
    etcutEE = cms.double( 32.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEle32WPTightClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG32L1SingleEGOrEtFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.0105 ),
    thrRegularEE = cms.vdouble( 0.0305 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightHEFilter = cms.EDFilter( "HLTEgammaGenericQuadraticEtaFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightClusterShapeFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    etaBoundaryEB12 = cms.double( 1.0 ),
    etaBoundaryEE12 = cms.double( 2.1 ),
    thrRegularEB1 = cms.vdouble( 1.0 ),
    thrRegularEE1 = cms.vdouble( 3.0 ),
    thrOverEEB1 = cms.vdouble( 0.06 ),
    thrOverEEE1 = cms.vdouble( 0.03 ),
    thrOverE2EB1 = cms.vdouble( 0.0 ),
    thrOverE2EE1 = cms.vdouble( 0.0 ),
    thrRegularEB2 = cms.vdouble( 1.0 ),
    thrRegularEE2 = cms.vdouble( 5.0 ),
    thrOverEEB2 = cms.vdouble( 0.06 ),
    thrOverEEE2 = cms.vdouble( 0.03 ),
    thrOverE2EB2 = cms.vdouble( 0.0 ),
    thrOverE2EE2 = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.066, 0.14, 0.3, 0.5 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.0, 1.479, 2.1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightEcalIsoFilter = cms.EDFilter( "HLTEgammaGenericQuadraticEtaFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightHEFilter" ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIsoDr0p2" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    etaBoundaryEB12 = cms.double( 1.0 ),
    etaBoundaryEE12 = cms.double( 2.1 ),
    thrRegularEB1 = cms.vdouble( 3.0 ),
    thrRegularEE1 = cms.vdouble( 1.0 ),
    thrOverEEB1 = cms.vdouble( 0.01 ),
    thrOverEEE1 = cms.vdouble( 0.025 ),
    thrOverE2EB1 = cms.vdouble( 0.0 ),
    thrOverE2EE1 = cms.vdouble( 0.0 ),
    thrRegularEB2 = cms.vdouble( 3.0 ),
    thrRegularEE2 = cms.vdouble( 2.0 ),
    thrOverEEB2 = cms.vdouble( 0.01 ),
    thrOverEEE2 = cms.vdouble( 0.025 ),
    thrOverE2EB2 = cms.vdouble( 0.0 ),
    thrOverE2EE2 = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.1, 0.08, 0.06, 0.06 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.0, 1.479, 2.1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightHcalIsoFilter = cms.EDFilter( "HLTEgammaGenericQuadraticEtaFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightEcalIsoFilter" ),
    varTag = cms.InputTag( "hltEgammaHcalPFClusterIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    etaBoundaryEB12 = cms.double( 1.0 ),
    etaBoundaryEE12 = cms.double( 2.0 ),
    thrRegularEB1 = cms.vdouble( 4.0 ),
    thrRegularEE1 = cms.vdouble( 1.0 ),
    thrOverEEB1 = cms.vdouble( 0.04 ),
    thrOverEEE1 = cms.vdouble( 0.03 ),
    thrOverE2EB1 = cms.vdouble( 0.0 ),
    thrOverE2EE1 = cms.vdouble( 0.0 ),
    thrRegularEB2 = cms.vdouble( 4.0 ),
    thrRegularEE2 = cms.vdouble( 2.0 ),
    thrOverEEB2 = cms.vdouble( 0.04 ),
    thrOverEEE2 = cms.vdouble( 0.03 ),
    thrOverE2EB2 = cms.vdouble( 0.0 ),
    thrOverE2EE2 = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.26, 0.32, 0.4, 0.5 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.0, 1.479, 2.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightPixelMatchFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightHcalIsoFilter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltEle32WPTightPMS2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightPixelMatchFilter" ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVars','s2' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 200.0 ),
    thrRegularEE = cms.vdouble( 45.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightGsfOneOEMinusOneOPFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightPMS2Filter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','OneOESuperMinusOneOP' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.025 ),
    thrRegularEE = cms.vdouble( 0.011 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightGsfMissingHitsFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightGsfOneOEMinusOneOPFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','MissingHits' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 999.0 ),
    thrRegularEE = cms.vdouble( 1.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightGsfDetaFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightGsfMissingHitsFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.003 ),
    thrRegularEE = cms.vdouble( 0.005 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightGsfDphiFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightGsfDetaFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.03 ),
    thrRegularEE = cms.vdouble( 0.023 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle32WPTightGsfTrackIsoFilter = cms.EDFilter( "HLTEgammaGenericQuadraticEtaFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle32WPTightGsfDphiFilter" ),
    varTag = cms.InputTag( "hltEgammaEleGsfTrackIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    etaBoundaryEB12 = cms.double( 1.0 ),
    etaBoundaryEE12 = cms.double( 2.1 ),
    thrRegularEB1 = cms.vdouble( 2.0 ),
    thrRegularEE1 = cms.vdouble( -0.363 ),
    thrOverEEB1 = cms.vdouble( 0.0 ),
    thrOverEEE1 = cms.vdouble( 0.025 ),
    thrOverE2EB1 = cms.vdouble( 0.0 ),
    thrOverE2EE1 = cms.vdouble( 0.0 ),
    thrRegularEB2 = cms.vdouble( 2.0 ),
    thrRegularEE2 = cms.vdouble( 0.702 ),
    thrOverEEB2 = cms.vdouble( 0.0 ),
    thrOverEEE2 = cms.vdouble( 0.025 ),
    thrOverE2EB2 = cms.vdouble( 0.0 ),
    thrOverE2EE2 = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.03, 0.04, 0.114, 0.032 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.0, 1.479, 2.1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltL1sSingleAndDoubleEG = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleLooseIsoEG26er2p5 OR L1_SingleLooseIsoEG26er1p5 OR L1_SingleLooseIsoEG28er2p5 OR L1_SingleLooseIsoEG28er2p1 OR L1_SingleLooseIsoEG28er1p5 OR L1_SingleLooseIsoEG30er2p5 OR L1_SingleLooseIsoEG30er1p5 OR L1_SingleEG26er2p5 OR L1_SingleEG38er2p5 OR L1_SingleEG40er2p5 OR L1_SingleEG42er2p5 OR L1_SingleEG45er2p5 OR L1_SingleEG60 OR L1_SingleEG34er2p5 OR L1_SingleEG36er2p5 OR L1_SingleIsoEG24er2p1 OR L1_SingleIsoEG26er2p1 OR L1_SingleIsoEG28er2p1 OR L1_SingleIsoEG30er2p1 OR L1_SingleIsoEG32er2p1 OR L1_SingleIsoEG26er2p5 OR L1_SingleIsoEG28er2p5 OR L1_SingleIsoEG30er2p5 OR L1_SingleIsoEG32er2p5 OR L1_SingleIsoEG34er2p5 OR L1_DoubleEG_22_10_er2p5 OR L1_DoubleEG_25_12_er2p5 OR L1_DoubleEG_25_14_er2p5 OR L1_DoubleEG_LooseIso22_12_er2p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreEle23Ele12CaloIdLTrackIdLIsoVL = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltEGL1SingleAndDoubleEGOrPairFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1SeedFilterTag = cms.InputTag( "hltL1sSingleAndDoubleEG" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    ncandcut = cms.int32( 2 ),
    doIsolated = cms.bool( False ),
    region_eta_size = cms.double( 0.522 ),
    region_eta_size_ecap = cms.double( 1.0 ),
    region_phi_size = cms.double( 1.044 ),
    barrel_end = cms.double( 1.4791 ),
    endcap_end = cms.double( 2.65 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleAndDoubleEGOrPairFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 23.0 ),
    etcutEE = cms.double( 23.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleAndDoubleEGOrPairFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 12.0 ),
    etcutEE = cms.double( 12.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 2 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.013 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.013 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.13 ),
    thrOverEEE = cms.vdouble( 0.13 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.13 ),
    thrOverEEE = cms.vdouble( 0.13 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEgammaEcalPFClusterIso = cms.EDProducer( "EgammaHLTEcalPFClusterIsolationProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    pfClusterProducer = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.0 ),
    drVetoEndcap = cms.double( 0.0 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg1Filter" ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.5 ),
    thrOverEEE = cms.vdouble( 0.5 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg2Filter" ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.5 ),
    thrOverEEE = cms.vdouble( 0.5 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter" ),
    varTag = cms.InputTag( "hltEgammaHcalPFClusterIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.3 ),
    thrOverEEE = cms.vdouble( 0.3 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter" ),
    varTag = cms.InputTag( "hltEgammaHcalPFClusterIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.3 ),
    thrOverEEE = cms.vdouble( 0.3 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 2 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','OneOESuperMinusOneOP' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 999999.0 ),
    thrRegularEE = cms.vdouble( 999999.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','OneOESuperMinusOneOP' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 999999.0 ),
    thrRegularEE = cms.vdouble( 999999.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.01 ),
    thrRegularEE = cms.vdouble( 0.015 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.01 ),
    thrRegularEE = cms.vdouble( 0.015 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.07 ),
    thrRegularEE = cms.vdouble( 0.1 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.07 ),
    thrRegularEE = cms.vdouble( 0.1 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter" ),
    varTag = cms.InputTag( "hltEgammaEleGsfTrackIso" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.2 ),
    thrOverEEE = cms.vdouble( 0.2 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter" ),
    varTag = cms.InputTag( "hltEgammaEleGsfTrackIso" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.2 ),
    thrOverEEE = cms.vdouble( 0.2 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltL1sSingleEGNonIsoOrWithJetAndTau = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleEG34er2p5 OR L1_SingleEG36er2p5 OR L1_SingleEG38er2p5 OR L1_SingleEG40er2p5 OR L1_SingleJet160er2p5 OR L1_SingleJet180 OR L1_SingleJet200 OR L1_SingleTau120er2p1 OR L1_SingleTau130er2p1 OR L1_SingleEG42er2p5 OR L1_SingleEG45er2p5 OR L1_SingleEG60" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreEle115CaloIdVTGsfTrkIdT = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltEGL1SingleEGNonIsoOrWithJetAndTauFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1SeedFilterTag = cms.InputTag( "hltL1sSingleEGNonIsoOrWithJetAndTau" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    ncandcut = cms.int32( 1 ),
    doIsolated = cms.bool( False ),
    region_eta_size = cms.double( 0.522 ),
    region_eta_size_ecap = cms.double( 1.0 ),
    region_phi_size = cms.double( 1.044 ),
    barrel_end = cms.double( 1.4791 ),
    endcap_end = cms.double( 2.65 )
)
process.hltEG115EtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleEGNonIsoOrWithJetAndTauFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 115.0 ),
    etcutEE = cms.double( 115.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEG115CaloIdVTClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG115EtFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.011 ),
    thrRegularEE = cms.vdouble( 0.03 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEG115CaloIdVTHEFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG115CaloIdVTClusterShapeFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.075 ),
    thrOverEEE = cms.vdouble( 0.075 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle115CaloIdVTPixelMatchFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG115CaloIdVTHEFilter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltEle115CaloIdVTGsfTrkIdTGsfDetaFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle115CaloIdVTPixelMatchFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.007 ),
    thrRegularEE = cms.vdouble( 0.007 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle115CaloIdVTGsfTrkIdTGsfDphiFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle115CaloIdVTGsfTrkIdTGsfDetaFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.07 ),
    thrRegularEE = cms.vdouble( 0.07 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltPreEle135CaloIdVTGsfTrkIdT = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltEG135EtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleEGNonIsoOrWithJetAndTauFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 135.0 ),
    etcutEE = cms.double( 135.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEG135CaloIdVTClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG135EtFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.011 ),
    thrRegularEE = cms.vdouble( 0.03 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEG135CaloIdVTHEFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG135CaloIdVTClusterShapeFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.075 ),
    thrOverEEE = cms.vdouble( 0.075 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle135CaloIdVTPixelMatchFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG135CaloIdVTHEFilter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltEle135CaloIdVTGsfTrkIdTGsfDetaFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle135CaloIdVTPixelMatchFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.007 ),
    thrRegularEE = cms.vdouble( 0.007 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEle135CaloIdVTGsfTrkIdTGsfDphiFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle135CaloIdVTGsfTrkIdTGsfDetaFilter" ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( True ),
    thrRegularEB = cms.vdouble( 0.07 ),
    thrRegularEE = cms.vdouble( 0.07 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltTriggerSummaryAOD = cms.EDProducer( "TriggerSummaryProducerAOD",
    throw = cms.bool( False ),
    processName = cms.string( "@" ),
    moduleLabelPatternsToMatch = cms.vstring( 'hlt*' ),
    moduleLabelPatternsToSkip = cms.vstring(  )
)
process.hltTriggerSummaryRAW = cms.EDProducer( "TriggerSummaryProducerRAW",
    processName = cms.string( "@" )
)

process.HLTL1UnpackerSequence = cms.Sequence( process.hltGtStage2Digis + process.hltGtStage2ObjectMap )
process.HLTBeamSpot = cms.Sequence( process.hltOnlineMetaDataDigis + process.hltOnlineBeamSpot )
process.HLTBeginSequence = cms.Sequence( process.hltTriggerType + process.HLTL1UnpackerSequence + process.HLTBeamSpot )
process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence = cms.Sequence( process.hltEcalDigisLegacy + process.hltEcalDigisSoA + process.hltEcalDigis + process.hltEcalUncalibRecHitSoA + process.hltEcalUncalibRecHit + process.hltEcalDetIdToBeRecovered + process.hltEcalRecHit )
process.HLTPreshowerSequence = cms.Sequence( process.hltEcalPreshowerDigis + process.hltEcalPreshowerRecHit )
process.HLTDoFullUnpackingEgammaEcalSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence + process.HLTPreshowerSequence )
process.HLTPFClusteringForEgamma = cms.Sequence( process.hltRechitInRegionsECAL + process.hltRechitInRegionsES + process.hltParticleFlowRecHitECALL1Seeded + process.hltParticleFlowRecHitPSL1Seeded + process.hltParticleFlowClusterPSL1Seeded + process.hltParticleFlowClusterECALUncorrectedL1Seeded + process.hltParticleFlowClusterECALL1Seeded + process.hltParticleFlowSuperClusterECALL1Seeded )
process.HLTDoLocalHcalSequence = cms.Sequence( process.hltHcalDigis + process.hltHcalDigisSoA + process.hltHbheRecoSoA + process.hltHbhereco + process.hltHfprereco + process.hltHfreco + process.hltHoreco )
process.HLTFastJetForEgamma = cms.Sequence( process.hltFixedGridRhoFastjetAllCaloForMuons )
process.HLTDoLocalPixelSequence = cms.Sequence( process.hltOnlineBeamSpotDevice + process.hltSiPixelClustersSoA + process.hltSiPixelClusters + process.hltSiPixelDigiErrors + process.hltSiPixelRecHitsSoA + process.hltSiPixelRecHits )
process.HLTDoLocalStripSequence = cms.Sequence( process.hltSiStripExcludedFEDListProducer + process.hltSiStripRawToClustersFacility + process.hltMeasurementTrackerEvent )
process.HLTElePixelMatchSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.hltPixelLayerPairs + process.hltPixelLayerTriplets + process.hltEgammaHoverE + process.hltEgammaSuperClustersToPixelMatch + process.hltEleSeedsTrackingRegions + process.hltElePixelHitDoublets + process.hltElePixelHitDoubletsForTriplets + process.hltElePixelHitTriplets + process.hltElePixelSeedsDoublets + process.hltElePixelSeedsTriplets + process.hltElePixelSeedsCombined + process.hltEgammaElectronPixelSeeds + process.hltEgammaPixelMatchVars )
process.HLTEle33CaloIdLSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleAndDoubleEGNonIsoOrWithEG26WithJetAndTauFilter + process.hltEG33EtFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEG33HEFilter + process.hltEgammaClusterShape + process.hltEG33CaloIdLClusterShapeFilter + process.HLTElePixelMatchSequence + process.hltEle33CaloIdLPixelMatchFilter )
process.HLTEle33CaloIdLMWSequence = cms.Sequence( process.HLTEle33CaloIdLSequence + process.hltEle33CaloIdLMWPMS2Filter )
process.HLTPFClusteringForEgammaUnseeded = cms.Sequence( process.hltParticleFlowRecHitECALUnseeded + process.hltParticleFlowRecHitPSUnseeded + process.hltParticleFlowClusterPSUnseeded + process.hltParticleFlowClusterECALUncorrectedUnseeded + process.hltParticleFlowClusterECALUnseeded + process.hltParticleFlowSuperClusterECALUnseeded )
process.HLTElePixelMatchUnseededSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.hltPixelLayerPairs + process.hltPixelLayerTriplets + process.hltEgammaHoverEUnseeded + process.hltEgammaSuperClustersToPixelMatchUnseeded + process.hltEleSeedsTrackingRegionsUnseeded + process.hltElePixelHitDoubletsUnseeded + process.hltElePixelHitDoubletsForTripletsUnseeded + process.hltElePixelHitTripletsUnseeded + process.hltElePixelSeedsDoubletsUnseeded + process.hltElePixelSeedsTripletsUnseeded + process.hltElePixelSeedsCombinedUnseeded + process.hltEgammaElectronPixelSeedsUnseeded + process.hltEgammaPixelMatchVarsUnseeded )
process.HLTDoubleEle33CaloIdLUnseededSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltEgammaCandidatesWrapperUnseeded + process.hltDiEG33EtUnseededFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltDiEG33HEUnseededFilter + process.hltEgammaClusterShapeUnseeded + process.hltDiEG33CaloIdLClusterShapeUnseededFilter + process.HLTElePixelMatchUnseededSequence + process.hltDiEle33CaloIdLPixelMatchUnseededFilter )
process.HLTDoubleEle33CaloIdLMWSequence = cms.Sequence( process.HLTDoubleEle33CaloIdLUnseededSequence + process.hltDiEle33CaloIdLMWPMS2UnseededFilter )
process.HLTEndSequence = cms.Sequence( process.hltBoolEnd )
process.HLTPFHcalClustering = cms.Sequence( process.hltParticleFlowRecHitHBHESoA + process.hltParticleFlowRecHitHBHE + process.hltParticleFlowClusterHBHESoA + process.hltParticleFlowClusterHBHE + process.hltParticleFlowClusterHCAL )
process.HLTGsfElectronSequence = cms.Sequence( process.hltEgammaCkfTrackCandidatesForGSF + process.hltEgammaGsfTracks + process.hltEgammaGsfElectrons + process.hltEgammaGsfTrackVars )
process.HLTRecoPixelTracksSequence = cms.Sequence( process.hltPixelTracksSoA + process.hltPixelTracks )
process.HLTRecopixelvertexingSequence = cms.Sequence( process.HLTRecoPixelTracksSequence + process.hltPixelVerticesSoA + process.hltPixelVertices + process.hltTrimmedPixelVertices )
process.HLTIterativeTrackingIteration0 = cms.Sequence( process.hltIter0PFLowPixelSeedsFromPixelTracks + process.hltIter0PFlowCkfTrackCandidatesMkFitSiPixelHits + process.hltSiStripRecHits + process.hltIter0PFlowCkfTrackCandidatesMkFitSiStripHits + process.hltIter0PFlowCkfTrackCandidatesMkFitEventOfHits + process.hltIter0PFlowCkfTrackCandidatesMkFitSeeds + process.hltIter0PFlowCkfTrackCandidatesMkFit + process.hltIter0PFlowCkfTrackCandidates + process.hltIter0PFlowCtfWithMaterialTracks + process.hltIter0PFlowTrackCutClassifier + process.hltIter0PFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingDoubletRecovery = cms.Sequence( process.hltDoubletRecoveryClustersRefRemoval + process.hltDoubletRecoveryMaskedMeasurementTrackerEvent + process.hltDoubletRecoveryPixelLayersAndRegions + process.hltDoubletRecoveryPFlowPixelClusterCheck + process.hltDoubletRecoveryPFlowPixelHitDoublets + process.hltDoubletRecoveryPFlowPixelSeeds + process.hltDoubletRecoveryPFlowCkfTrackCandidates + process.hltDoubletRecoveryPFlowCtfWithMaterialTracks + process.hltDoubletRecoveryPFlowTrackCutClassifier + process.hltDoubletRecoveryPFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingIter02 = cms.Sequence( process.HLTIterativeTrackingIteration0 + process.HLTIterativeTrackingDoubletRecovery + process.hltMergedTracks )
process.HLTTrackReconstructionForPFNoMu = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecopixelvertexingSequence + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingIter02 )
process.HLTTrackReconstructionForIsoElectronIter02 = cms.Sequence( process.HLTTrackReconstructionForPFNoMu )
process.HLTEle30WPTightGsfSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleEGOrFilter + process.hltEG30L1SingleEGOrEtFilter + process.hltEgammaClusterShape + process.hltEle30WPTightClusterShapeFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEle30WPTightHEFilter + process.hltEgammaEcalPFClusterIsoDr0p2 + process.hltEle30WPTightEcalIsoFilter + process.HLTPFHcalClustering + process.hltEgammaHcalPFClusterIso + process.hltEle30WPTightHcalIsoFilter + process.HLTElePixelMatchSequence + process.hltEle30WPTightPixelMatchFilter + process.hltEle30WPTightPMS2Filter + process.HLTGsfElectronSequence + process.hltEle30WPTightGsfOneOEMinusOneOPFilter + process.hltEle30WPTightGsfMissingHitsFilter + process.hltEle30WPTightGsfDetaFilter + process.hltEle30WPTightGsfDphiFilter + process.HLTTrackReconstructionForIsoElectronIter02 + process.hltEgammaEleGsfTrackIso + process.hltEle30WPTightGsfTrackIsoFilter )
process.HLTEle32WPTightGsfSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleEGOrFilter + process.hltEG32L1SingleEGOrEtFilter + process.hltEgammaClusterShape + process.hltEle32WPTightClusterShapeFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEle32WPTightHEFilter + process.hltEgammaEcalPFClusterIsoDr0p2 + process.hltEle32WPTightEcalIsoFilter + process.HLTPFHcalClustering + process.hltEgammaHcalPFClusterIso + process.hltEle32WPTightHcalIsoFilter + process.HLTElePixelMatchSequence + process.hltEle32WPTightPixelMatchFilter + process.hltEle32WPTightPMS2Filter + process.HLTGsfElectronSequence + process.hltEle32WPTightGsfOneOEMinusOneOPFilter + process.hltEle32WPTightGsfMissingHitsFilter + process.hltEle32WPTightGsfDetaFilter + process.hltEle32WPTightGsfDphiFilter + process.HLTTrackReconstructionForIsoElectronIter02 + process.hltEgammaEleGsfTrackIso + process.hltEle32WPTightGsfTrackIsoFilter )
process.HLTEle23Ele12CaloIdLTrackIdLIsoVLSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleAndDoubleEGOrPairFilter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter + process.hltEgammaClusterShape + process.hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg2Filter + process.hltEgammaEcalPFClusterIso + process.hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter + process.HLTPFHcalClustering + process.hltEgammaHcalPFClusterIso + process.hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter + process.HLTElePixelMatchSequence + process.hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter + process.HLTGsfElectronSequence + process.hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter + process.HLTTrackReconstructionForIsoElectronIter02 + process.hltEgammaEleGsfTrackIso + process.hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg2Filter )
process.HLTEle115CaloIdVTGsfTrkIdTGsfSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleEGNonIsoOrWithJetAndTauFilter + process.hltEG115EtFilter + process.hltEgammaClusterShape + process.hltEG115CaloIdVTClusterShapeFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEG115CaloIdVTHEFilter + process.HLTElePixelMatchSequence + process.hltEle115CaloIdVTPixelMatchFilter + process.HLTGsfElectronSequence + process.hltEle115CaloIdVTGsfTrkIdTGsfDetaFilter + process.hltEle115CaloIdVTGsfTrkIdTGsfDphiFilter )
process.HLTEle135CaloIdVTGsfTrkIdTGsfSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleEGNonIsoOrWithJetAndTauFilter + process.hltEG135EtFilter + process.hltEgammaClusterShape + process.hltEG135CaloIdVTClusterShapeFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEG135CaloIdVTHEFilter + process.HLTElePixelMatchSequence + process.hltEle135CaloIdVTPixelMatchFilter + process.HLTGsfElectronSequence + process.hltEle135CaloIdVTGsfTrkIdTGsfDetaFilter + process.hltEle135CaloIdVTGsfTrkIdTGsfDphiFilter )

process.HLTriggerFirstPath = cms.Path( process.hltGetRaw + process.hltPSetMap + process.hltBoolFalse )
process.HLT_DoubleEle33_CaloIdL_MW_v30 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEGNonIsoOrWithEG26WithJetAndTau + process.hltPreDoubleEle33CaloIdLMW + process.HLTEle33CaloIdLMWSequence + process.HLTDoubleEle33CaloIdLMWSequence + process.HLTEndSequence )
process.HLT_Ele30_WPTight_Gsf_v13 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleEGor + process.hltPreEle30WPTightGsf + process.HLTEle30WPTightGsfSequence + process.HLTEndSequence )
process.HLT_Ele32_WPTight_Gsf_v27 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleEGor + process.hltPreEle32WPTightGsf + process.HLTEle32WPTightGsfSequence + process.HLTEndSequence )
process.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEG + process.hltPreEle23Ele12CaloIdLTrackIdLIsoVL + process.HLTEle23Ele12CaloIdLTrackIdLIsoVLSequence + process.HLTEndSequence )
process.HLT_Ele115_CaloIdVT_GsfTrkIdT_v27 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleEGNonIsoOrWithJetAndTau + process.hltPreEle115CaloIdVTGsfTrkIdT + process.HLTEle115CaloIdVTGsfTrkIdTGsfSequence + process.HLTEndSequence )
process.HLT_Ele135_CaloIdVT_GsfTrkIdT_v20 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleEGNonIsoOrWithJetAndTau + process.hltPreEle135CaloIdVTGsfTrkIdT + process.HLTEle135CaloIdVTGsfTrkIdTGsfSequence + process.HLTEndSequence )
process.HLTriggerFinalPath = cms.Path( process.hltGtStage2Digis + process.hltTriggerSummaryAOD + process.hltTriggerSummaryRAW + process.hltBoolFalse )


process.schedule = cms.Schedule( *(process.HLTriggerFirstPath, process.HLT_DoubleEle33_CaloIdL_MW_v30, process.HLT_Ele30_WPTight_Gsf_v13, process.HLT_Ele32_WPTight_Gsf_v27, process.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v31, process.HLT_Ele115_CaloIdVT_GsfTrkIdT_v27, process.HLT_Ele135_CaloIdVT_GsfTrkIdT_v20, process.HLTriggerFinalPath, ))


# source module (EDM inputs)
process.source = cms.Source( "PoolSource",
    fileNames = cms.untracked.vstring(
        'file:RelVal_Raw_GRun_DATA.root',
    ),
    inputCommands = cms.untracked.vstring(
        'keep *'
    )
)

# force the use of a specific HLT prescale column
if 'PrescaleService' in process.__dict__:
    process.PrescaleService.forceDefault     = True
    process.PrescaleService.lvl1DefaultLabel = '2p0E34+ZeroBias+HLTPhysics'

# limit the number of events to be processed
process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32( 100 )
)

# enable TrigReport, TimeReport and MultiThreading
process.options.wantSummary = True
process.options.numberOfThreads = 4
process.options.numberOfStreams = 0

# override the GlobalTag, connection string and pfnPrefix
if 'GlobalTag' in process.__dict__:
    from Configuration.AlCa.GlobalTag import GlobalTag as customiseGlobalTag
    process.GlobalTag = customiseGlobalTag(process.GlobalTag, globaltag = '150X_dataRun3_HLT_v1')

# show summaries from trigger analysers used at HLT
if 'MessageLogger' in process.__dict__:
    process.MessageLogger.TriggerSummaryProducerAOD = cms.untracked.PSet()
    process.MessageLogger.L1GtTrigReport = cms.untracked.PSet()
    process.MessageLogger.L1TGlobalSummary = cms.untracked.PSet()
    process.MessageLogger.HLTrigReport = cms.untracked.PSet()
    process.MessageLogger.FastReport = cms.untracked.PSet()
    process.MessageLogger.ThroughputService = cms.untracked.PSet()

# load the DQMStore and DQMRootOutputModule
process.load( "DQMServices.Core.DQMStore_cfi" )

process.dqmOutput = cms.OutputModule("DQMRootOutputModule",
    fileName = cms.untracked.string("DQMIO.root")
)

process.DQMOutput = cms.EndPath( process.dqmOutput )
process.schedule.append( process.DQMOutput )

# add specific customizations
_customInfo = {}
_customInfo['menuType'  ]= "GRun"
_customInfo['globalTags']= {}
_customInfo['globalTags'][True ] = "auto:run3_hlt_GRun"
_customInfo['globalTags'][False] = "auto:run3_mc_GRun"
_customInfo['inputFiles']={}
_customInfo['inputFiles'][True]  = "file:RelVal_Raw_GRun_DATA.root"
_customInfo['inputFiles'][False] = "file:RelVal_Raw_GRun_MC.root"
_customInfo['maxEvents' ]=  100
_customInfo['globalTag' ]= "150X_dataRun3_HLT_v1"
_customInfo['inputFile' ]=  ['file:RelVal_Raw_GRun_DATA.root']
_customInfo['realData'  ]=  True

from HLTrigger.Configuration.customizeHLTforALL import customizeHLTforAll
process = customizeHLTforAll(process,"GRun",_customInfo)

from HLTrigger.Configuration.customizeHLTforCMSSW import customizeHLTforCMSSW
process = customizeHLTforCMSSW(process,"GRun")

# Eras-based customisations
from HLTrigger.Configuration.Eras import modifyHLTforEras
modifyHLTforEras(process)

#User-defined customization functions
from HLTrigger.Configuration.customizeHLTfor2025Studies import customizeHLTfor2024L1TMenu
process = customizeHLTfor2024L1TMenu(process)
from HLTrigger.Configuration.customizeHLTfor2025Studies import customizeHLTfor2025Studies
process = customizeHLTfor2025Studies(process)

